# Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: documentation

on:
  push:
    branches:
    - master

jobs:
  checks:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: yarn

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.17.1'

      - name: Install License Checker
        working-directory: tools/license-checker/
        run: ./install-skywalking-eyes.sh

      - name: Check License Headers
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run license:check

      # Speed up builds by caching node_modules
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Build repo
        working-directory: js/sdks
        run: |
          npx lerna bootstrap
          npm run compile:release

      - name: Install Dependencies
        working-directory: docs/
        run: yarn install
#      - name: Set env.BRANCH
#        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3 | cut -d'-' -f 2)" >> $GITHUB_ENV
#      - name: Cut new docs for version branch
#        run: yarn run docusaurus docs:version $BRANCH

      - name: Test Build
        working-directory: docs/
        run: yarn run build

  gh-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      LOCAL_FILES_TO_COPY: ./build/
      AWS_DEFAULT_REGION: us-east-1
      AWS_S3_BUCKET: lunasec-docs/docs
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      # Speed up builds by caching node_modules
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Build repo
        working-directory: js/sdks
        run: |
          npx lerna bootstrap --ci
          npm run compile:release
      - name: Install Dependencies
        working-directory: docs/
        run: yarn install
#      - name: Set env.BRANCH
#        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3 | cut -d'-' -f 2)" >> $GITHUB_ENV
#      - name: Cut new docs for version branch
#        run: yarn run docusaurus docs:version $BRANCH
# TODO (cthompson) push commit with the version changes to master?
      - name: Run Build
        working-directory: docs/
        run: yarn run build

      - name: Copy to S3
        run: ../.github/copy-docs-to-s3.sh
        working-directory: docs/
        shell: bash

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: always()
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_TITLE: Documentation Build ${{ job.status }}
          SLACK_COLOR: ${{ job.status }}
