# Copyright 2021 by LunaSec (owned by Refinery Labs, Inc)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: [master, '**']
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: 'false'

jobs:
  integration-test:
    runs-on: ubuntu-latest
    env:
      # avoid warnings like "tput: No value for $TERM and no -T specified"
      TERM: xterm

    steps:
    - uses: actions/checkout@v2

    - name: install yarn
      run: npm i -g yarn

    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: yarn

    - uses: actions/setup-go@v2
      with:
        go-version: '^1.17.1'

    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled != 'false' }}
      timeout-minutes: 15

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

#    - uses: whoan/docker-build-with-cache-action@v5
#      with:
#        username: ${{ secrets.DOCKERHUB_USERNAME }}
#        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
#        compose_file: docker-compose.yaml > docker-compose.ci.yaml
#
#    - uses: actions/setup-go@v2
#      with:
#        go-version: '^1.17.1'
#
#    # Cache the license checking tool
#    - uses: actions/cache@v2
#      with:
#        path: |
#          tools/license-checker
#        key: ${{ runner.os }}-modules-${{ hashFiles('tools/license-checker/**') }}
#
#    - name: Install License Checker
#      working-directory: tools/license-checker/
#      run: ./install-skywalking-eyes.sh
#
#    - name: Check License Headers
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: npm run license:check

    - name: run golang tests
      working-directory: go/
      run: go test -cover ./...

    - name: lerna bootstrap
      run: npx lerna bootstrap

    - name: setup lunasec cli
      run: yarn run lunasec:setup

    - name: run e2e tests
      run: yarn run lunasec start --no-sudo=true --local-build=true --env ci

    - name: docker logs
      if: always()
      run: .github/print-docker-logs.sh
      shell: bash

    - name: docker compose logs
      if: always()
      run: docker-compose logs

    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: cypress-recording
        path: /videos/secure_components_spec.ts.mp4

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      if: always()
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: PR Build ${{ github.head_ref }} ${{ job.status }}
        SLACK_COLOR: ${{ job.status }}
