/*
 * Copyright 2022 by LunaSec (owned by Refinery Labs, Inc)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import os from 'os';
import path from 'path';

import { db } from '../database/db';
import { VulnerabilityLoader } from '../utils/vulnerabilityLoader';

export class Vulnerability {
  static async updateVulnDb() {
    const grypeDbPath = path.join(os.homedir(), '.cache/grype/db/3/vulnerability.db');
    const vulnMap = await VulnerabilityLoader.loadVulnerabilities(grypeDbPath);
    // todo: move to dedicated sql files
    // do NOT use template strings
    const upsertVulnsStatement = `INSERT INTO vulnerabilities(
                            name,
                            namespace, 
                            name_namespaced, 
                            related_vulnerabilities, 
                            data_source, 
                            record_source, 
                            severity, 
                            urls, 
                            description,
                            pkgs
                        ) VALUES ($1)
                        ON CONFLICT (name_namespaced) DO UPDATE
                        SET 
                            related_vulnerabilities = EXCLUDED.related_vulnerabilities,
                            data_source = EXCLUDED.related_vulnerabilities,
                            record_source = EXCLUDED.record_source,
                            severity = EXCLUDED.severity,
                            urls = EXCLUDED.urls,
                            description = EXCLUDED.description,
                            pkgs = EXCLUDED.pkgs
                        ;`;

    await db.none(upsertVulnsStatement, Object.values(vulnMap));
    console.log('donezo');
  }
}
