// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gql

import (
	"context"
	"encoding/json"
	"time"

	"github.com/Khan/genqlient/graphql"
	"github.com/google/uuid"
	"github.com/lunasec-io/lunasec/lunatrace/gogen/gql/types"
)

type Affected_range_type_comparison_exp struct {
	Eq      *types.AffectedRangeType  `json:"_eq,omitempty"`
	Gt      *types.AffectedRangeType  `json:"_gt,omitempty"`
	Gte     *types.AffectedRangeType  `json:"_gte,omitempty"`
	In      []types.AffectedRangeType `json:"_in,omitempty"`
	Is_null *bool                     `json:"_is_null,omitempty"`
	Lt      *types.AffectedRangeType  `json:"_lt,omitempty"`
	Lte     *types.AffectedRangeType  `json:"_lte,omitempty"`
	Neq     *types.AffectedRangeType  `json:"_neq,omitempty"`
	Nin     []types.AffectedRangeType `json:"_nin,omitempty"`
}

// GetEq returns Affected_range_type_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetEq() *types.AffectedRangeType { return v.Eq }

// GetGt returns Affected_range_type_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetGt() *types.AffectedRangeType { return v.Gt }

// GetGte returns Affected_range_type_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetGte() *types.AffectedRangeType { return v.Gte }

// GetIn returns Affected_range_type_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetIn() []types.AffectedRangeType { return v.In }

// GetIs_null returns Affected_range_type_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Affected_range_type_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetLt() *types.AffectedRangeType { return v.Lt }

// GetLte returns Affected_range_type_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetLte() *types.AffectedRangeType { return v.Lte }

// GetNeq returns Affected_range_type_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetNeq() *types.AffectedRangeType { return v.Neq }

// GetNin returns Affected_range_type_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Affected_range_type_comparison_exp) GetNin() []types.AffectedRangeType { return v.Nin }

type Analysis_finding_source_enum string

const (
	Analysis_finding_source_enumSemgrepImportedCalled Analysis_finding_source_enum = "semgrep_imported_called"
)

type Analysis_finding_source_enum_comparison_exp struct {
	Eq      *Analysis_finding_source_enum  `json:"_eq,omitempty"`
	In      []Analysis_finding_source_enum `json:"_in,omitempty"`
	Is_null *bool                          `json:"_is_null,omitempty"`
	Neq     *Analysis_finding_source_enum  `json:"_neq,omitempty"`
	Nin     []Analysis_finding_source_enum `json:"_nin,omitempty"`
}

// GetEq returns Analysis_finding_source_enum_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Analysis_finding_source_enum_comparison_exp) GetEq() *Analysis_finding_source_enum {
	return v.Eq
}

// GetIn returns Analysis_finding_source_enum_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Analysis_finding_source_enum_comparison_exp) GetIn() []Analysis_finding_source_enum {
	return v.In
}

// GetIs_null returns Analysis_finding_source_enum_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Analysis_finding_source_enum_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetNeq returns Analysis_finding_source_enum_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Analysis_finding_source_enum_comparison_exp) GetNeq() *Analysis_finding_source_enum {
	return v.Neq
}

// GetNin returns Analysis_finding_source_enum_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Analysis_finding_source_enum_comparison_exp) GetNin() []Analysis_finding_source_enum {
	return v.Nin
}

type Analysis_finding_type_enum string

const (
	Analysis_finding_type_enumError         Analysis_finding_type_enum = "error"
	Analysis_finding_type_enumNotVulnerable Analysis_finding_type_enum = "not_vulnerable"
	Analysis_finding_type_enumUnknown       Analysis_finding_type_enum = "unknown"
	Analysis_finding_type_enumVulnerable    Analysis_finding_type_enum = "vulnerable"
)

type Analysis_finding_type_enum_comparison_exp struct {
	Eq      *Analysis_finding_type_enum  `json:"_eq,omitempty"`
	In      []Analysis_finding_type_enum `json:"_in,omitempty"`
	Is_null *bool                        `json:"_is_null,omitempty"`
	Neq     *Analysis_finding_type_enum  `json:"_neq,omitempty"`
	Nin     []Analysis_finding_type_enum `json:"_nin,omitempty"`
}

// GetEq returns Analysis_finding_type_enum_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Analysis_finding_type_enum_comparison_exp) GetEq() *Analysis_finding_type_enum { return v.Eq }

// GetIn returns Analysis_finding_type_enum_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Analysis_finding_type_enum_comparison_exp) GetIn() []Analysis_finding_type_enum { return v.In }

// GetIs_null returns Analysis_finding_type_enum_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Analysis_finding_type_enum_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetNeq returns Analysis_finding_type_enum_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Analysis_finding_type_enum_comparison_exp) GetNeq() *Analysis_finding_type_enum {
	return v.Neq
}

// GetNin returns Analysis_finding_type_enum_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Analysis_finding_type_enum_comparison_exp) GetNin() []Analysis_finding_type_enum {
	return v.Nin
}

type Analysis_manifest_dependency_edge_result_arr_rel_insert_input struct {
	Data        []*Analysis_manifest_dependency_edge_result_insert_input `json:"data,omitempty"`
	On_conflict *Analysis_manifest_dependency_edge_result_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Analysis_manifest_dependency_edge_result_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_arr_rel_insert_input) GetData() []*Analysis_manifest_dependency_edge_result_insert_input {
	return v.Data
}

// GetOn_conflict returns Analysis_manifest_dependency_edge_result_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_arr_rel_insert_input) GetOn_conflict() *Analysis_manifest_dependency_edge_result_on_conflict {
	return v.On_conflict
}

type Analysis_manifest_dependency_edge_result_bool_exp struct {
	And                         []*Analysis_manifest_dependency_edge_result_bool_exp        `json:"_and,omitempty"`
	Not                         *Analysis_manifest_dependency_edge_result_bool_exp          `json:"_not,omitempty"`
	Or                          []*Analysis_manifest_dependency_edge_result_bool_exp        `json:"_or,omitempty"`
	Created_at                  *Timestamptz_comparison_exp                                 `json:"created_at,omitempty"`
	Finding_source              *Analysis_finding_source_enum_comparison_exp                `json:"finding_source,omitempty"`
	Finding_source_version      *Int_comparison_exp                                         `json:"finding_source_version,omitempty"`
	Finding_type                *Analysis_finding_type_enum_comparison_exp                  `json:"finding_type,omitempty"`
	Id                          *Uuid_comparison_exp                                        `json:"id,omitempty"`
	Locations                   *Analysis_manifest_dependency_edge_result_location_bool_exp `json:"locations,omitempty"`
	Manifest_dependency_edge    *Manifest_dependency_edge_bool_exp                          `json:"manifest_dependency_edge,omitempty"`
	Manifest_dependency_edge_id *Uuid_comparison_exp                                        `json:"manifest_dependency_edge_id,omitempty"`
	Output                      *Jsonb_comparison_exp                                       `json:"output,omitempty"`
	Vulnerability               *Vulnerability_bool_exp                                     `json:"vulnerability,omitempty"`
	Vulnerability_id            *Uuid_comparison_exp                                        `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Analysis_manifest_dependency_edge_result_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetAnd() []*Analysis_manifest_dependency_edge_result_bool_exp {
	return v.And
}

// GetNot returns Analysis_manifest_dependency_edge_result_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetNot() *Analysis_manifest_dependency_edge_result_bool_exp {
	return v.Not
}

// GetOr returns Analysis_manifest_dependency_edge_result_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetOr() []*Analysis_manifest_dependency_edge_result_bool_exp {
	return v.Or
}

// GetCreated_at returns Analysis_manifest_dependency_edge_result_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetCreated_at() *Timestamptz_comparison_exp {
	return v.Created_at
}

// GetFinding_source returns Analysis_manifest_dependency_edge_result_bool_exp.Finding_source, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetFinding_source() *Analysis_finding_source_enum_comparison_exp {
	return v.Finding_source
}

// GetFinding_source_version returns Analysis_manifest_dependency_edge_result_bool_exp.Finding_source_version, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetFinding_source_version() *Int_comparison_exp {
	return v.Finding_source_version
}

// GetFinding_type returns Analysis_manifest_dependency_edge_result_bool_exp.Finding_type, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetFinding_type() *Analysis_finding_type_enum_comparison_exp {
	return v.Finding_type
}

// GetId returns Analysis_manifest_dependency_edge_result_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLocations returns Analysis_manifest_dependency_edge_result_bool_exp.Locations, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetLocations() *Analysis_manifest_dependency_edge_result_location_bool_exp {
	return v.Locations
}

// GetManifest_dependency_edge returns Analysis_manifest_dependency_edge_result_bool_exp.Manifest_dependency_edge, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetManifest_dependency_edge() *Manifest_dependency_edge_bool_exp {
	return v.Manifest_dependency_edge
}

// GetManifest_dependency_edge_id returns Analysis_manifest_dependency_edge_result_bool_exp.Manifest_dependency_edge_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetManifest_dependency_edge_id() *Uuid_comparison_exp {
	return v.Manifest_dependency_edge_id
}

// GetOutput returns Analysis_manifest_dependency_edge_result_bool_exp.Output, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetOutput() *Jsonb_comparison_exp {
	return v.Output
}

// GetVulnerability returns Analysis_manifest_dependency_edge_result_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Analysis_manifest_dependency_edge_result_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Analysis_manifest_dependency_edge_result_constraint string

const (
	Analysis_manifest_dependency_edge_result_constraintManifestDependencyEdgeResultManifestDependencyEdgeIdVul Analysis_manifest_dependency_edge_result_constraint = "manifest_dependency_edge_result_manifest_dependency_edge_id_vul"
	Analysis_manifest_dependency_edge_result_constraintManifestDependencyEdgeResultPkey                        Analysis_manifest_dependency_edge_result_constraint = "manifest_dependency_edge_result_pkey"
)

type Analysis_manifest_dependency_edge_result_insert_input struct {
	Created_at                  *time.Time                                                              `json:"created_at,omitempty"`
	Finding_source              *Analysis_finding_source_enum                                           `json:"finding_source,omitempty"`
	Finding_source_version      *int                                                                    `json:"finding_source_version,omitempty"`
	Finding_type                *Analysis_finding_type_enum                                             `json:"finding_type,omitempty"`
	Id                          *uuid.UUID                                                              `json:"id,omitempty"`
	Locations                   *Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input `json:"locations,omitempty"`
	Manifest_dependency_edge    *Manifest_dependency_edge_obj_rel_insert_input                          `json:"manifest_dependency_edge,omitempty"`
	Manifest_dependency_edge_id *uuid.UUID                                                              `json:"manifest_dependency_edge_id,omitempty"`
	Output                      *json.RawMessage                                                        `json:"output,omitempty"`
	Vulnerability               *Vulnerability_obj_rel_insert_input                                     `json:"vulnerability,omitempty"`
	Vulnerability_id            *uuid.UUID                                                              `json:"vulnerability_id,omitempty"`
}

// GetCreated_at returns Analysis_manifest_dependency_edge_result_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetCreated_at() *time.Time {
	return v.Created_at
}

// GetFinding_source returns Analysis_manifest_dependency_edge_result_insert_input.Finding_source, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetFinding_source() *Analysis_finding_source_enum {
	return v.Finding_source
}

// GetFinding_source_version returns Analysis_manifest_dependency_edge_result_insert_input.Finding_source_version, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetFinding_source_version() *int {
	return v.Finding_source_version
}

// GetFinding_type returns Analysis_manifest_dependency_edge_result_insert_input.Finding_type, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetFinding_type() *Analysis_finding_type_enum {
	return v.Finding_type
}

// GetId returns Analysis_manifest_dependency_edge_result_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLocations returns Analysis_manifest_dependency_edge_result_insert_input.Locations, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetLocations() *Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input {
	return v.Locations
}

// GetManifest_dependency_edge returns Analysis_manifest_dependency_edge_result_insert_input.Manifest_dependency_edge, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetManifest_dependency_edge() *Manifest_dependency_edge_obj_rel_insert_input {
	return v.Manifest_dependency_edge
}

// GetManifest_dependency_edge_id returns Analysis_manifest_dependency_edge_result_insert_input.Manifest_dependency_edge_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetManifest_dependency_edge_id() *uuid.UUID {
	return v.Manifest_dependency_edge_id
}

// GetOutput returns Analysis_manifest_dependency_edge_result_insert_input.Output, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetOutput() *json.RawMessage {
	return v.Output
}

// GetVulnerability returns Analysis_manifest_dependency_edge_result_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Analysis_manifest_dependency_edge_result_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input struct {
	Data        []*Analysis_manifest_dependency_edge_result_location_insert_input `json:"data,omitempty"`
	On_conflict *Analysis_manifest_dependency_edge_result_location_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input) GetData() []*Analysis_manifest_dependency_edge_result_location_insert_input {
	return v.Data
}

// GetOn_conflict returns Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_arr_rel_insert_input) GetOn_conflict() *Analysis_manifest_dependency_edge_result_location_on_conflict {
	return v.On_conflict
}

type Analysis_manifest_dependency_edge_result_location_bool_exp struct {
	And                                []*Analysis_manifest_dependency_edge_result_location_bool_exp `json:"_and,omitempty"`
	Not                                *Analysis_manifest_dependency_edge_result_location_bool_exp   `json:"_not,omitempty"`
	Or                                 []*Analysis_manifest_dependency_edge_result_location_bool_exp `json:"_or,omitempty"`
	End_column                         *Int_comparison_exp                                           `json:"end_column,omitempty"`
	End_row                            *Int_comparison_exp                                           `json:"end_row,omitempty"`
	Id                                 *Uuid_comparison_exp                                          `json:"id,omitempty"`
	Manifest_dependency_edge_result_id *Uuid_comparison_exp                                          `json:"manifest_dependency_edge_result_id,omitempty"`
	Path                               *String_comparison_exp                                        `json:"path,omitempty"`
	Start_column                       *Int_comparison_exp                                           `json:"start_column,omitempty"`
	Start_row                          *Int_comparison_exp                                           `json:"start_row,omitempty"`
}

// GetAnd returns Analysis_manifest_dependency_edge_result_location_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetAnd() []*Analysis_manifest_dependency_edge_result_location_bool_exp {
	return v.And
}

// GetNot returns Analysis_manifest_dependency_edge_result_location_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetNot() *Analysis_manifest_dependency_edge_result_location_bool_exp {
	return v.Not
}

// GetOr returns Analysis_manifest_dependency_edge_result_location_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetOr() []*Analysis_manifest_dependency_edge_result_location_bool_exp {
	return v.Or
}

// GetEnd_column returns Analysis_manifest_dependency_edge_result_location_bool_exp.End_column, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetEnd_column() *Int_comparison_exp {
	return v.End_column
}

// GetEnd_row returns Analysis_manifest_dependency_edge_result_location_bool_exp.End_row, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetEnd_row() *Int_comparison_exp {
	return v.End_row
}

// GetId returns Analysis_manifest_dependency_edge_result_location_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetId() *Uuid_comparison_exp {
	return v.Id
}

// GetManifest_dependency_edge_result_id returns Analysis_manifest_dependency_edge_result_location_bool_exp.Manifest_dependency_edge_result_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetManifest_dependency_edge_result_id() *Uuid_comparison_exp {
	return v.Manifest_dependency_edge_result_id
}

// GetPath returns Analysis_manifest_dependency_edge_result_location_bool_exp.Path, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetPath() *String_comparison_exp {
	return v.Path
}

// GetStart_column returns Analysis_manifest_dependency_edge_result_location_bool_exp.Start_column, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetStart_column() *Int_comparison_exp {
	return v.Start_column
}

// GetStart_row returns Analysis_manifest_dependency_edge_result_location_bool_exp.Start_row, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_bool_exp) GetStart_row() *Int_comparison_exp {
	return v.Start_row
}

type Analysis_manifest_dependency_edge_result_location_constraint string

const (
	Analysis_manifest_dependency_edge_result_location_constraintManifestDependencyEdgeResultLocationPkey Analysis_manifest_dependency_edge_result_location_constraint = "manifest_dependency_edge_result_location_pkey"
)

type Analysis_manifest_dependency_edge_result_location_insert_input struct {
	End_column                         *int       `json:"end_column,omitempty"`
	End_row                            *int       `json:"end_row,omitempty"`
	Id                                 *uuid.UUID `json:"id,omitempty"`
	Manifest_dependency_edge_result_id *uuid.UUID `json:"manifest_dependency_edge_result_id,omitempty"`
	Path                               *string    `json:"path,omitempty"`
	Start_column                       *int       `json:"start_column,omitempty"`
	Start_row                          *int       `json:"start_row,omitempty"`
}

// GetEnd_column returns Analysis_manifest_dependency_edge_result_location_insert_input.End_column, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetEnd_column() *int {
	return v.End_column
}

// GetEnd_row returns Analysis_manifest_dependency_edge_result_location_insert_input.End_row, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetEnd_row() *int {
	return v.End_row
}

// GetId returns Analysis_manifest_dependency_edge_result_location_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetId() *uuid.UUID {
	return v.Id
}

// GetManifest_dependency_edge_result_id returns Analysis_manifest_dependency_edge_result_location_insert_input.Manifest_dependency_edge_result_id, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetManifest_dependency_edge_result_id() *uuid.UUID {
	return v.Manifest_dependency_edge_result_id
}

// GetPath returns Analysis_manifest_dependency_edge_result_location_insert_input.Path, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetPath() *string {
	return v.Path
}

// GetStart_column returns Analysis_manifest_dependency_edge_result_location_insert_input.Start_column, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetStart_column() *int {
	return v.Start_column
}

// GetStart_row returns Analysis_manifest_dependency_edge_result_location_insert_input.Start_row, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_insert_input) GetStart_row() *int {
	return v.Start_row
}

type Analysis_manifest_dependency_edge_result_location_on_conflict struct {
	Constraint     Analysis_manifest_dependency_edge_result_location_constraint      `json:"constraint,omitempty"`
	Update_columns []Analysis_manifest_dependency_edge_result_location_update_column `json:"update_columns,omitempty"`
	Where          *Analysis_manifest_dependency_edge_result_location_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Analysis_manifest_dependency_edge_result_location_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_on_conflict) GetConstraint() Analysis_manifest_dependency_edge_result_location_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Analysis_manifest_dependency_edge_result_location_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_on_conflict) GetUpdate_columns() []Analysis_manifest_dependency_edge_result_location_update_column {
	return v.Update_columns
}

// GetWhere returns Analysis_manifest_dependency_edge_result_location_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_location_on_conflict) GetWhere() *Analysis_manifest_dependency_edge_result_location_bool_exp {
	return v.Where
}

type Analysis_manifest_dependency_edge_result_location_update_column string

const (
	Analysis_manifest_dependency_edge_result_location_update_columnEndColumn                      Analysis_manifest_dependency_edge_result_location_update_column = "end_column"
	Analysis_manifest_dependency_edge_result_location_update_columnEndRow                         Analysis_manifest_dependency_edge_result_location_update_column = "end_row"
	Analysis_manifest_dependency_edge_result_location_update_columnId                             Analysis_manifest_dependency_edge_result_location_update_column = "id"
	Analysis_manifest_dependency_edge_result_location_update_columnManifestDependencyEdgeResultId Analysis_manifest_dependency_edge_result_location_update_column = "manifest_dependency_edge_result_id"
	Analysis_manifest_dependency_edge_result_location_update_columnPath                           Analysis_manifest_dependency_edge_result_location_update_column = "path"
	Analysis_manifest_dependency_edge_result_location_update_columnStartColumn                    Analysis_manifest_dependency_edge_result_location_update_column = "start_column"
	Analysis_manifest_dependency_edge_result_location_update_columnStartRow                       Analysis_manifest_dependency_edge_result_location_update_column = "start_row"
)

type Analysis_manifest_dependency_edge_result_on_conflict struct {
	Constraint     Analysis_manifest_dependency_edge_result_constraint      `json:"constraint,omitempty"`
	Update_columns []Analysis_manifest_dependency_edge_result_update_column `json:"update_columns,omitempty"`
	Where          *Analysis_manifest_dependency_edge_result_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Analysis_manifest_dependency_edge_result_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_on_conflict) GetConstraint() Analysis_manifest_dependency_edge_result_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Analysis_manifest_dependency_edge_result_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_on_conflict) GetUpdate_columns() []Analysis_manifest_dependency_edge_result_update_column {
	return v.Update_columns
}

// GetWhere returns Analysis_manifest_dependency_edge_result_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Analysis_manifest_dependency_edge_result_on_conflict) GetWhere() *Analysis_manifest_dependency_edge_result_bool_exp {
	return v.Where
}

type Analysis_manifest_dependency_edge_result_update_column string

const (
	Analysis_manifest_dependency_edge_result_update_columnCreatedAt                Analysis_manifest_dependency_edge_result_update_column = "created_at"
	Analysis_manifest_dependency_edge_result_update_columnFindingSource            Analysis_manifest_dependency_edge_result_update_column = "finding_source"
	Analysis_manifest_dependency_edge_result_update_columnFindingSourceVersion     Analysis_manifest_dependency_edge_result_update_column = "finding_source_version"
	Analysis_manifest_dependency_edge_result_update_columnFindingType              Analysis_manifest_dependency_edge_result_update_column = "finding_type"
	Analysis_manifest_dependency_edge_result_update_columnId                       Analysis_manifest_dependency_edge_result_update_column = "id"
	Analysis_manifest_dependency_edge_result_update_columnManifestDependencyEdgeId Analysis_manifest_dependency_edge_result_update_column = "manifest_dependency_edge_id"
	Analysis_manifest_dependency_edge_result_update_columnOutput                   Analysis_manifest_dependency_edge_result_update_column = "output"
	Analysis_manifest_dependency_edge_result_update_columnVulnerabilityId          Analysis_manifest_dependency_edge_result_update_column = "vulnerability_id"
)

type Bigint_comparison_exp struct {
	Eq      *int64  `json:"_eq,omitempty"`
	Gt      *int64  `json:"_gt,omitempty"`
	Gte     *int64  `json:"_gte,omitempty"`
	In      []int64 `json:"_in,omitempty"`
	Is_null *bool   `json:"_is_null,omitempty"`
	Lt      *int64  `json:"_lt,omitempty"`
	Lte     *int64  `json:"_lte,omitempty"`
	Neq     *int64  `json:"_neq,omitempty"`
	Nin     []int64 `json:"_nin,omitempty"`
}

// GetEq returns Bigint_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetEq() *int64 { return v.Eq }

// GetGt returns Bigint_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetGt() *int64 { return v.Gt }

// GetGte returns Bigint_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetGte() *int64 { return v.Gte }

// GetIn returns Bigint_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetIn() []int64 { return v.In }

// GetIs_null returns Bigint_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Bigint_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetLt() *int64 { return v.Lt }

// GetLte returns Bigint_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetLte() *int64 { return v.Lte }

// GetNeq returns Bigint_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetNeq() *int64 { return v.Neq }

// GetNin returns Bigint_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Bigint_comparison_exp) GetNin() []int64 { return v.Nin }

type Boolean_comparison_exp struct {
	Eq      *bool  `json:"_eq,omitempty"`
	Gt      *bool  `json:"_gt,omitempty"`
	Gte     *bool  `json:"_gte,omitempty"`
	In      []bool `json:"_in,omitempty"`
	Is_null *bool  `json:"_is_null,omitempty"`
	Lt      *bool  `json:"_lt,omitempty"`
	Lte     *bool  `json:"_lte,omitempty"`
	Neq     *bool  `json:"_neq,omitempty"`
	Nin     []bool `json:"_nin,omitempty"`
}

// GetEq returns Boolean_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetEq() *bool { return v.Eq }

// GetGt returns Boolean_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetGt() *bool { return v.Gt }

// GetGte returns Boolean_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetGte() *bool { return v.Gte }

// GetIn returns Boolean_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetIn() []bool { return v.In }

// GetIs_null returns Boolean_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Boolean_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetLt() *bool { return v.Lt }

// GetLte returns Boolean_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetLte() *bool { return v.Lte }

// GetNeq returns Boolean_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetNeq() *bool { return v.Neq }

// GetNin returns Boolean_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Boolean_comparison_exp) GetNin() []bool { return v.Nin }

type Build_dependency_relationship_arr_rel_insert_input struct {
	Data        []*Build_dependency_relationship_insert_input `json:"data,omitempty"`
	On_conflict *Build_dependency_relationship_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Build_dependency_relationship_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_arr_rel_insert_input) GetData() []*Build_dependency_relationship_insert_input {
	return v.Data
}

// GetOn_conflict returns Build_dependency_relationship_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_arr_rel_insert_input) GetOn_conflict() *Build_dependency_relationship_on_conflict {
	return v.On_conflict
}

type Build_dependency_relationship_bool_exp struct {
	And                         []*Build_dependency_relationship_bool_exp `json:"_and,omitempty"`
	Not                         *Build_dependency_relationship_bool_exp   `json:"_not,omitempty"`
	Or                          []*Build_dependency_relationship_bool_exp `json:"_or,omitempty"`
	Build                       *Builds_bool_exp                          `json:"build,omitempty"`
	Build_id                    *Uuid_comparison_exp                      `json:"build_id,omitempty"`
	Depended_by_relationship    *Build_dependency_relationship_bool_exp   `json:"depended_by_relationship,omitempty"`
	Depended_by_relationship_id *Uuid_comparison_exp                      `json:"depended_by_relationship_id,omitempty"`
	Id                          *Uuid_comparison_exp                      `json:"id,omitempty"`
	Labels                      *Jsonb_comparison_exp                     `json:"labels,omitempty"`
	Project_path                *String_comparison_exp                    `json:"project_path,omitempty"`
	Range                       *String_comparison_exp                    `json:"range,omitempty"`
	Release                     *Package_release_bool_exp                 `json:"release,omitempty"`
	Release_id                  *Uuid_comparison_exp                      `json:"release_id,omitempty"`
}

// GetAnd returns Build_dependency_relationship_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetAnd() []*Build_dependency_relationship_bool_exp {
	return v.And
}

// GetNot returns Build_dependency_relationship_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetNot() *Build_dependency_relationship_bool_exp {
	return v.Not
}

// GetOr returns Build_dependency_relationship_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetOr() []*Build_dependency_relationship_bool_exp {
	return v.Or
}

// GetBuild returns Build_dependency_relationship_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Build_dependency_relationship_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetBuild_id() *Uuid_comparison_exp {
	return v.Build_id
}

// GetDepended_by_relationship returns Build_dependency_relationship_bool_exp.Depended_by_relationship, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetDepended_by_relationship() *Build_dependency_relationship_bool_exp {
	return v.Depended_by_relationship
}

// GetDepended_by_relationship_id returns Build_dependency_relationship_bool_exp.Depended_by_relationship_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetDepended_by_relationship_id() *Uuid_comparison_exp {
	return v.Depended_by_relationship_id
}

// GetId returns Build_dependency_relationship_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLabels returns Build_dependency_relationship_bool_exp.Labels, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetLabels() *Jsonb_comparison_exp { return v.Labels }

// GetProject_path returns Build_dependency_relationship_bool_exp.Project_path, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetProject_path() *String_comparison_exp {
	return v.Project_path
}

// GetRange returns Build_dependency_relationship_bool_exp.Range, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetRange() *String_comparison_exp { return v.Range }

// GetRelease returns Build_dependency_relationship_bool_exp.Release, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetRelease() *Package_release_bool_exp {
	return v.Release
}

// GetRelease_id returns Build_dependency_relationship_bool_exp.Release_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_bool_exp) GetRelease_id() *Uuid_comparison_exp {
	return v.Release_id
}

type Build_dependency_relationship_constraint string

const (
	Build_dependency_relationship_constraintBuildDependencyRelationshipPkey Build_dependency_relationship_constraint = "build_dependency_relationship_pkey"
)

type Build_dependency_relationship_insert_input struct {
	Build                       *Builds_obj_rel_insert_input                        `json:"build,omitempty"`
	Build_id                    *uuid.UUID                                          `json:"build_id,omitempty"`
	Depended_by_relationship    *Build_dependency_relationship_obj_rel_insert_input `json:"depended_by_relationship,omitempty"`
	Depended_by_relationship_id *uuid.UUID                                          `json:"depended_by_relationship_id,omitempty"`
	Id                          *uuid.UUID                                          `json:"id,omitempty"`
	Labels                      *json.RawMessage                                    `json:"labels,omitempty"`
	Project_path                *string                                             `json:"project_path,omitempty"`
	Range                       *string                                             `json:"range,omitempty"`
	Release                     *Package_release_obj_rel_insert_input               `json:"release,omitempty"`
	Release_id                  *uuid.UUID                                          `json:"release_id,omitempty"`
}

// GetBuild returns Build_dependency_relationship_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetBuild() *Builds_obj_rel_insert_input {
	return v.Build
}

// GetBuild_id returns Build_dependency_relationship_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetDepended_by_relationship returns Build_dependency_relationship_insert_input.Depended_by_relationship, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetDepended_by_relationship() *Build_dependency_relationship_obj_rel_insert_input {
	return v.Depended_by_relationship
}

// GetDepended_by_relationship_id returns Build_dependency_relationship_insert_input.Depended_by_relationship_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetDepended_by_relationship_id() *uuid.UUID {
	return v.Depended_by_relationship_id
}

// GetId returns Build_dependency_relationship_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLabels returns Build_dependency_relationship_insert_input.Labels, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetLabels() *json.RawMessage { return v.Labels }

// GetProject_path returns Build_dependency_relationship_insert_input.Project_path, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetProject_path() *string { return v.Project_path }

// GetRange returns Build_dependency_relationship_insert_input.Range, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetRange() *string { return v.Range }

// GetRelease returns Build_dependency_relationship_insert_input.Release, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetRelease() *Package_release_obj_rel_insert_input {
	return v.Release
}

// GetRelease_id returns Build_dependency_relationship_insert_input.Release_id, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_insert_input) GetRelease_id() *uuid.UUID { return v.Release_id }

type Build_dependency_relationship_obj_rel_insert_input struct {
	Data        *Build_dependency_relationship_insert_input `json:"data,omitempty"`
	On_conflict *Build_dependency_relationship_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Build_dependency_relationship_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_obj_rel_insert_input) GetData() *Build_dependency_relationship_insert_input {
	return v.Data
}

// GetOn_conflict returns Build_dependency_relationship_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_obj_rel_insert_input) GetOn_conflict() *Build_dependency_relationship_on_conflict {
	return v.On_conflict
}

type Build_dependency_relationship_on_conflict struct {
	Constraint     Build_dependency_relationship_constraint      `json:"constraint,omitempty"`
	Update_columns []Build_dependency_relationship_update_column `json:"update_columns,omitempty"`
	Where          *Build_dependency_relationship_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Build_dependency_relationship_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_on_conflict) GetConstraint() Build_dependency_relationship_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Build_dependency_relationship_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_on_conflict) GetUpdate_columns() []Build_dependency_relationship_update_column {
	return v.Update_columns
}

// GetWhere returns Build_dependency_relationship_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Build_dependency_relationship_on_conflict) GetWhere() *Build_dependency_relationship_bool_exp {
	return v.Where
}

type Build_dependency_relationship_update_column string

const (
	Build_dependency_relationship_update_columnBuildId                  Build_dependency_relationship_update_column = "build_id"
	Build_dependency_relationship_update_columnDependedByRelationshipId Build_dependency_relationship_update_column = "depended_by_relationship_id"
	Build_dependency_relationship_update_columnId                       Build_dependency_relationship_update_column = "id"
	Build_dependency_relationship_update_columnLabels                   Build_dependency_relationship_update_column = "labels"
	Build_dependency_relationship_update_columnProjectPath              Build_dependency_relationship_update_column = "project_path"
	Build_dependency_relationship_update_columnRange                    Build_dependency_relationship_update_column = "range"
	Build_dependency_relationship_update_columnReleaseId                Build_dependency_relationship_update_column = "release_id"
)

type Build_log_arr_rel_insert_input struct {
	Data        []*Build_log_insert_input `json:"data,omitempty"`
	On_conflict *Build_log_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Build_log_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Build_log_arr_rel_insert_input) GetData() []*Build_log_insert_input { return v.Data }

// GetOn_conflict returns Build_log_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Build_log_arr_rel_insert_input) GetOn_conflict() *Build_log_on_conflict {
	return v.On_conflict
}

type Build_log_bool_exp struct {
	And        []*Build_log_bool_exp            `json:"_and,omitempty"`
	Not        *Build_log_bool_exp              `json:"_not,omitempty"`
	Or         []*Build_log_bool_exp            `json:"_or,omitempty"`
	Build      *Builds_bool_exp                 `json:"build,omitempty"`
	Build_id   *Uuid_comparison_exp             `json:"build_id,omitempty"`
	Created_at *Timestamptz_comparison_exp      `json:"created_at,omitempty"`
	Id         *Uuid_comparison_exp             `json:"id,omitempty"`
	Message    *String_comparison_exp           `json:"message,omitempty"`
	State      *Build_state_enum_comparison_exp `json:"state,omitempty"`
}

// GetAnd returns Build_log_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetAnd() []*Build_log_bool_exp { return v.And }

// GetNot returns Build_log_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetNot() *Build_log_bool_exp { return v.Not }

// GetOr returns Build_log_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetOr() []*Build_log_bool_exp { return v.Or }

// GetBuild returns Build_log_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Build_log_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetBuild_id() *Uuid_comparison_exp { return v.Build_id }

// GetCreated_at returns Build_log_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetId returns Build_log_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetMessage returns Build_log_bool_exp.Message, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetMessage() *String_comparison_exp { return v.Message }

// GetState returns Build_log_bool_exp.State, and is useful for accessing the field via an interface.
func (v *Build_log_bool_exp) GetState() *Build_state_enum_comparison_exp { return v.State }

type Build_log_constraint string

const (
	Build_log_constraintBuildLogPkey Build_log_constraint = "build_log_pkey"
)

type Build_log_insert_input struct {
	Build      *Builds_obj_rel_insert_input `json:"build,omitempty"`
	Build_id   *uuid.UUID                   `json:"build_id,omitempty"`
	Created_at *time.Time                   `json:"created_at,omitempty"`
	Id         *uuid.UUID                   `json:"id,omitempty"`
	Message    *string                      `json:"message,omitempty"`
	State      *Build_state_enum            `json:"state,omitempty"`
}

// GetBuild returns Build_log_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetBuild() *Builds_obj_rel_insert_input { return v.Build }

// GetBuild_id returns Build_log_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetCreated_at returns Build_log_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetId returns Build_log_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetId() *uuid.UUID { return v.Id }

// GetMessage returns Build_log_insert_input.Message, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetMessage() *string { return v.Message }

// GetState returns Build_log_insert_input.State, and is useful for accessing the field via an interface.
func (v *Build_log_insert_input) GetState() *Build_state_enum { return v.State }

type Build_log_on_conflict struct {
	Constraint     Build_log_constraint      `json:"constraint,omitempty"`
	Update_columns []Build_log_update_column `json:"update_columns,omitempty"`
	Where          *Build_log_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Build_log_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Build_log_on_conflict) GetConstraint() Build_log_constraint { return v.Constraint }

// GetUpdate_columns returns Build_log_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Build_log_on_conflict) GetUpdate_columns() []Build_log_update_column {
	return v.Update_columns
}

// GetWhere returns Build_log_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Build_log_on_conflict) GetWhere() *Build_log_bool_exp { return v.Where }

type Build_log_update_column string

const (
	Build_log_update_columnPlaceholder Build_log_update_column = "_PLACEHOLDER"
)

type Build_state_enum string

const (
	Build_state_enumSnapshotCompleted     Build_state_enum = "snapshot_completed"
	Build_state_enumSnapshotFailed        Build_state_enum = "snapshot_failed"
	Build_state_enumSnapshotQueued        Build_state_enum = "snapshot_queued"
	Build_state_enumSnapshotScanCompleted Build_state_enum = "snapshot_scan_completed"
	Build_state_enumSnapshotScanFailed    Build_state_enum = "snapshot_scan_failed"
	Build_state_enumSnapshotScanQueued    Build_state_enum = "snapshot_scan_queued"
	Build_state_enumSnapshotScanStarted   Build_state_enum = "snapshot_scan_started"
	Build_state_enumSnapshotStarted       Build_state_enum = "snapshot_started"
)

type Build_state_enum_comparison_exp struct {
	Eq      *Build_state_enum  `json:"_eq,omitempty"`
	In      []Build_state_enum `json:"_in,omitempty"`
	Is_null *bool              `json:"_is_null,omitempty"`
	Neq     *Build_state_enum  `json:"_neq,omitempty"`
	Nin     []Build_state_enum `json:"_nin,omitempty"`
}

// GetEq returns Build_state_enum_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Build_state_enum_comparison_exp) GetEq() *Build_state_enum { return v.Eq }

// GetIn returns Build_state_enum_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Build_state_enum_comparison_exp) GetIn() []Build_state_enum { return v.In }

// GetIs_null returns Build_state_enum_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Build_state_enum_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetNeq returns Build_state_enum_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Build_state_enum_comparison_exp) GetNeq() *Build_state_enum { return v.Neq }

// GetNin returns Build_state_enum_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Build_state_enum_comparison_exp) GetNin() []Build_state_enum { return v.Nin }

type Builds_arr_rel_insert_input struct {
	Data        []*Builds_insert_input `json:"data,omitempty"`
	On_conflict *Builds_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Builds_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Builds_arr_rel_insert_input) GetData() []*Builds_insert_input { return v.Data }

// GetOn_conflict returns Builds_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Builds_arr_rel_insert_input) GetOn_conflict() *Builds_on_conflict { return v.On_conflict }

type Builds_bool_exp struct {
	And                            []*Builds_bool_exp                      `json:"_and,omitempty"`
	Not                            *Builds_bool_exp                        `json:"_not,omitempty"`
	Or                             []*Builds_bool_exp                      `json:"_or,omitempty"`
	Agent_access_token             *Uuid_comparison_exp                    `json:"agent_access_token,omitempty"`
	Build_dependency_relationships *Build_dependency_relationship_bool_exp `json:"build_dependency_relationships,omitempty"`
	Build_logs                     *Build_log_bool_exp                     `json:"build_logs,omitempty"`
	Build_number                   *Int_comparison_exp                     `json:"build_number,omitempty"`
	Created_at                     *Timestamptz_comparison_exp             `json:"created_at,omitempty"`
	Existing_github_check_id       *Bigint_comparison_exp                  `json:"existing_github_check_id,omitempty"`
	Existing_github_review_id      *String_comparison_exp                  `json:"existing_github_review_id,omitempty"`
	Findings                       *Findings_bool_exp                      `json:"findings,omitempty"`
	Git_branch                     *String_comparison_exp                  `json:"git_branch,omitempty"`
	Git_hash                       *String_comparison_exp                  `json:"git_hash,omitempty"`
	Git_remote                     *String_comparison_exp                  `json:"git_remote,omitempty"`
	Id                             *Uuid_comparison_exp                    `json:"id,omitempty"`
	Manifests                      *Manifests_bool_exp                     `json:"manifests,omitempty"`
	Project                        *Projects_bool_exp                      `json:"project,omitempty"`
	Project_id                     *Uuid_comparison_exp                    `json:"project_id,omitempty"`
	Pull_request_id                *String_comparison_exp                  `json:"pull_request_id,omitempty"`
	Resolved_manifests             *Resolved_manifest_bool_exp             `json:"resolved_manifests,omitempty"`
	S3_url                         *String_comparison_exp                  `json:"s3_url,omitempty"`
	Scans                          *Scans_bool_exp                         `json:"scans,omitempty"`
	Source_type                    *Builds_source_type_comparison_exp      `json:"source_type,omitempty"`
}

// GetAnd returns Builds_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetAnd() []*Builds_bool_exp { return v.And }

// GetNot returns Builds_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetNot() *Builds_bool_exp { return v.Not }

// GetOr returns Builds_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetOr() []*Builds_bool_exp { return v.Or }

// GetAgent_access_token returns Builds_bool_exp.Agent_access_token, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetAgent_access_token() *Uuid_comparison_exp { return v.Agent_access_token }

// GetBuild_dependency_relationships returns Builds_bool_exp.Build_dependency_relationships, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetBuild_dependency_relationships() *Build_dependency_relationship_bool_exp {
	return v.Build_dependency_relationships
}

// GetBuild_logs returns Builds_bool_exp.Build_logs, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetBuild_logs() *Build_log_bool_exp { return v.Build_logs }

// GetBuild_number returns Builds_bool_exp.Build_number, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetBuild_number() *Int_comparison_exp { return v.Build_number }

// GetCreated_at returns Builds_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetExisting_github_check_id returns Builds_bool_exp.Existing_github_check_id, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetExisting_github_check_id() *Bigint_comparison_exp {
	return v.Existing_github_check_id
}

// GetExisting_github_review_id returns Builds_bool_exp.Existing_github_review_id, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetExisting_github_review_id() *String_comparison_exp {
	return v.Existing_github_review_id
}

// GetFindings returns Builds_bool_exp.Findings, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetFindings() *Findings_bool_exp { return v.Findings }

// GetGit_branch returns Builds_bool_exp.Git_branch, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetGit_branch() *String_comparison_exp { return v.Git_branch }

// GetGit_hash returns Builds_bool_exp.Git_hash, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetGit_hash() *String_comparison_exp { return v.Git_hash }

// GetGit_remote returns Builds_bool_exp.Git_remote, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetGit_remote() *String_comparison_exp { return v.Git_remote }

// GetId returns Builds_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetManifests returns Builds_bool_exp.Manifests, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetManifests() *Manifests_bool_exp { return v.Manifests }

// GetProject returns Builds_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_id returns Builds_bool_exp.Project_id, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetProject_id() *Uuid_comparison_exp { return v.Project_id }

// GetPull_request_id returns Builds_bool_exp.Pull_request_id, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetPull_request_id() *String_comparison_exp { return v.Pull_request_id }

// GetResolved_manifests returns Builds_bool_exp.Resolved_manifests, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetResolved_manifests() *Resolved_manifest_bool_exp {
	return v.Resolved_manifests
}

// GetS3_url returns Builds_bool_exp.S3_url, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetS3_url() *String_comparison_exp { return v.S3_url }

// GetScans returns Builds_bool_exp.Scans, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetScans() *Scans_bool_exp { return v.Scans }

// GetSource_type returns Builds_bool_exp.Source_type, and is useful for accessing the field via an interface.
func (v *Builds_bool_exp) GetSource_type() *Builds_source_type_comparison_exp { return v.Source_type }

type Builds_constraint string

const (
	Builds_constraintBuildsAgentAccessTokenKey     Builds_constraint = "builds_agent_access_token_key"
	Builds_constraintBuildsBuildNumberProjectIdKey Builds_constraint = "builds_build_number_project_id_key"
	Builds_constraintBuildsPkey                    Builds_constraint = "builds_pkey"
)

type Builds_insert_input struct {
	Agent_access_token             *uuid.UUID                                          `json:"agent_access_token,omitempty"`
	Build_dependency_relationships *Build_dependency_relationship_arr_rel_insert_input `json:"build_dependency_relationships,omitempty"`
	Build_logs                     *Build_log_arr_rel_insert_input                     `json:"build_logs,omitempty"`
	Build_number                   *int                                                `json:"build_number,omitempty"`
	Created_at                     *time.Time                                          `json:"created_at,omitempty"`
	Existing_github_check_id       *int64                                              `json:"existing_github_check_id,omitempty"`
	Existing_github_review_id      *string                                             `json:"existing_github_review_id,omitempty"`
	Findings                       *Findings_arr_rel_insert_input                      `json:"findings,omitempty"`
	Git_branch                     *string                                             `json:"git_branch,omitempty"`
	Git_hash                       *string                                             `json:"git_hash,omitempty"`
	Git_remote                     *string                                             `json:"git_remote,omitempty"`
	Id                             *uuid.UUID                                          `json:"id,omitempty"`
	Manifests                      *Manifests_arr_rel_insert_input                     `json:"manifests,omitempty"`
	Project                        *Projects_obj_rel_insert_input                      `json:"project,omitempty"`
	Project_id                     *uuid.UUID                                          `json:"project_id,omitempty"`
	Pull_request_id                *string                                             `json:"pull_request_id,omitempty"`
	Resolved_manifests             *Resolved_manifest_arr_rel_insert_input             `json:"resolved_manifests,omitempty"`
	S3_url                         *string                                             `json:"s3_url,omitempty"`
	Scans                          *Scans_arr_rel_insert_input                         `json:"scans,omitempty"`
	Source_type                    *string                                             `json:"source_type,omitempty"`
}

// GetAgent_access_token returns Builds_insert_input.Agent_access_token, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetAgent_access_token() *uuid.UUID { return v.Agent_access_token }

// GetBuild_dependency_relationships returns Builds_insert_input.Build_dependency_relationships, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetBuild_dependency_relationships() *Build_dependency_relationship_arr_rel_insert_input {
	return v.Build_dependency_relationships
}

// GetBuild_logs returns Builds_insert_input.Build_logs, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetBuild_logs() *Build_log_arr_rel_insert_input { return v.Build_logs }

// GetBuild_number returns Builds_insert_input.Build_number, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetBuild_number() *int { return v.Build_number }

// GetCreated_at returns Builds_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetExisting_github_check_id returns Builds_insert_input.Existing_github_check_id, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetExisting_github_check_id() *int64 { return v.Existing_github_check_id }

// GetExisting_github_review_id returns Builds_insert_input.Existing_github_review_id, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetExisting_github_review_id() *string {
	return v.Existing_github_review_id
}

// GetFindings returns Builds_insert_input.Findings, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetFindings() *Findings_arr_rel_insert_input { return v.Findings }

// GetGit_branch returns Builds_insert_input.Git_branch, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetGit_branch() *string { return v.Git_branch }

// GetGit_hash returns Builds_insert_input.Git_hash, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetGit_hash() *string { return v.Git_hash }

// GetGit_remote returns Builds_insert_input.Git_remote, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetGit_remote() *string { return v.Git_remote }

// GetId returns Builds_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetId() *uuid.UUID { return v.Id }

// GetManifests returns Builds_insert_input.Manifests, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetManifests() *Manifests_arr_rel_insert_input { return v.Manifests }

// GetProject returns Builds_insert_input.Project, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetProject() *Projects_obj_rel_insert_input { return v.Project }

// GetProject_id returns Builds_insert_input.Project_id, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetProject_id() *uuid.UUID { return v.Project_id }

// GetPull_request_id returns Builds_insert_input.Pull_request_id, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetPull_request_id() *string { return v.Pull_request_id }

// GetResolved_manifests returns Builds_insert_input.Resolved_manifests, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetResolved_manifests() *Resolved_manifest_arr_rel_insert_input {
	return v.Resolved_manifests
}

// GetS3_url returns Builds_insert_input.S3_url, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetS3_url() *string { return v.S3_url }

// GetScans returns Builds_insert_input.Scans, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetScans() *Scans_arr_rel_insert_input { return v.Scans }

// GetSource_type returns Builds_insert_input.Source_type, and is useful for accessing the field via an interface.
func (v *Builds_insert_input) GetSource_type() *string { return v.Source_type }

type Builds_obj_rel_insert_input struct {
	Data        *Builds_insert_input `json:"data,omitempty"`
	On_conflict *Builds_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Builds_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Builds_obj_rel_insert_input) GetData() *Builds_insert_input { return v.Data }

// GetOn_conflict returns Builds_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Builds_obj_rel_insert_input) GetOn_conflict() *Builds_on_conflict { return v.On_conflict }

type Builds_on_conflict struct {
	Constraint     Builds_constraint      `json:"constraint,omitempty"`
	Update_columns []Builds_update_column `json:"update_columns,omitempty"`
	Where          *Builds_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Builds_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Builds_on_conflict) GetConstraint() Builds_constraint { return v.Constraint }

// GetUpdate_columns returns Builds_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Builds_on_conflict) GetUpdate_columns() []Builds_update_column { return v.Update_columns }

// GetWhere returns Builds_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Builds_on_conflict) GetWhere() *Builds_bool_exp { return v.Where }

type Builds_source_type_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns Builds_source_type_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns Builds_source_type_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns Builds_source_type_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns Builds_source_type_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns Builds_source_type_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Builds_source_type_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns Builds_source_type_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns Builds_source_type_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns Builds_source_type_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Builds_source_type_comparison_exp) GetNin() []string { return v.Nin }

type Builds_update_column string

const (
	Builds_update_columnAgentAccessToken       Builds_update_column = "agent_access_token"
	Builds_update_columnBuildNumber            Builds_update_column = "build_number"
	Builds_update_columnCreatedAt              Builds_update_column = "created_at"
	Builds_update_columnExistingGithubCheckId  Builds_update_column = "existing_github_check_id"
	Builds_update_columnExistingGithubReviewId Builds_update_column = "existing_github_review_id"
	Builds_update_columnGitBranch              Builds_update_column = "git_branch"
	Builds_update_columnGitHash                Builds_update_column = "git_hash"
	Builds_update_columnGitRemote              Builds_update_column = "git_remote"
	Builds_update_columnId                     Builds_update_column = "id"
	Builds_update_columnProjectId              Builds_update_column = "project_id"
	Builds_update_columnS3Url                  Builds_update_column = "s3_url"
)

type Date_comparison_exp struct {
	Eq      *time.Time  `json:"_eq,omitempty"`
	Gt      *time.Time  `json:"_gt,omitempty"`
	Gte     *time.Time  `json:"_gte,omitempty"`
	In      []time.Time `json:"_in,omitempty"`
	Is_null *bool       `json:"_is_null,omitempty"`
	Lt      *time.Time  `json:"_lt,omitempty"`
	Lte     *time.Time  `json:"_lte,omitempty"`
	Neq     *time.Time  `json:"_neq,omitempty"`
	Nin     []time.Time `json:"_nin,omitempty"`
}

// GetEq returns Date_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetEq() *time.Time { return v.Eq }

// GetGt returns Date_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetGt() *time.Time { return v.Gt }

// GetGte returns Date_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetGte() *time.Time { return v.Gte }

// GetIn returns Date_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetIn() []time.Time { return v.In }

// GetIs_null returns Date_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Date_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetLt() *time.Time { return v.Lt }

// GetLte returns Date_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetLte() *time.Time { return v.Lte }

// GetNeq returns Date_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetNeq() *time.Time { return v.Neq }

// GetNin returns Date_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Date_comparison_exp) GetNin() []time.Time { return v.Nin }

type Default_branch_builds_arr_rel_insert_input struct {
	Data []*Default_branch_builds_insert_input `json:"data,omitempty"`
}

// GetData returns Default_branch_builds_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_arr_rel_insert_input) GetData() []*Default_branch_builds_insert_input {
	return v.Data
}

type Default_branch_builds_bool_exp struct {
	And                       []*Default_branch_builds_bool_exp  `json:"_and,omitempty"`
	Not                       *Default_branch_builds_bool_exp    `json:"_not,omitempty"`
	Or                        []*Default_branch_builds_bool_exp  `json:"_or,omitempty"`
	Build_number              *Int_comparison_exp                `json:"build_number,omitempty"`
	Created_at                *Timestamptz_comparison_exp        `json:"created_at,omitempty"`
	Existing_github_review_id *String_comparison_exp             `json:"existing_github_review_id,omitempty"`
	Findings                  *Findings_bool_exp                 `json:"findings,omitempty"`
	Git_branch                *String_comparison_exp             `json:"git_branch,omitempty"`
	Git_hash                  *String_comparison_exp             `json:"git_hash,omitempty"`
	Git_remote                *String_comparison_exp             `json:"git_remote,omitempty"`
	Id                        *Uuid_comparison_exp               `json:"id,omitempty"`
	Project                   *Projects_bool_exp                 `json:"project,omitempty"`
	Project_id                *Uuid_comparison_exp               `json:"project_id,omitempty"`
	Pull_request_id           *String_comparison_exp             `json:"pull_request_id,omitempty"`
	S3_url                    *String_comparison_exp             `json:"s3_url,omitempty"`
	Scans                     *Scans_bool_exp                    `json:"scans,omitempty"`
	Source_type               *Builds_source_type_comparison_exp `json:"source_type,omitempty"`
}

// GetAnd returns Default_branch_builds_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetAnd() []*Default_branch_builds_bool_exp { return v.And }

// GetNot returns Default_branch_builds_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetNot() *Default_branch_builds_bool_exp { return v.Not }

// GetOr returns Default_branch_builds_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetOr() []*Default_branch_builds_bool_exp { return v.Or }

// GetBuild_number returns Default_branch_builds_bool_exp.Build_number, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetBuild_number() *Int_comparison_exp { return v.Build_number }

// GetCreated_at returns Default_branch_builds_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetCreated_at() *Timestamptz_comparison_exp {
	return v.Created_at
}

// GetExisting_github_review_id returns Default_branch_builds_bool_exp.Existing_github_review_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetExisting_github_review_id() *String_comparison_exp {
	return v.Existing_github_review_id
}

// GetFindings returns Default_branch_builds_bool_exp.Findings, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetFindings() *Findings_bool_exp { return v.Findings }

// GetGit_branch returns Default_branch_builds_bool_exp.Git_branch, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetGit_branch() *String_comparison_exp { return v.Git_branch }

// GetGit_hash returns Default_branch_builds_bool_exp.Git_hash, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetGit_hash() *String_comparison_exp { return v.Git_hash }

// GetGit_remote returns Default_branch_builds_bool_exp.Git_remote, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetGit_remote() *String_comparison_exp { return v.Git_remote }

// GetId returns Default_branch_builds_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetProject returns Default_branch_builds_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_id returns Default_branch_builds_bool_exp.Project_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetProject_id() *Uuid_comparison_exp { return v.Project_id }

// GetPull_request_id returns Default_branch_builds_bool_exp.Pull_request_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetPull_request_id() *String_comparison_exp {
	return v.Pull_request_id
}

// GetS3_url returns Default_branch_builds_bool_exp.S3_url, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetS3_url() *String_comparison_exp { return v.S3_url }

// GetScans returns Default_branch_builds_bool_exp.Scans, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetScans() *Scans_bool_exp { return v.Scans }

// GetSource_type returns Default_branch_builds_bool_exp.Source_type, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_bool_exp) GetSource_type() *Builds_source_type_comparison_exp {
	return v.Source_type
}

type Default_branch_builds_insert_input struct {
	Build_number              *int                           `json:"build_number,omitempty"`
	Created_at                *time.Time                     `json:"created_at,omitempty"`
	Existing_github_review_id *string                        `json:"existing_github_review_id,omitempty"`
	Findings                  *Findings_arr_rel_insert_input `json:"findings,omitempty"`
	Git_branch                *string                        `json:"git_branch,omitempty"`
	Git_hash                  *string                        `json:"git_hash,omitempty"`
	Git_remote                *string                        `json:"git_remote,omitempty"`
	Project                   *Projects_obj_rel_insert_input `json:"project,omitempty"`
	Project_id                *uuid.UUID                     `json:"project_id,omitempty"`
	Pull_request_id           *string                        `json:"pull_request_id,omitempty"`
	S3_url                    *string                        `json:"s3_url,omitempty"`
	Scans                     *Scans_arr_rel_insert_input    `json:"scans,omitempty"`
	Source_type               *string                        `json:"source_type,omitempty"`
}

// GetBuild_number returns Default_branch_builds_insert_input.Build_number, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetBuild_number() *int { return v.Build_number }

// GetCreated_at returns Default_branch_builds_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetExisting_github_review_id returns Default_branch_builds_insert_input.Existing_github_review_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetExisting_github_review_id() *string {
	return v.Existing_github_review_id
}

// GetFindings returns Default_branch_builds_insert_input.Findings, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetFindings() *Findings_arr_rel_insert_input {
	return v.Findings
}

// GetGit_branch returns Default_branch_builds_insert_input.Git_branch, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetGit_branch() *string { return v.Git_branch }

// GetGit_hash returns Default_branch_builds_insert_input.Git_hash, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetGit_hash() *string { return v.Git_hash }

// GetGit_remote returns Default_branch_builds_insert_input.Git_remote, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetGit_remote() *string { return v.Git_remote }

// GetProject returns Default_branch_builds_insert_input.Project, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetProject() *Projects_obj_rel_insert_input {
	return v.Project
}

// GetProject_id returns Default_branch_builds_insert_input.Project_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetProject_id() *uuid.UUID { return v.Project_id }

// GetPull_request_id returns Default_branch_builds_insert_input.Pull_request_id, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetPull_request_id() *string { return v.Pull_request_id }

// GetS3_url returns Default_branch_builds_insert_input.S3_url, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetS3_url() *string { return v.S3_url }

// GetScans returns Default_branch_builds_insert_input.Scans, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetScans() *Scans_arr_rel_insert_input { return v.Scans }

// GetSource_type returns Default_branch_builds_insert_input.Source_type, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_insert_input) GetSource_type() *string { return v.Source_type }

type Default_branch_builds_obj_rel_insert_input struct {
	Data *Default_branch_builds_insert_input `json:"data,omitempty"`
}

// GetData returns Default_branch_builds_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Default_branch_builds_obj_rel_insert_input) GetData() *Default_branch_builds_insert_input {
	return v.Data
}

// DeleteBuildDelete_builds_by_pkBuilds includes the requested fields of the GraphQL type builds.
type DeleteBuildDelete_builds_by_pkBuilds struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns DeleteBuildDelete_builds_by_pkBuilds.Id, and is useful for accessing the field via an interface.
func (v *DeleteBuildDelete_builds_by_pkBuilds) GetId() uuid.UUID { return v.Id }

// DeleteBuildResponse is returned by DeleteBuild on success.
type DeleteBuildResponse struct {
	Delete_builds_by_pk *DeleteBuildDelete_builds_by_pkBuilds `json:"delete_builds_by_pk"`
}

// GetDelete_builds_by_pk returns DeleteBuildResponse.Delete_builds_by_pk, and is useful for accessing the field via an interface.
func (v *DeleteBuildResponse) GetDelete_builds_by_pk() *DeleteBuildDelete_builds_by_pkBuilds {
	return v.Delete_builds_by_pk
}

type Findings_arr_rel_insert_input struct {
	Data        []*Findings_insert_input `json:"data,omitempty"`
	On_conflict *Findings_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Findings_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Findings_arr_rel_insert_input) GetData() []*Findings_insert_input { return v.Data }

// GetOn_conflict returns Findings_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Findings_arr_rel_insert_input) GetOn_conflict() *Findings_on_conflict { return v.On_conflict }

type Findings_bool_exp struct {
	And                  []*Findings_bool_exp            `json:"_and,omitempty"`
	Not                  *Findings_bool_exp              `json:"_not,omitempty"`
	Or                   []*Findings_bool_exp            `json:"_or,omitempty"`
	Build                *Builds_bool_exp                `json:"build,omitempty"`
	Build_id             *Uuid_comparison_exp            `json:"build_id,omitempty"`
	Created_at           *Timestamptz_comparison_exp     `json:"created_at,omitempty"`
	Dedupe_slug          *String_comparison_exp          `json:"dedupe_slug,omitempty"`
	Default_branch_build *Default_branch_builds_bool_exp `json:"default_branch_build,omitempty"`
	Fix_state            *Fix_state_enum_comparison_exp  `json:"fix_state,omitempty"`
	Fix_versions         *Text_comparison_exp            `json:"fix_versions,omitempty"`
	Id                   *Uuid_comparison_exp            `json:"id,omitempty"`
	Language             *String_comparison_exp          `json:"language,omitempty"`
	Locations            *Text_comparison_exp            `json:"locations,omitempty"`
	Matcher              *String_comparison_exp          `json:"matcher,omitempty"`
	Package_name         *String_comparison_exp          `json:"package_name,omitempty"`
	Purl                 *String_comparison_exp          `json:"purl,omitempty"`
	Scan                 *Scans_bool_exp                 `json:"scan,omitempty"`
	Scan_id              *Uuid_comparison_exp            `json:"scan_id,omitempty"`
	Severity             *Severity_enum_comparison_exp   `json:"severity,omitempty"`
	Type                 *String_comparison_exp          `json:"type,omitempty"`
	Updated_at           *Timestamptz_comparison_exp     `json:"updated_at,omitempty"`
	Version              *String_comparison_exp          `json:"version,omitempty"`
	Version_matcher      *String_comparison_exp          `json:"version_matcher,omitempty"`
	Virtual_path         *String_comparison_exp          `json:"virtual_path,omitempty"`
	Vulnerability        *Vulnerability_bool_exp         `json:"vulnerability,omitempty"`
	Vulnerability_id     *Uuid_comparison_exp            `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Findings_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetAnd() []*Findings_bool_exp { return v.And }

// GetNot returns Findings_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetNot() *Findings_bool_exp { return v.Not }

// GetOr returns Findings_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetOr() []*Findings_bool_exp { return v.Or }

// GetBuild returns Findings_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Findings_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetBuild_id() *Uuid_comparison_exp { return v.Build_id }

// GetCreated_at returns Findings_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetDedupe_slug returns Findings_bool_exp.Dedupe_slug, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetDedupe_slug() *String_comparison_exp { return v.Dedupe_slug }

// GetDefault_branch_build returns Findings_bool_exp.Default_branch_build, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetDefault_branch_build() *Default_branch_builds_bool_exp {
	return v.Default_branch_build
}

// GetFix_state returns Findings_bool_exp.Fix_state, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetFix_state() *Fix_state_enum_comparison_exp { return v.Fix_state }

// GetFix_versions returns Findings_bool_exp.Fix_versions, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetFix_versions() *Text_comparison_exp { return v.Fix_versions }

// GetId returns Findings_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLanguage returns Findings_bool_exp.Language, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetLanguage() *String_comparison_exp { return v.Language }

// GetLocations returns Findings_bool_exp.Locations, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetLocations() *Text_comparison_exp { return v.Locations }

// GetMatcher returns Findings_bool_exp.Matcher, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetMatcher() *String_comparison_exp { return v.Matcher }

// GetPackage_name returns Findings_bool_exp.Package_name, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetPackage_name() *String_comparison_exp { return v.Package_name }

// GetPurl returns Findings_bool_exp.Purl, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetPurl() *String_comparison_exp { return v.Purl }

// GetScan returns Findings_bool_exp.Scan, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetScan() *Scans_bool_exp { return v.Scan }

// GetScan_id returns Findings_bool_exp.Scan_id, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetScan_id() *Uuid_comparison_exp { return v.Scan_id }

// GetSeverity returns Findings_bool_exp.Severity, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetSeverity() *Severity_enum_comparison_exp { return v.Severity }

// GetType returns Findings_bool_exp.Type, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetType() *String_comparison_exp { return v.Type }

// GetUpdated_at returns Findings_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetUpdated_at() *Timestamptz_comparison_exp { return v.Updated_at }

// GetVersion returns Findings_bool_exp.Version, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetVersion() *String_comparison_exp { return v.Version }

// GetVersion_matcher returns Findings_bool_exp.Version_matcher, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetVersion_matcher() *String_comparison_exp { return v.Version_matcher }

// GetVirtual_path returns Findings_bool_exp.Virtual_path, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetVirtual_path() *String_comparison_exp { return v.Virtual_path }

// GetVulnerability returns Findings_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetVulnerability() *Vulnerability_bool_exp { return v.Vulnerability }

// GetVulnerability_id returns Findings_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Findings_bool_exp) GetVulnerability_id() *Uuid_comparison_exp { return v.Vulnerability_id }

type Findings_constraint string

const (
	Findings_constraintFindingsDedupeSlugBuildIdKey Findings_constraint = "findings_dedupe_slug_build_id_key"
	Findings_constraintFindingsPkey                 Findings_constraint = "findings_pkey"
)

type Findings_insert_input struct {
	Build                *Builds_obj_rel_insert_input                `json:"build,omitempty"`
	Build_id             *uuid.UUID                                  `json:"build_id,omitempty"`
	Created_at           *time.Time                                  `json:"created_at,omitempty"`
	Dedupe_slug          *string                                     `json:"dedupe_slug,omitempty"`
	Default_branch_build *Default_branch_builds_obj_rel_insert_input `json:"default_branch_build,omitempty"`
	Fix_state            *string                                     `json:"fix_state,omitempty"`
	Fix_versions         *string                                     `json:"fix_versions,omitempty"`
	Id                   *uuid.UUID                                  `json:"id,omitempty"`
	Language             *string                                     `json:"language,omitempty"`
	Locations            *string                                     `json:"locations,omitempty"`
	Matcher              *string                                     `json:"matcher,omitempty"`
	Package_name         *string                                     `json:"package_name,omitempty"`
	Purl                 *string                                     `json:"purl,omitempty"`
	Scan                 *Scans_obj_rel_insert_input                 `json:"scan,omitempty"`
	Scan_id              *uuid.UUID                                  `json:"scan_id,omitempty"`
	Severity             *string                                     `json:"severity,omitempty"`
	Type                 *string                                     `json:"type,omitempty"`
	Updated_at           *time.Time                                  `json:"updated_at,omitempty"`
	Version              *string                                     `json:"version,omitempty"`
	Version_matcher      *string                                     `json:"version_matcher,omitempty"`
	Virtual_path         *string                                     `json:"virtual_path,omitempty"`
	Vulnerability        *Vulnerability_obj_rel_insert_input         `json:"vulnerability,omitempty"`
	Vulnerability_id     *uuid.UUID                                  `json:"vulnerability_id,omitempty"`
}

// GetBuild returns Findings_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetBuild() *Builds_obj_rel_insert_input { return v.Build }

// GetBuild_id returns Findings_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetCreated_at returns Findings_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetDedupe_slug returns Findings_insert_input.Dedupe_slug, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetDedupe_slug() *string { return v.Dedupe_slug }

// GetDefault_branch_build returns Findings_insert_input.Default_branch_build, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetDefault_branch_build() *Default_branch_builds_obj_rel_insert_input {
	return v.Default_branch_build
}

// GetFix_state returns Findings_insert_input.Fix_state, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetFix_state() *string { return v.Fix_state }

// GetFix_versions returns Findings_insert_input.Fix_versions, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetFix_versions() *string { return v.Fix_versions }

// GetId returns Findings_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLanguage returns Findings_insert_input.Language, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetLanguage() *string { return v.Language }

// GetLocations returns Findings_insert_input.Locations, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetLocations() *string { return v.Locations }

// GetMatcher returns Findings_insert_input.Matcher, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetMatcher() *string { return v.Matcher }

// GetPackage_name returns Findings_insert_input.Package_name, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetPackage_name() *string { return v.Package_name }

// GetPurl returns Findings_insert_input.Purl, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetPurl() *string { return v.Purl }

// GetScan returns Findings_insert_input.Scan, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetScan() *Scans_obj_rel_insert_input { return v.Scan }

// GetScan_id returns Findings_insert_input.Scan_id, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetScan_id() *uuid.UUID { return v.Scan_id }

// GetSeverity returns Findings_insert_input.Severity, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetSeverity() *string { return v.Severity }

// GetType returns Findings_insert_input.Type, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetType() *string { return v.Type }

// GetUpdated_at returns Findings_insert_input.Updated_at, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetUpdated_at() *time.Time { return v.Updated_at }

// GetVersion returns Findings_insert_input.Version, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetVersion() *string { return v.Version }

// GetVersion_matcher returns Findings_insert_input.Version_matcher, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetVersion_matcher() *string { return v.Version_matcher }

// GetVirtual_path returns Findings_insert_input.Virtual_path, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetVirtual_path() *string { return v.Virtual_path }

// GetVulnerability returns Findings_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Findings_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Findings_insert_input) GetVulnerability_id() *uuid.UUID { return v.Vulnerability_id }

type Findings_on_conflict struct {
	Constraint     Findings_constraint      `json:"constraint,omitempty"`
	Update_columns []Findings_update_column `json:"update_columns,omitempty"`
	Where          *Findings_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Findings_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Findings_on_conflict) GetConstraint() Findings_constraint { return v.Constraint }

// GetUpdate_columns returns Findings_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Findings_on_conflict) GetUpdate_columns() []Findings_update_column { return v.Update_columns }

// GetWhere returns Findings_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Findings_on_conflict) GetWhere() *Findings_bool_exp { return v.Where }

type Findings_update_column string

const (
	Findings_update_columnBuildId         Findings_update_column = "build_id"
	Findings_update_columnCreatedAt       Findings_update_column = "created_at"
	Findings_update_columnDedupeSlug      Findings_update_column = "dedupe_slug"
	Findings_update_columnFixState        Findings_update_column = "fix_state"
	Findings_update_columnFixVersions     Findings_update_column = "fix_versions"
	Findings_update_columnId              Findings_update_column = "id"
	Findings_update_columnLanguage        Findings_update_column = "language"
	Findings_update_columnLocations       Findings_update_column = "locations"
	Findings_update_columnMatcher         Findings_update_column = "matcher"
	Findings_update_columnPackageName     Findings_update_column = "package_name"
	Findings_update_columnPurl            Findings_update_column = "purl"
	Findings_update_columnScanId          Findings_update_column = "scan_id"
	Findings_update_columnSeverity        Findings_update_column = "severity"
	Findings_update_columnType            Findings_update_column = "type"
	Findings_update_columnUpdatedAt       Findings_update_column = "updated_at"
	Findings_update_columnVersion         Findings_update_column = "version"
	Findings_update_columnVersionMatcher  Findings_update_column = "version_matcher"
	Findings_update_columnVirtualPath     Findings_update_column = "virtual_path"
	Findings_update_columnVulnerabilityId Findings_update_column = "vulnerability_id"
)

type Fix_state_enum_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns Fix_state_enum_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns Fix_state_enum_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns Fix_state_enum_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns Fix_state_enum_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns Fix_state_enum_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Fix_state_enum_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns Fix_state_enum_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns Fix_state_enum_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns Fix_state_enum_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Fix_state_enum_comparison_exp) GetNin() []string { return v.Nin }

type Float_comparison_exp struct {
	Eq      *float64  `json:"_eq,omitempty"`
	Gt      *float64  `json:"_gt,omitempty"`
	Gte     *float64  `json:"_gte,omitempty"`
	In      []float64 `json:"_in,omitempty"`
	Is_null *bool     `json:"_is_null,omitempty"`
	Lt      *float64  `json:"_lt,omitempty"`
	Lte     *float64  `json:"_lte,omitempty"`
	Neq     *float64  `json:"_neq,omitempty"`
	Nin     []float64 `json:"_nin,omitempty"`
}

// GetEq returns Float_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetEq() *float64 { return v.Eq }

// GetGt returns Float_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetGt() *float64 { return v.Gt }

// GetGte returns Float_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetGte() *float64 { return v.Gte }

// GetIn returns Float_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetIn() []float64 { return v.In }

// GetIs_null returns Float_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Float_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetLt() *float64 { return v.Lt }

// GetLte returns Float_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetLte() *float64 { return v.Lte }

// GetNeq returns Float_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetNeq() *float64 { return v.Neq }

// GetNin returns Float_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Float_comparison_exp) GetNin() []float64 { return v.Nin }

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge includes the requested fields of the GraphQL type manifest_dependency_edge.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge struct {
	Child  *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node  `json:"child"`
	Parent *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node `json:"parent"`
}

// GetChild returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge.Child, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge) GetChild() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node {
	return v.Child
}

// GetParent returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge.Parent, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge) GetParent() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node {
	return v.Parent
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node includes the requested fields of the GraphQL type manifest_dependency_node.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node struct {
	Release *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release `json:"release"`
}

// GetRelease returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node.Release, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_node) GetRelease() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release {
	return v.Release
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release includes the requested fields of the GraphQL type package_release.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release struct {
	Package *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage `json:"package"`
}

// GetPackage returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release.Package, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_release) GetPackage() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage {
	return v.Package
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage includes the requested fields of the GraphQL type package.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage struct {
	Name string `json:"name"`
}

// GetName returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage.Name, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeChildManifest_dependency_nodeReleasePackage_releasePackage) GetName() string {
	return v.Name
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node includes the requested fields of the GraphQL type manifest_dependency_node.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node struct {
	Release *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release `json:"release"`
}

// GetRelease returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node.Release, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_node) GetRelease() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release {
	return v.Release
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release includes the requested fields of the GraphQL type package_release.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release struct {
	Upstream_blob_url *string                                                                                                                                     `json:"upstream_blob_url"`
	Mirrored_blob_url *string                                                                                                                                     `json:"mirrored_blob_url"`
	Version           string                                                                                                                                      `json:"version"`
	Package           *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage `json:"package"`
}

// GetUpstream_blob_url returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release.Upstream_blob_url, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release) GetUpstream_blob_url() *string {
	return v.Upstream_blob_url
}

// GetMirrored_blob_url returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release.Mirrored_blob_url, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release) GetMirrored_blob_url() *string {
	return v.Mirrored_blob_url
}

// GetVersion returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release.Version, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release) GetVersion() string {
	return v.Version
}

// GetPackage returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release.Package, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_release) GetPackage() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage {
	return v.Package
}

// GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage includes the requested fields of the GraphQL type package.
type GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage struct {
	Name string `json:"name"`
}

// GetName returns GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage.Name, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edgeParentManifest_dependency_nodeReleasePackage_releasePackage) GetName() string {
	return v.Name
}

// GetManifestDependencyEdgeResponse is returned by GetManifestDependencyEdge on success.
type GetManifestDependencyEdgeResponse struct {
	Manifest_dependency_edge_by_pk *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge `json:"manifest_dependency_edge_by_pk"`
}

// GetManifest_dependency_edge_by_pk returns GetManifestDependencyEdgeResponse.Manifest_dependency_edge_by_pk, and is useful for accessing the field via an interface.
func (v *GetManifestDependencyEdgeResponse) GetManifest_dependency_edge_by_pk() *GetManifestDependencyEdgeManifest_dependency_edge_by_pkManifest_dependency_edge {
	return v.Manifest_dependency_edge_by_pk
}

// GetProjectInfoQueryProject_access_tokens includes the requested fields of the GraphQL type project_access_tokens.
type GetProjectInfoQueryProject_access_tokens struct {
	Project *GetProjectInfoQueryProject_access_tokensProjectProjects `json:"project"`
}

// GetProject returns GetProjectInfoQueryProject_access_tokens.Project, and is useful for accessing the field via an interface.
func (v *GetProjectInfoQueryProject_access_tokens) GetProject() *GetProjectInfoQueryProject_access_tokensProjectProjects {
	return v.Project
}

// GetProjectInfoQueryProject_access_tokensProjectProjects includes the requested fields of the GraphQL type projects.
type GetProjectInfoQueryProject_access_tokensProjectProjects struct {
	Organization_id *uuid.UUID `json:"organization_id"`
	Id              uuid.UUID  `json:"id"`
}

// GetOrganization_id returns GetProjectInfoQueryProject_access_tokensProjectProjects.Organization_id, and is useful for accessing the field via an interface.
func (v *GetProjectInfoQueryProject_access_tokensProjectProjects) GetOrganization_id() *uuid.UUID {
	return v.Organization_id
}

// GetId returns GetProjectInfoQueryProject_access_tokensProjectProjects.Id, and is useful for accessing the field via an interface.
func (v *GetProjectInfoQueryProject_access_tokensProjectProjects) GetId() uuid.UUID { return v.Id }

// GetProjectInfoQueryResponse is returned by GetProjectInfoQuery on success.
type GetProjectInfoQueryResponse struct {
	Project_access_tokens []*GetProjectInfoQueryProject_access_tokens `json:"project_access_tokens"`
}

// GetProject_access_tokens returns GetProjectInfoQueryResponse.Project_access_tokens, and is useful for accessing the field via an interface.
func (v *GetProjectInfoQueryResponse) GetProject_access_tokens() []*GetProjectInfoQueryProject_access_tokens {
	return v.Project_access_tokens
}

// GetVulnerabilityMetadataResponse is returned by GetVulnerabilityMetadata on success.
type GetVulnerabilityMetadataResponse struct {
	Vulnerability_by_pk *GetVulnerabilityMetadataVulnerability_by_pkVulnerability `json:"vulnerability_by_pk"`
}

// GetVulnerability_by_pk returns GetVulnerabilityMetadataResponse.Vulnerability_by_pk, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataResponse) GetVulnerability_by_pk() *GetVulnerabilityMetadataVulnerability_by_pkVulnerability {
	return v.Vulnerability_by_pk
}

// GetVulnerabilityMetadataVulnerability_by_pkVulnerability includes the requested fields of the GraphQL type vulnerability.
type GetVulnerabilityMetadataVulnerability_by_pkVulnerability struct {
	Id         uuid.UUID                                                                                    `json:"id"`
	Source     string                                                                                       `json:"source"`
	Source_id  string                                                                                       `json:"source_id"`
	References []*GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference `json:"references"`
	Details    *string                                                                                      `json:"details"`
	Affected   []*GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected    `json:"affected"`
}

// GetId returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.Id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetId() uuid.UUID { return v.Id }

// GetSource returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.Source, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetSource() string {
	return v.Source
}

// GetSource_id returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.Source_id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetSource_id() string {
	return v.Source_id
}

// GetReferences returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.References, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetReferences() []*GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference {
	return v.References
}

// GetDetails returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.Details, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetDetails() *string {
	return v.Details
}

// GetAffected returns GetVulnerabilityMetadataVulnerability_by_pkVulnerability.Affected, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerability) GetAffected() []*GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected {
	return v.Affected
}

// GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected includes the requested fields of the GraphQL type vulnerability_affected.
type GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected struct {
	Package *GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage `json:"package"`
}

// GetPackage returns GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected.Package, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affected) GetPackage() *GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage {
	return v.Package
}

// GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage includes the requested fields of the GraphQL type package.
type GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage.Id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityAffectedVulnerability_affectedPackage) GetId() uuid.UUID {
	return v.Id
}

// GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference includes the requested fields of the GraphQL type vulnerability_reference.
type GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference struct {
	Url string `json:"url"`
}

// GetUrl returns GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference.Url, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityMetadataVulnerability_by_pkVulnerabilityReferencesVulnerability_reference) GetUrl() string {
	return v.Url
}

// GetVulnerabilityResponse is returned by GetVulnerability on success.
type GetVulnerabilityResponse struct {
	Vulnerability []*GetVulnerabilityVulnerability `json:"vulnerability"`
}

// GetVulnerability returns GetVulnerabilityResponse.Vulnerability, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityResponse) GetVulnerability() []*GetVulnerabilityVulnerability {
	return v.Vulnerability
}

// GetVulnerabilityVulnerability includes the requested fields of the GraphQL type vulnerability.
type GetVulnerabilityVulnerability struct {
	Id          uuid.UUID                                                           `json:"id"`
	Affected    []*GetVulnerabilityVulnerabilityAffectedVulnerability_affected      `json:"affected"`
	Equivalents []*GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent `json:"equivalents"`
	References  []*GetVulnerabilityVulnerabilityReferencesVulnerability_reference   `json:"references"`
	Source      string                                                              `json:"source"`
	Source_id   string                                                              `json:"source_id"`
}

// GetId returns GetVulnerabilityVulnerability.Id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetId() uuid.UUID { return v.Id }

// GetAffected returns GetVulnerabilityVulnerability.Affected, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetAffected() []*GetVulnerabilityVulnerabilityAffectedVulnerability_affected {
	return v.Affected
}

// GetEquivalents returns GetVulnerabilityVulnerability.Equivalents, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetEquivalents() []*GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent {
	return v.Equivalents
}

// GetReferences returns GetVulnerabilityVulnerability.References, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetReferences() []*GetVulnerabilityVulnerabilityReferencesVulnerability_reference {
	return v.References
}

// GetSource returns GetVulnerabilityVulnerability.Source, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetSource() string { return v.Source }

// GetSource_id returns GetVulnerabilityVulnerability.Source_id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerability) GetSource_id() string { return v.Source_id }

// GetVulnerabilityVulnerabilityAffectedVulnerability_affected includes the requested fields of the GraphQL type vulnerability_affected.
type GetVulnerabilityVulnerabilityAffectedVulnerability_affected struct {
	Affected_range_events []*GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event `json:"affected_range_events"`
	Affected_versions     []*GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version         `json:"affected_versions"`
	Package               *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage                                                   `json:"package"`
}

// GetAffected_range_events returns GetVulnerabilityVulnerabilityAffectedVulnerability_affected.Affected_range_events, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affected) GetAffected_range_events() []*GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event {
	return v.Affected_range_events
}

// GetAffected_versions returns GetVulnerabilityVulnerabilityAffectedVulnerability_affected.Affected_versions, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affected) GetAffected_versions() []*GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version {
	return v.Affected_versions
}

// GetPackage returns GetVulnerabilityVulnerabilityAffectedVulnerability_affected.Package, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affected) GetPackage() *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage {
	return v.Package
}

// GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event includes the requested fields of the GraphQL type vulnerability_affected_range_event.
type GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event struct {
	Type    types.AffectedRangeType `json:"type"`
	Event   string                  `json:"event"`
	Version string                  `json:"version"`
}

// GetType returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event.Type, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event) GetType() types.AffectedRangeType {
	return v.Type
}

// GetEvent returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event.Event, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event) GetEvent() string {
	return v.Event
}

// GetVersion returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event.Version, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_range_eventsVulnerability_affected_range_event) GetVersion() string {
	return v.Version
}

// GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version includes the requested fields of the GraphQL type vulnerability_affected_version.
type GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version struct {
	Version string `json:"version"`
}

// GetVersion returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version.Version, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedAffected_versionsVulnerability_affected_version) GetVersion() string {
	return v.Version
}

// GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage includes the requested fields of the GraphQL type package.
type GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage struct {
	Name            string               `json:"name"`
	Package_manager types.PackageManager `json:"package_manager"`
}

// GetName returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage.Name, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage) GetName() string {
	return v.Name
}

// GetPackage_manager returns GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage.Package_manager, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityAffectedVulnerability_affectedPackage) GetPackage_manager() types.PackageManager {
	return v.Package_manager
}

// GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent includes the requested fields of the GraphQL type vulnerability_equivalent.
type GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent struct {
	Vulnerability *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability `json:"vulnerability"`
}

// GetVulnerability returns GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent.Vulnerability, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalent) GetVulnerability() *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability {
	return v.Vulnerability
}

// GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability includes the requested fields of the GraphQL type vulnerability.
type GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability struct {
	Id        uuid.UUID `json:"id"`
	Source    string    `json:"source"`
	Source_id string    `json:"source_id"`
}

// GetId returns GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability.Id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability) GetId() uuid.UUID {
	return v.Id
}

// GetSource returns GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability.Source, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability) GetSource() string {
	return v.Source
}

// GetSource_id returns GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability.Source_id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityEquivalentsVulnerability_equivalentVulnerability) GetSource_id() string {
	return v.Source_id
}

// GetVulnerabilityVulnerabilityReferencesVulnerability_reference includes the requested fields of the GraphQL type vulnerability_reference.
type GetVulnerabilityVulnerabilityReferencesVulnerability_reference struct {
	Id  uuid.UUID `json:"id"`
	Url string    `json:"url"`
}

// GetId returns GetVulnerabilityVulnerabilityReferencesVulnerability_reference.Id, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityReferencesVulnerability_reference) GetId() uuid.UUID {
	return v.Id
}

// GetUrl returns GetVulnerabilityVulnerabilityReferencesVulnerability_reference.Url, and is useful for accessing the field via an interface.
func (v *GetVulnerabilityVulnerabilityReferencesVulnerability_reference) GetUrl() string {
	return v.Url
}

type Github_repositories_arr_rel_insert_input struct {
	Data        []*Github_repositories_insert_input `json:"data,omitempty"`
	On_conflict *Github_repositories_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Github_repositories_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Github_repositories_arr_rel_insert_input) GetData() []*Github_repositories_insert_input {
	return v.Data
}

// GetOn_conflict returns Github_repositories_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Github_repositories_arr_rel_insert_input) GetOn_conflict() *Github_repositories_on_conflict {
	return v.On_conflict
}

type Github_repositories_bool_exp struct {
	And            []*Github_repositories_bool_exp `json:"_and,omitempty"`
	Not            *Github_repositories_bool_exp   `json:"_not,omitempty"`
	Or             []*Github_repositories_bool_exp `json:"_or,omitempty"`
	Default_branch *String_comparison_exp          `json:"default_branch,omitempty"`
	Git_url        *String_comparison_exp          `json:"git_url,omitempty"`
	Github_id      *Int_comparison_exp             `json:"github_id,omitempty"`
	Github_node_id *String_comparison_exp          `json:"github_node_id,omitempty"`
	Id             *Uuid_comparison_exp            `json:"id,omitempty"`
	Project        *Projects_bool_exp              `json:"project,omitempty"`
	Project_id     *Uuid_comparison_exp            `json:"project_id,omitempty"`
	Traits         *Jsonb_comparison_exp           `json:"traits,omitempty"`
}

// GetAnd returns Github_repositories_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetAnd() []*Github_repositories_bool_exp { return v.And }

// GetNot returns Github_repositories_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetNot() *Github_repositories_bool_exp { return v.Not }

// GetOr returns Github_repositories_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetOr() []*Github_repositories_bool_exp { return v.Or }

// GetDefault_branch returns Github_repositories_bool_exp.Default_branch, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetDefault_branch() *String_comparison_exp {
	return v.Default_branch
}

// GetGit_url returns Github_repositories_bool_exp.Git_url, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetGit_url() *String_comparison_exp { return v.Git_url }

// GetGithub_id returns Github_repositories_bool_exp.Github_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetGithub_id() *Int_comparison_exp { return v.Github_id }

// GetGithub_node_id returns Github_repositories_bool_exp.Github_node_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetGithub_node_id() *String_comparison_exp {
	return v.Github_node_id
}

// GetId returns Github_repositories_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetProject returns Github_repositories_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_id returns Github_repositories_bool_exp.Project_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetProject_id() *Uuid_comparison_exp { return v.Project_id }

// GetTraits returns Github_repositories_bool_exp.Traits, and is useful for accessing the field via an interface.
func (v *Github_repositories_bool_exp) GetTraits() *Jsonb_comparison_exp { return v.Traits }

type Github_repositories_constraint string

const (
	Github_repositories_constraintGithubRepositoriesGithubIdKey     Github_repositories_constraint = "github_repositories_github_id_key"
	Github_repositories_constraintGithubRepositoriesGithubNodeIdKey Github_repositories_constraint = "github_repositories_github_node_id_key"
	Github_repositories_constraintGithubRepositoriesPkey            Github_repositories_constraint = "github_repositories_pkey"
)

type Github_repositories_insert_input struct {
	Default_branch *string                        `json:"default_branch,omitempty"`
	Git_url        *string                        `json:"git_url,omitempty"`
	Github_id      *int                           `json:"github_id,omitempty"`
	Github_node_id *string                        `json:"github_node_id,omitempty"`
	Project        *Projects_obj_rel_insert_input `json:"project,omitempty"`
	Project_id     *uuid.UUID                     `json:"project_id,omitempty"`
	Traits         *json.RawMessage               `json:"traits,omitempty"`
}

// GetDefault_branch returns Github_repositories_insert_input.Default_branch, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetDefault_branch() *string { return v.Default_branch }

// GetGit_url returns Github_repositories_insert_input.Git_url, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetGit_url() *string { return v.Git_url }

// GetGithub_id returns Github_repositories_insert_input.Github_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetGithub_id() *int { return v.Github_id }

// GetGithub_node_id returns Github_repositories_insert_input.Github_node_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetGithub_node_id() *string { return v.Github_node_id }

// GetProject returns Github_repositories_insert_input.Project, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetProject() *Projects_obj_rel_insert_input {
	return v.Project
}

// GetProject_id returns Github_repositories_insert_input.Project_id, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetProject_id() *uuid.UUID { return v.Project_id }

// GetTraits returns Github_repositories_insert_input.Traits, and is useful for accessing the field via an interface.
func (v *Github_repositories_insert_input) GetTraits() *json.RawMessage { return v.Traits }

type Github_repositories_obj_rel_insert_input struct {
	Data        *Github_repositories_insert_input `json:"data,omitempty"`
	On_conflict *Github_repositories_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Github_repositories_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Github_repositories_obj_rel_insert_input) GetData() *Github_repositories_insert_input {
	return v.Data
}

// GetOn_conflict returns Github_repositories_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Github_repositories_obj_rel_insert_input) GetOn_conflict() *Github_repositories_on_conflict {
	return v.On_conflict
}

type Github_repositories_on_conflict struct {
	Constraint     Github_repositories_constraint      `json:"constraint,omitempty"`
	Update_columns []Github_repositories_update_column `json:"update_columns,omitempty"`
	Where          *Github_repositories_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Github_repositories_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Github_repositories_on_conflict) GetConstraint() Github_repositories_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Github_repositories_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Github_repositories_on_conflict) GetUpdate_columns() []Github_repositories_update_column {
	return v.Update_columns
}

// GetWhere returns Github_repositories_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Github_repositories_on_conflict) GetWhere() *Github_repositories_bool_exp { return v.Where }

type Github_repositories_update_column string

const (
	Github_repositories_update_columnDefaultBranch Github_repositories_update_column = "default_branch"
	Github_repositories_update_columnGitUrl        Github_repositories_update_column = "git_url"
	Github_repositories_update_columnGithubId      Github_repositories_update_column = "github_id"
	Github_repositories_update_columnGithubNodeId  Github_repositories_update_column = "github_node_id"
	Github_repositories_update_columnProjectId     Github_repositories_update_column = "project_id"
	Github_repositories_update_columnTraits        Github_repositories_update_column = "traits"
)

type Guide_related_guides_arr_rel_insert_input struct {
	Data        []*Guide_related_guides_insert_input `json:"data,omitempty"`
	On_conflict *Guide_related_guides_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Guide_related_guides_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_arr_rel_insert_input) GetData() []*Guide_related_guides_insert_input {
	return v.Data
}

// GetOn_conflict returns Guide_related_guides_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_arr_rel_insert_input) GetOn_conflict() *Guide_related_guides_on_conflict {
	return v.On_conflict
}

type Guide_related_guides_bool_exp struct {
	And                []*Guide_related_guides_bool_exp `json:"_and,omitempty"`
	Not                *Guide_related_guides_bool_exp   `json:"_not,omitempty"`
	Or                 []*Guide_related_guides_bool_exp `json:"_or,omitempty"`
	Created_at         *Timestamptz_comparison_exp      `json:"created_at,omitempty"`
	From_guide_id      *Uuid_comparison_exp             `json:"from_guide_id,omitempty"`
	Guide              *Guides_bool_exp                 `json:"guide,omitempty"`
	Id                 *Uuid_comparison_exp             `json:"id,omitempty"`
	Parent_guide       *Guides_bool_exp                 `json:"parent_guide,omitempty"`
	To_guide_unique_id *String_comparison_exp           `json:"to_guide_unique_id,omitempty"`
	Updated_at         *Timestamptz_comparison_exp      `json:"updated_at,omitempty"`
}

// GetAnd returns Guide_related_guides_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetAnd() []*Guide_related_guides_bool_exp { return v.And }

// GetNot returns Guide_related_guides_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetNot() *Guide_related_guides_bool_exp { return v.Not }

// GetOr returns Guide_related_guides_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetOr() []*Guide_related_guides_bool_exp { return v.Or }

// GetCreated_at returns Guide_related_guides_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetCreated_at() *Timestamptz_comparison_exp {
	return v.Created_at
}

// GetFrom_guide_id returns Guide_related_guides_bool_exp.From_guide_id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetFrom_guide_id() *Uuid_comparison_exp {
	return v.From_guide_id
}

// GetGuide returns Guide_related_guides_bool_exp.Guide, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetGuide() *Guides_bool_exp { return v.Guide }

// GetId returns Guide_related_guides_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetParent_guide returns Guide_related_guides_bool_exp.Parent_guide, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetParent_guide() *Guides_bool_exp { return v.Parent_guide }

// GetTo_guide_unique_id returns Guide_related_guides_bool_exp.To_guide_unique_id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetTo_guide_unique_id() *String_comparison_exp {
	return v.To_guide_unique_id
}

// GetUpdated_at returns Guide_related_guides_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_bool_exp) GetUpdated_at() *Timestamptz_comparison_exp {
	return v.Updated_at
}

type Guide_related_guides_constraint string

const (
	Guide_related_guides_constraintGuideRelatedGuidesPkey   Guide_related_guides_constraint = "guide_related_guides_pkey"
	Guide_related_guides_constraintGuideRelatedGuidesUnique Guide_related_guides_constraint = "guide_related_guides_unique"
)

type Guide_related_guides_insert_input struct {
	Created_at         *time.Time                   `json:"created_at,omitempty"`
	From_guide_id      *uuid.UUID                   `json:"from_guide_id,omitempty"`
	Guide              *Guides_obj_rel_insert_input `json:"guide,omitempty"`
	Id                 *uuid.UUID                   `json:"id,omitempty"`
	Parent_guide       *Guides_obj_rel_insert_input `json:"parent_guide,omitempty"`
	To_guide_unique_id *string                      `json:"to_guide_unique_id,omitempty"`
	Updated_at         *time.Time                   `json:"updated_at,omitempty"`
}

// GetCreated_at returns Guide_related_guides_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetFrom_guide_id returns Guide_related_guides_insert_input.From_guide_id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetFrom_guide_id() *uuid.UUID { return v.From_guide_id }

// GetGuide returns Guide_related_guides_insert_input.Guide, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetGuide() *Guides_obj_rel_insert_input { return v.Guide }

// GetId returns Guide_related_guides_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetId() *uuid.UUID { return v.Id }

// GetParent_guide returns Guide_related_guides_insert_input.Parent_guide, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetParent_guide() *Guides_obj_rel_insert_input {
	return v.Parent_guide
}

// GetTo_guide_unique_id returns Guide_related_guides_insert_input.To_guide_unique_id, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetTo_guide_unique_id() *string {
	return v.To_guide_unique_id
}

// GetUpdated_at returns Guide_related_guides_insert_input.Updated_at, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_insert_input) GetUpdated_at() *time.Time { return v.Updated_at }

type Guide_related_guides_on_conflict struct {
	Constraint     Guide_related_guides_constraint      `json:"constraint,omitempty"`
	Update_columns []Guide_related_guides_update_column `json:"update_columns,omitempty"`
	Where          *Guide_related_guides_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Guide_related_guides_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_on_conflict) GetConstraint() Guide_related_guides_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Guide_related_guides_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_on_conflict) GetUpdate_columns() []Guide_related_guides_update_column {
	return v.Update_columns
}

// GetWhere returns Guide_related_guides_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Guide_related_guides_on_conflict) GetWhere() *Guide_related_guides_bool_exp { return v.Where }

type Guide_related_guides_update_column string

const (
	Guide_related_guides_update_columnCreatedAt       Guide_related_guides_update_column = "created_at"
	Guide_related_guides_update_columnFromGuideId     Guide_related_guides_update_column = "from_guide_id"
	Guide_related_guides_update_columnId              Guide_related_guides_update_column = "id"
	Guide_related_guides_update_columnToGuideUniqueId Guide_related_guides_update_column = "to_guide_unique_id"
	Guide_related_guides_update_columnUpdatedAt       Guide_related_guides_update_column = "updated_at"
)

type Guide_vulnerabilities_arr_rel_insert_input struct {
	Data        []*Guide_vulnerabilities_insert_input `json:"data,omitempty"`
	On_conflict *Guide_vulnerabilities_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Guide_vulnerabilities_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_arr_rel_insert_input) GetData() []*Guide_vulnerabilities_insert_input {
	return v.Data
}

// GetOn_conflict returns Guide_vulnerabilities_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_arr_rel_insert_input) GetOn_conflict() *Guide_vulnerabilities_on_conflict {
	return v.On_conflict
}

type Guide_vulnerabilities_bool_exp struct {
	And              []*Guide_vulnerabilities_bool_exp `json:"_and,omitempty"`
	Not              *Guide_vulnerabilities_bool_exp   `json:"_not,omitempty"`
	Or               []*Guide_vulnerabilities_bool_exp `json:"_or,omitempty"`
	Created_at       *Timestamptz_comparison_exp       `json:"created_at,omitempty"`
	Guide            *Guides_bool_exp                  `json:"guide,omitempty"`
	Guide_id         *Uuid_comparison_exp              `json:"guide_id,omitempty"`
	Id               *Uuid_comparison_exp              `json:"id,omitempty"`
	Updated_at       *Timestamptz_comparison_exp       `json:"updated_at,omitempty"`
	Vulnerability    *Vulnerability_bool_exp           `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp              `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Guide_vulnerabilities_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetAnd() []*Guide_vulnerabilities_bool_exp { return v.And }

// GetNot returns Guide_vulnerabilities_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetNot() *Guide_vulnerabilities_bool_exp { return v.Not }

// GetOr returns Guide_vulnerabilities_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetOr() []*Guide_vulnerabilities_bool_exp { return v.Or }

// GetCreated_at returns Guide_vulnerabilities_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetCreated_at() *Timestamptz_comparison_exp {
	return v.Created_at
}

// GetGuide returns Guide_vulnerabilities_bool_exp.Guide, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetGuide() *Guides_bool_exp { return v.Guide }

// GetGuide_id returns Guide_vulnerabilities_bool_exp.Guide_id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetGuide_id() *Uuid_comparison_exp { return v.Guide_id }

// GetId returns Guide_vulnerabilities_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetUpdated_at returns Guide_vulnerabilities_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetUpdated_at() *Timestamptz_comparison_exp {
	return v.Updated_at
}

// GetVulnerability returns Guide_vulnerabilities_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Guide_vulnerabilities_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Guide_vulnerabilities_constraint string

const (
	Guide_vulnerabilities_constraintGuideVulnerabilitiesPkey   Guide_vulnerabilities_constraint = "guide_vulnerabilities_pkey"
	Guide_vulnerabilities_constraintGuideVulnerabilitiesUnique Guide_vulnerabilities_constraint = "guide_vulnerabilities_unique"
)

type Guide_vulnerabilities_insert_input struct {
	Created_at       *time.Time                          `json:"created_at,omitempty"`
	Guide            *Guides_obj_rel_insert_input        `json:"guide,omitempty"`
	Guide_id         *uuid.UUID                          `json:"guide_id,omitempty"`
	Id               *uuid.UUID                          `json:"id,omitempty"`
	Updated_at       *time.Time                          `json:"updated_at,omitempty"`
	Vulnerability    *Vulnerability_obj_rel_insert_input `json:"vulnerability,omitempty"`
	Vulnerability_id *uuid.UUID                          `json:"vulnerability_id,omitempty"`
}

// GetCreated_at returns Guide_vulnerabilities_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetGuide returns Guide_vulnerabilities_insert_input.Guide, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetGuide() *Guides_obj_rel_insert_input { return v.Guide }

// GetGuide_id returns Guide_vulnerabilities_insert_input.Guide_id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetGuide_id() *uuid.UUID { return v.Guide_id }

// GetId returns Guide_vulnerabilities_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetId() *uuid.UUID { return v.Id }

// GetUpdated_at returns Guide_vulnerabilities_insert_input.Updated_at, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetUpdated_at() *time.Time { return v.Updated_at }

// GetVulnerability returns Guide_vulnerabilities_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Guide_vulnerabilities_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Guide_vulnerabilities_on_conflict struct {
	Constraint     Guide_vulnerabilities_constraint      `json:"constraint,omitempty"`
	Update_columns []Guide_vulnerabilities_update_column `json:"update_columns,omitempty"`
	Where          *Guide_vulnerabilities_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Guide_vulnerabilities_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_on_conflict) GetConstraint() Guide_vulnerabilities_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Guide_vulnerabilities_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_on_conflict) GetUpdate_columns() []Guide_vulnerabilities_update_column {
	return v.Update_columns
}

// GetWhere returns Guide_vulnerabilities_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Guide_vulnerabilities_on_conflict) GetWhere() *Guide_vulnerabilities_bool_exp {
	return v.Where
}

type Guide_vulnerabilities_update_column string

const (
	Guide_vulnerabilities_update_columnCreatedAt       Guide_vulnerabilities_update_column = "created_at"
	Guide_vulnerabilities_update_columnGuideId         Guide_vulnerabilities_update_column = "guide_id"
	Guide_vulnerabilities_update_columnId              Guide_vulnerabilities_update_column = "id"
	Guide_vulnerabilities_update_columnUpdatedAt       Guide_vulnerabilities_update_column = "updated_at"
	Guide_vulnerabilities_update_columnVulnerabilityId Guide_vulnerabilities_update_column = "vulnerability_id"
)

type Guides_bool_exp struct {
	And                     []*Guides_bool_exp              `json:"_and,omitempty"`
	Not                     *Guides_bool_exp                `json:"_not,omitempty"`
	Or                      []*Guides_bool_exp              `json:"_or,omitempty"`
	Body                    *String_comparison_exp          `json:"body,omitempty"`
	Created_at              *Timestamptz_comparison_exp     `json:"created_at,omitempty"`
	Data_source_link        *String_comparison_exp          `json:"data_source_link,omitempty"`
	Guide_unique_id         *String_comparison_exp          `json:"guide_unique_id,omitempty"`
	Guide_vulnerabilities   *Guide_vulnerabilities_bool_exp `json:"guide_vulnerabilities,omitempty"`
	Id                      *Uuid_comparison_exp            `json:"id,omitempty"`
	Metadata                *Jsonb_comparison_exp           `json:"metadata,omitempty"`
	Metadata_schema_version *Int_comparison_exp             `json:"metadata_schema_version,omitempty"`
	Related_guides          *Guide_related_guides_bool_exp  `json:"related_guides,omitempty"`
	Severity                *Severity_enum_comparison_exp   `json:"severity,omitempty"`
	Summary                 *String_comparison_exp          `json:"summary,omitempty"`
	Tags                    *Text_comparison_exp            `json:"tags,omitempty"`
	Title                   *String_comparison_exp          `json:"title,omitempty"`
	Updated_at              *Timestamptz_comparison_exp     `json:"updated_at,omitempty"`
}

// GetAnd returns Guides_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetAnd() []*Guides_bool_exp { return v.And }

// GetNot returns Guides_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetNot() *Guides_bool_exp { return v.Not }

// GetOr returns Guides_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetOr() []*Guides_bool_exp { return v.Or }

// GetBody returns Guides_bool_exp.Body, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetBody() *String_comparison_exp { return v.Body }

// GetCreated_at returns Guides_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetData_source_link returns Guides_bool_exp.Data_source_link, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetData_source_link() *String_comparison_exp { return v.Data_source_link }

// GetGuide_unique_id returns Guides_bool_exp.Guide_unique_id, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetGuide_unique_id() *String_comparison_exp { return v.Guide_unique_id }

// GetGuide_vulnerabilities returns Guides_bool_exp.Guide_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetGuide_vulnerabilities() *Guide_vulnerabilities_bool_exp {
	return v.Guide_vulnerabilities
}

// GetId returns Guides_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetMetadata returns Guides_bool_exp.Metadata, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetMetadata() *Jsonb_comparison_exp { return v.Metadata }

// GetMetadata_schema_version returns Guides_bool_exp.Metadata_schema_version, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetMetadata_schema_version() *Int_comparison_exp {
	return v.Metadata_schema_version
}

// GetRelated_guides returns Guides_bool_exp.Related_guides, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetRelated_guides() *Guide_related_guides_bool_exp { return v.Related_guides }

// GetSeverity returns Guides_bool_exp.Severity, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetSeverity() *Severity_enum_comparison_exp { return v.Severity }

// GetSummary returns Guides_bool_exp.Summary, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetSummary() *String_comparison_exp { return v.Summary }

// GetTags returns Guides_bool_exp.Tags, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetTags() *Text_comparison_exp { return v.Tags }

// GetTitle returns Guides_bool_exp.Title, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetTitle() *String_comparison_exp { return v.Title }

// GetUpdated_at returns Guides_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Guides_bool_exp) GetUpdated_at() *Timestamptz_comparison_exp { return v.Updated_at }

type Guides_constraint string

const (
	Guides_constraintGuidesDataSourceLinkKey Guides_constraint = "guides_data_source_link_key"
	Guides_constraintGuidesGuideUniqueIdKey  Guides_constraint = "guides_guide_unique_id_key"
	Guides_constraintGuidesPkey              Guides_constraint = "guides_pkey"
)

type Guides_insert_input struct {
	Body                    *string                                     `json:"body,omitempty"`
	Created_at              *time.Time                                  `json:"created_at,omitempty"`
	Data_source_link        *string                                     `json:"data_source_link,omitempty"`
	Guide_unique_id         *string                                     `json:"guide_unique_id,omitempty"`
	Guide_vulnerabilities   *Guide_vulnerabilities_arr_rel_insert_input `json:"guide_vulnerabilities,omitempty"`
	Id                      *uuid.UUID                                  `json:"id,omitempty"`
	Metadata                *json.RawMessage                            `json:"metadata,omitempty"`
	Metadata_schema_version *int                                        `json:"metadata_schema_version,omitempty"`
	Related_guides          *Guide_related_guides_arr_rel_insert_input  `json:"related_guides,omitempty"`
	Severity                *string                                     `json:"severity,omitempty"`
	Summary                 *string                                     `json:"summary,omitempty"`
	Tags                    *string                                     `json:"tags,omitempty"`
	Title                   *string                                     `json:"title,omitempty"`
	Updated_at              *time.Time                                  `json:"updated_at,omitempty"`
}

// GetBody returns Guides_insert_input.Body, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetBody() *string { return v.Body }

// GetCreated_at returns Guides_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetData_source_link returns Guides_insert_input.Data_source_link, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetData_source_link() *string { return v.Data_source_link }

// GetGuide_unique_id returns Guides_insert_input.Guide_unique_id, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetGuide_unique_id() *string { return v.Guide_unique_id }

// GetGuide_vulnerabilities returns Guides_insert_input.Guide_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetGuide_vulnerabilities() *Guide_vulnerabilities_arr_rel_insert_input {
	return v.Guide_vulnerabilities
}

// GetId returns Guides_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetId() *uuid.UUID { return v.Id }

// GetMetadata returns Guides_insert_input.Metadata, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetMetadata() *json.RawMessage { return v.Metadata }

// GetMetadata_schema_version returns Guides_insert_input.Metadata_schema_version, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetMetadata_schema_version() *int { return v.Metadata_schema_version }

// GetRelated_guides returns Guides_insert_input.Related_guides, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetRelated_guides() *Guide_related_guides_arr_rel_insert_input {
	return v.Related_guides
}

// GetSeverity returns Guides_insert_input.Severity, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetSeverity() *string { return v.Severity }

// GetSummary returns Guides_insert_input.Summary, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetSummary() *string { return v.Summary }

// GetTags returns Guides_insert_input.Tags, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetTags() *string { return v.Tags }

// GetTitle returns Guides_insert_input.Title, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetTitle() *string { return v.Title }

// GetUpdated_at returns Guides_insert_input.Updated_at, and is useful for accessing the field via an interface.
func (v *Guides_insert_input) GetUpdated_at() *time.Time { return v.Updated_at }

type Guides_obj_rel_insert_input struct {
	Data        *Guides_insert_input `json:"data,omitempty"`
	On_conflict *Guides_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Guides_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Guides_obj_rel_insert_input) GetData() *Guides_insert_input { return v.Data }

// GetOn_conflict returns Guides_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Guides_obj_rel_insert_input) GetOn_conflict() *Guides_on_conflict { return v.On_conflict }

type Guides_on_conflict struct {
	Constraint     Guides_constraint      `json:"constraint,omitempty"`
	Update_columns []Guides_update_column `json:"update_columns,omitempty"`
	Where          *Guides_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Guides_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Guides_on_conflict) GetConstraint() Guides_constraint { return v.Constraint }

// GetUpdate_columns returns Guides_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Guides_on_conflict) GetUpdate_columns() []Guides_update_column { return v.Update_columns }

// GetWhere returns Guides_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Guides_on_conflict) GetWhere() *Guides_bool_exp { return v.Where }

type Guides_update_column string

const (
	Guides_update_columnBody                  Guides_update_column = "body"
	Guides_update_columnCreatedAt             Guides_update_column = "created_at"
	Guides_update_columnDataSourceLink        Guides_update_column = "data_source_link"
	Guides_update_columnGuideUniqueId         Guides_update_column = "guide_unique_id"
	Guides_update_columnId                    Guides_update_column = "id"
	Guides_update_columnMetadata              Guides_update_column = "metadata"
	Guides_update_columnMetadataSchemaVersion Guides_update_column = "metadata_schema_version"
	Guides_update_columnSeverity              Guides_update_column = "severity"
	Guides_update_columnSummary               Guides_update_column = "summary"
	Guides_update_columnTags                  Guides_update_column = "tags"
	Guides_update_columnTitle                 Guides_update_column = "title"
	Guides_update_columnUpdatedAt             Guides_update_column = "updated_at"
)

type Identities_bool_exp struct {
	And                           []*Identities_bool_exp                  `json:"_and,omitempty"`
	Not                           *Identities_bool_exp                    `json:"_not,omitempty"`
	Or                            []*Identities_bool_exp                  `json:"_or,omitempty"`
	Created_at                    *Timestamp_comparison_exp               `json:"created_at,omitempty"`
	Id                            *Uuid_comparison_exp                    `json:"id,omitempty"`
	Identity_verifiable_addresses *Identity_verifiable_addresses_bool_exp `json:"identity_verifiable_addresses,omitempty"`
	Nid                           *Uuid_comparison_exp                    `json:"nid,omitempty"`
	Schema_id                     *String_comparison_exp                  `json:"schema_id,omitempty"`
	State                         *String_comparison_exp                  `json:"state,omitempty"`
	State_changed_at              *Timestamp_comparison_exp               `json:"state_changed_at,omitempty"`
	Traits                        *Jsonb_comparison_exp                   `json:"traits,omitempty"`
	Updated_at                    *Timestamp_comparison_exp               `json:"updated_at,omitempty"`
	User                          *Users_bool_exp                         `json:"user,omitempty"`
}

// GetAnd returns Identities_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetAnd() []*Identities_bool_exp { return v.And }

// GetNot returns Identities_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetNot() *Identities_bool_exp { return v.Not }

// GetOr returns Identities_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetOr() []*Identities_bool_exp { return v.Or }

// GetCreated_at returns Identities_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetCreated_at() *Timestamp_comparison_exp { return v.Created_at }

// GetId returns Identities_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIdentity_verifiable_addresses returns Identities_bool_exp.Identity_verifiable_addresses, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetIdentity_verifiable_addresses() *Identity_verifiable_addresses_bool_exp {
	return v.Identity_verifiable_addresses
}

// GetNid returns Identities_bool_exp.Nid, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetNid() *Uuid_comparison_exp { return v.Nid }

// GetSchema_id returns Identities_bool_exp.Schema_id, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetSchema_id() *String_comparison_exp { return v.Schema_id }

// GetState returns Identities_bool_exp.State, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetState() *String_comparison_exp { return v.State }

// GetState_changed_at returns Identities_bool_exp.State_changed_at, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetState_changed_at() *Timestamp_comparison_exp {
	return v.State_changed_at
}

// GetTraits returns Identities_bool_exp.Traits, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetTraits() *Jsonb_comparison_exp { return v.Traits }

// GetUpdated_at returns Identities_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetUpdated_at() *Timestamp_comparison_exp { return v.Updated_at }

// GetUser returns Identities_bool_exp.User, and is useful for accessing the field via an interface.
func (v *Identities_bool_exp) GetUser() *Users_bool_exp { return v.User }

type Identity_verifiable_addresses_bool_exp struct {
	And         []*Identity_verifiable_addresses_bool_exp `json:"_and,omitempty"`
	Not         *Identity_verifiable_addresses_bool_exp   `json:"_not,omitempty"`
	Or          []*Identity_verifiable_addresses_bool_exp `json:"_or,omitempty"`
	Created_at  *Timestamp_comparison_exp                 `json:"created_at,omitempty"`
	Id          *Uuid_comparison_exp                      `json:"id,omitempty"`
	Identity    *Identities_bool_exp                      `json:"identity,omitempty"`
	Identity_id *Uuid_comparison_exp                      `json:"identity_id,omitempty"`
	Nid         *Uuid_comparison_exp                      `json:"nid,omitempty"`
	Status      *String_comparison_exp                    `json:"status,omitempty"`
	Updated_at  *Timestamp_comparison_exp                 `json:"updated_at,omitempty"`
	Value       *String_comparison_exp                    `json:"value,omitempty"`
	Verified    *Boolean_comparison_exp                   `json:"verified,omitempty"`
	Verified_at *Timestamp_comparison_exp                 `json:"verified_at,omitempty"`
	Via         *String_comparison_exp                    `json:"via,omitempty"`
}

// GetAnd returns Identity_verifiable_addresses_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetAnd() []*Identity_verifiable_addresses_bool_exp {
	return v.And
}

// GetNot returns Identity_verifiable_addresses_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetNot() *Identity_verifiable_addresses_bool_exp {
	return v.Not
}

// GetOr returns Identity_verifiable_addresses_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetOr() []*Identity_verifiable_addresses_bool_exp {
	return v.Or
}

// GetCreated_at returns Identity_verifiable_addresses_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetCreated_at() *Timestamp_comparison_exp {
	return v.Created_at
}

// GetId returns Identity_verifiable_addresses_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIdentity returns Identity_verifiable_addresses_bool_exp.Identity, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetIdentity() *Identities_bool_exp {
	return v.Identity
}

// GetIdentity_id returns Identity_verifiable_addresses_bool_exp.Identity_id, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetIdentity_id() *Uuid_comparison_exp {
	return v.Identity_id
}

// GetNid returns Identity_verifiable_addresses_bool_exp.Nid, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetNid() *Uuid_comparison_exp { return v.Nid }

// GetStatus returns Identity_verifiable_addresses_bool_exp.Status, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetStatus() *String_comparison_exp { return v.Status }

// GetUpdated_at returns Identity_verifiable_addresses_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetUpdated_at() *Timestamp_comparison_exp {
	return v.Updated_at
}

// GetValue returns Identity_verifiable_addresses_bool_exp.Value, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetValue() *String_comparison_exp { return v.Value }

// GetVerified returns Identity_verifiable_addresses_bool_exp.Verified, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetVerified() *Boolean_comparison_exp {
	return v.Verified
}

// GetVerified_at returns Identity_verifiable_addresses_bool_exp.Verified_at, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetVerified_at() *Timestamp_comparison_exp {
	return v.Verified_at
}

// GetVia returns Identity_verifiable_addresses_bool_exp.Via, and is useful for accessing the field via an interface.
func (v *Identity_verifiable_addresses_bool_exp) GetVia() *String_comparison_exp { return v.Via }

type Ignored_vulnerabilities_bool_exp struct {
	And              []*Ignored_vulnerabilities_bool_exp `json:"_and,omitempty"`
	Not              *Ignored_vulnerabilities_bool_exp   `json:"_not,omitempty"`
	Or               []*Ignored_vulnerabilities_bool_exp `json:"_or,omitempty"`
	Creator          *Identities_bool_exp                `json:"creator,omitempty"`
	Creator_id       *Uuid_comparison_exp                `json:"creator_id,omitempty"`
	Id               *Uuid_comparison_exp                `json:"id,omitempty"`
	Locations        *Jsonb_comparison_exp               `json:"locations,omitempty"`
	Note             *String_comparison_exp              `json:"note,omitempty"`
	Project          *Projects_bool_exp                  `json:"project,omitempty"`
	Project_id       *Uuid_comparison_exp                `json:"project_id,omitempty"`
	Vulnerability    *Vulnerability_bool_exp             `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp                `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Ignored_vulnerabilities_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetAnd() []*Ignored_vulnerabilities_bool_exp { return v.And }

// GetNot returns Ignored_vulnerabilities_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetNot() *Ignored_vulnerabilities_bool_exp { return v.Not }

// GetOr returns Ignored_vulnerabilities_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetOr() []*Ignored_vulnerabilities_bool_exp { return v.Or }

// GetCreator returns Ignored_vulnerabilities_bool_exp.Creator, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetCreator() *Identities_bool_exp { return v.Creator }

// GetCreator_id returns Ignored_vulnerabilities_bool_exp.Creator_id, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetCreator_id() *Uuid_comparison_exp { return v.Creator_id }

// GetId returns Ignored_vulnerabilities_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLocations returns Ignored_vulnerabilities_bool_exp.Locations, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetLocations() *Jsonb_comparison_exp { return v.Locations }

// GetNote returns Ignored_vulnerabilities_bool_exp.Note, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetNote() *String_comparison_exp { return v.Note }

// GetProject returns Ignored_vulnerabilities_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_id returns Ignored_vulnerabilities_bool_exp.Project_id, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetProject_id() *Uuid_comparison_exp { return v.Project_id }

// GetVulnerability returns Ignored_vulnerabilities_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Ignored_vulnerabilities_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Ignored_vulnerabilities_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

// InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result includes the requested fields of the GraphQL type analysis_manifest_dependency_edge_result.
type InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result.Id, and is useful for accessing the field via an interface.
func (v *InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result) GetId() uuid.UUID {
	return v.Id
}

// InsertManifestDependencyEdgeAnalysisResponse is returned by InsertManifestDependencyEdgeAnalysis on success.
type InsertManifestDependencyEdgeAnalysisResponse struct {
	Insert_analysis_manifest_dependency_edge_result_one *InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result `json:"insert_analysis_manifest_dependency_edge_result_one"`
}

// GetInsert_analysis_manifest_dependency_edge_result_one returns InsertManifestDependencyEdgeAnalysisResponse.Insert_analysis_manifest_dependency_edge_result_one, and is useful for accessing the field via an interface.
func (v *InsertManifestDependencyEdgeAnalysisResponse) GetInsert_analysis_manifest_dependency_edge_result_one() *InsertManifestDependencyEdgeAnalysisInsert_analysis_manifest_dependency_edge_result_oneAnalysis_manifest_dependency_edge_result {
	return v.Insert_analysis_manifest_dependency_edge_result_one
}

// InsertNewBuildQueryInsert_builds_oneBuilds includes the requested fields of the GraphQL type builds.
type InsertNewBuildQueryInsert_builds_oneBuilds struct {
	Id                 uuid.UUID `json:"id"`
	Agent_access_token uuid.UUID `json:"agent_access_token"`
}

// GetId returns InsertNewBuildQueryInsert_builds_oneBuilds.Id, and is useful for accessing the field via an interface.
func (v *InsertNewBuildQueryInsert_builds_oneBuilds) GetId() uuid.UUID { return v.Id }

// GetAgent_access_token returns InsertNewBuildQueryInsert_builds_oneBuilds.Agent_access_token, and is useful for accessing the field via an interface.
func (v *InsertNewBuildQueryInsert_builds_oneBuilds) GetAgent_access_token() uuid.UUID {
	return v.Agent_access_token
}

// InsertNewBuildQueryResponse is returned by InsertNewBuildQuery on success.
type InsertNewBuildQueryResponse struct {
	Insert_builds_one *InsertNewBuildQueryInsert_builds_oneBuilds `json:"insert_builds_one"`
}

// GetInsert_builds_one returns InsertNewBuildQueryResponse.Insert_builds_one, and is useful for accessing the field via an interface.
func (v *InsertNewBuildQueryResponse) GetInsert_builds_one() *InsertNewBuildQueryInsert_builds_oneBuilds {
	return v.Insert_builds_one
}

// InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response includes the requested fields of the GraphQL type vulnerability_cwe_mutation_response.
type InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response struct {
	Returning []*InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe `json:"returning"`
}

// GetReturning returns InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response.Returning, and is useful for accessing the field via an interface.
func (v *InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response) GetReturning() []*InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe {
	return v.Returning
}

// InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe includes the requested fields of the GraphQL type vulnerability_cwe.
type InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe struct {
	Id int `json:"id"`
}

// GetId returns InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe.Id, and is useful for accessing the field via an interface.
func (v *InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_responseReturningVulnerability_cwe) GetId() int {
	return v.Id
}

// InsertVulnerabilityCWEResponse is returned by InsertVulnerabilityCWE on success.
type InsertVulnerabilityCWEResponse struct {
	Insert_vulnerability_cwe *InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response `json:"insert_vulnerability_cwe"`
}

// GetInsert_vulnerability_cwe returns InsertVulnerabilityCWEResponse.Insert_vulnerability_cwe, and is useful for accessing the field via an interface.
func (v *InsertVulnerabilityCWEResponse) GetInsert_vulnerability_cwe() *InsertVulnerabilityCWEInsert_vulnerability_cweVulnerability_cwe_mutation_response {
	return v.Insert_vulnerability_cwe
}

type Int_comparison_exp struct {
	Eq      *int  `json:"_eq,omitempty"`
	Gt      *int  `json:"_gt,omitempty"`
	Gte     *int  `json:"_gte,omitempty"`
	In      []int `json:"_in,omitempty"`
	Is_null *bool `json:"_is_null,omitempty"`
	Lt      *int  `json:"_lt,omitempty"`
	Lte     *int  `json:"_lte,omitempty"`
	Neq     *int  `json:"_neq,omitempty"`
	Nin     []int `json:"_nin,omitempty"`
}

// GetEq returns Int_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetEq() *int { return v.Eq }

// GetGt returns Int_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetGt() *int { return v.Gt }

// GetGte returns Int_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetGte() *int { return v.Gte }

// GetIn returns Int_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetIn() []int { return v.In }

// GetIs_null returns Int_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Int_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetLt() *int { return v.Lt }

// GetLte returns Int_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetLte() *int { return v.Lte }

// GetNeq returns Int_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetNeq() *int { return v.Neq }

// GetNin returns Int_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Int_comparison_exp) GetNin() []int { return v.Nin }

type Jsonb_cast_exp struct {
	String *String_comparison_exp `json:"String,omitempty"`
}

// GetString returns Jsonb_cast_exp.String, and is useful for accessing the field via an interface.
func (v *Jsonb_cast_exp) GetString() *String_comparison_exp { return v.String }

type Jsonb_comparison_exp struct {
	Cast         *Jsonb_cast_exp   `json:"_cast,omitempty"`
	Contained_in *json.RawMessage  `json:"_contained_in,omitempty"`
	Contains     *json.RawMessage  `json:"_contains,omitempty"`
	Eq           *json.RawMessage  `json:"_eq,omitempty"`
	Gt           *json.RawMessage  `json:"_gt,omitempty"`
	Gte          *json.RawMessage  `json:"_gte,omitempty"`
	Has_key      *string           `json:"_has_key,omitempty"`
	Has_keys_all []string          `json:"_has_keys_all,omitempty"`
	Has_keys_any []string          `json:"_has_keys_any,omitempty"`
	In           []json.RawMessage `json:"_in,omitempty"`
	Is_null      *bool             `json:"_is_null,omitempty"`
	Lt           *json.RawMessage  `json:"_lt,omitempty"`
	Lte          *json.RawMessage  `json:"_lte,omitempty"`
	Neq          *json.RawMessage  `json:"_neq,omitempty"`
	Nin          []json.RawMessage `json:"_nin,omitempty"`
}

// GetCast returns Jsonb_comparison_exp.Cast, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetCast() *Jsonb_cast_exp { return v.Cast }

// GetContained_in returns Jsonb_comparison_exp.Contained_in, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetContained_in() *json.RawMessage { return v.Contained_in }

// GetContains returns Jsonb_comparison_exp.Contains, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetContains() *json.RawMessage { return v.Contains }

// GetEq returns Jsonb_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetEq() *json.RawMessage { return v.Eq }

// GetGt returns Jsonb_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetGt() *json.RawMessage { return v.Gt }

// GetGte returns Jsonb_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetGte() *json.RawMessage { return v.Gte }

// GetHas_key returns Jsonb_comparison_exp.Has_key, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetHas_key() *string { return v.Has_key }

// GetHas_keys_all returns Jsonb_comparison_exp.Has_keys_all, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetHas_keys_all() []string { return v.Has_keys_all }

// GetHas_keys_any returns Jsonb_comparison_exp.Has_keys_any, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetHas_keys_any() []string { return v.Has_keys_any }

// GetIn returns Jsonb_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetIn() []json.RawMessage { return v.In }

// GetIs_null returns Jsonb_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Jsonb_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetLt() *json.RawMessage { return v.Lt }

// GetLte returns Jsonb_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetLte() *json.RawMessage { return v.Lte }

// GetNeq returns Jsonb_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetNeq() *json.RawMessage { return v.Neq }

// GetNin returns Jsonb_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Jsonb_comparison_exp) GetNin() []json.RawMessage { return v.Nin }

type License_source_comparison_exp struct {
	Eq      *types.LicenseSource  `json:"_eq,omitempty"`
	Gt      *types.LicenseSource  `json:"_gt,omitempty"`
	Gte     *types.LicenseSource  `json:"_gte,omitempty"`
	In      []types.LicenseSource `json:"_in,omitempty"`
	Is_null *bool                 `json:"_is_null,omitempty"`
	Lt      *types.LicenseSource  `json:"_lt,omitempty"`
	Lte     *types.LicenseSource  `json:"_lte,omitempty"`
	Neq     *types.LicenseSource  `json:"_neq,omitempty"`
	Nin     []types.LicenseSource `json:"_nin,omitempty"`
}

// GetEq returns License_source_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetEq() *types.LicenseSource { return v.Eq }

// GetGt returns License_source_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetGt() *types.LicenseSource { return v.Gt }

// GetGte returns License_source_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetGte() *types.LicenseSource { return v.Gte }

// GetIn returns License_source_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetIn() []types.LicenseSource { return v.In }

// GetIs_null returns License_source_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns License_source_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetLt() *types.LicenseSource { return v.Lt }

// GetLte returns License_source_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetLte() *types.LicenseSource { return v.Lte }

// GetNeq returns License_source_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetNeq() *types.LicenseSource { return v.Neq }

// GetNin returns License_source_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *License_source_comparison_exp) GetNin() []types.LicenseSource { return v.Nin }

type Manifest_dependency_arr_rel_insert_input struct {
	Data        []*Manifest_dependency_insert_input `json:"data,omitempty"`
	On_conflict *Manifest_dependency_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Manifest_dependency_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_arr_rel_insert_input) GetData() []*Manifest_dependency_insert_input {
	return v.Data
}

// GetOn_conflict returns Manifest_dependency_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_arr_rel_insert_input) GetOn_conflict() *Manifest_dependency_on_conflict {
	return v.On_conflict
}

type Manifest_dependency_bool_exp struct {
	And                         []*Manifest_dependency_bool_exp    `json:"_and,omitempty"`
	Not                         *Manifest_dependency_bool_exp      `json:"_not,omitempty"`
	Or                          []*Manifest_dependency_bool_exp    `json:"_or,omitempty"`
	Child_edges_recursive       *Manifest_dependency_edge_bool_exp `json:"child_edges_recursive,omitempty"`
	Manifest_dependency_node    *Manifest_dependency_node_bool_exp `json:"manifest_dependency_node,omitempty"`
	Manifest_dependency_node_id *Uuid_comparison_exp               `json:"manifest_dependency_node_id,omitempty"`
	Manifest_id                 *Uuid_comparison_exp               `json:"manifest_id,omitempty"`
	Resolved_manifest           *Resolved_manifest_bool_exp        `json:"resolved_manifest,omitempty"`
}

// GetAnd returns Manifest_dependency_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetAnd() []*Manifest_dependency_bool_exp { return v.And }

// GetNot returns Manifest_dependency_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetNot() *Manifest_dependency_bool_exp { return v.Not }

// GetOr returns Manifest_dependency_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetOr() []*Manifest_dependency_bool_exp { return v.Or }

// GetChild_edges_recursive returns Manifest_dependency_bool_exp.Child_edges_recursive, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetChild_edges_recursive() *Manifest_dependency_edge_bool_exp {
	return v.Child_edges_recursive
}

// GetManifest_dependency_node returns Manifest_dependency_bool_exp.Manifest_dependency_node, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetManifest_dependency_node() *Manifest_dependency_node_bool_exp {
	return v.Manifest_dependency_node
}

// GetManifest_dependency_node_id returns Manifest_dependency_bool_exp.Manifest_dependency_node_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetManifest_dependency_node_id() *Uuid_comparison_exp {
	return v.Manifest_dependency_node_id
}

// GetManifest_id returns Manifest_dependency_bool_exp.Manifest_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetManifest_id() *Uuid_comparison_exp { return v.Manifest_id }

// GetResolved_manifest returns Manifest_dependency_bool_exp.Resolved_manifest, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_bool_exp) GetResolved_manifest() *Resolved_manifest_bool_exp {
	return v.Resolved_manifest
}

type Manifest_dependency_constraint string

const (
	Manifest_dependency_constraintManifestDependencyManifestIdManifestDependencyNodeIdIdx Manifest_dependency_constraint = "manifest_dependency_manifest_id_manifest_dependency_node_id_idx"
)

type Manifest_dependency_edge_arr_rel_insert_input struct {
	Data        []*Manifest_dependency_edge_insert_input `json:"data,omitempty"`
	On_conflict *Manifest_dependency_edge_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Manifest_dependency_edge_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_arr_rel_insert_input) GetData() []*Manifest_dependency_edge_insert_input {
	return v.Data
}

// GetOn_conflict returns Manifest_dependency_edge_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_arr_rel_insert_input) GetOn_conflict() *Manifest_dependency_edge_on_conflict {
	return v.On_conflict
}

type Manifest_dependency_edge_bool_exp struct {
	And              []*Manifest_dependency_edge_bool_exp               `json:"_and,omitempty"`
	Not              *Manifest_dependency_edge_bool_exp                 `json:"_not,omitempty"`
	Or               []*Manifest_dependency_edge_bool_exp               `json:"_or,omitempty"`
	Analysis_results *Analysis_manifest_dependency_edge_result_bool_exp `json:"analysis_results,omitempty"`
	Child            *Manifest_dependency_node_bool_exp                 `json:"child,omitempty"`
	Child_id         *Uuid_comparison_exp                               `json:"child_id,omitempty"`
	Id               *Uuid_comparison_exp                               `json:"id,omitempty"`
	Parent           *Manifest_dependency_node_bool_exp                 `json:"parent,omitempty"`
	Parent_id        *Uuid_comparison_exp                               `json:"parent_id,omitempty"`
}

// GetAnd returns Manifest_dependency_edge_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetAnd() []*Manifest_dependency_edge_bool_exp {
	return v.And
}

// GetNot returns Manifest_dependency_edge_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetNot() *Manifest_dependency_edge_bool_exp { return v.Not }

// GetOr returns Manifest_dependency_edge_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetOr() []*Manifest_dependency_edge_bool_exp { return v.Or }

// GetAnalysis_results returns Manifest_dependency_edge_bool_exp.Analysis_results, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetAnalysis_results() *Analysis_manifest_dependency_edge_result_bool_exp {
	return v.Analysis_results
}

// GetChild returns Manifest_dependency_edge_bool_exp.Child, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetChild() *Manifest_dependency_node_bool_exp {
	return v.Child
}

// GetChild_id returns Manifest_dependency_edge_bool_exp.Child_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetChild_id() *Uuid_comparison_exp { return v.Child_id }

// GetId returns Manifest_dependency_edge_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetParent returns Manifest_dependency_edge_bool_exp.Parent, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetParent() *Manifest_dependency_node_bool_exp {
	return v.Parent
}

// GetParent_id returns Manifest_dependency_edge_bool_exp.Parent_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_bool_exp) GetParent_id() *Uuid_comparison_exp { return v.Parent_id }

type Manifest_dependency_edge_constraint string

const (
	Manifest_dependency_edge_constraintManifestDependencyEdgeParentIdChildIdIdx Manifest_dependency_edge_constraint = "manifest_dependency_edge_parent_id_child_id_idx"
	Manifest_dependency_edge_constraintManifestDependencyEdgePkey               Manifest_dependency_edge_constraint = "manifest_dependency_edge_pkey"
)

type Manifest_dependency_edge_insert_input struct {
	Analysis_results *Analysis_manifest_dependency_edge_result_arr_rel_insert_input `json:"analysis_results,omitempty"`
	Child            *Manifest_dependency_node_obj_rel_insert_input                 `json:"child,omitempty"`
	Child_id         *uuid.UUID                                                     `json:"child_id,omitempty"`
	Id               *uuid.UUID                                                     `json:"id,omitempty"`
	Parent           *Manifest_dependency_node_obj_rel_insert_input                 `json:"parent,omitempty"`
	Parent_id        *uuid.UUID                                                     `json:"parent_id,omitempty"`
}

// GetAnalysis_results returns Manifest_dependency_edge_insert_input.Analysis_results, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetAnalysis_results() *Analysis_manifest_dependency_edge_result_arr_rel_insert_input {
	return v.Analysis_results
}

// GetChild returns Manifest_dependency_edge_insert_input.Child, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetChild() *Manifest_dependency_node_obj_rel_insert_input {
	return v.Child
}

// GetChild_id returns Manifest_dependency_edge_insert_input.Child_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetChild_id() *uuid.UUID { return v.Child_id }

// GetId returns Manifest_dependency_edge_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetId() *uuid.UUID { return v.Id }

// GetParent returns Manifest_dependency_edge_insert_input.Parent, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetParent() *Manifest_dependency_node_obj_rel_insert_input {
	return v.Parent
}

// GetParent_id returns Manifest_dependency_edge_insert_input.Parent_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_insert_input) GetParent_id() *uuid.UUID { return v.Parent_id }

type Manifest_dependency_edge_obj_rel_insert_input struct {
	Data        *Manifest_dependency_edge_insert_input `json:"data,omitempty"`
	On_conflict *Manifest_dependency_edge_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Manifest_dependency_edge_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_obj_rel_insert_input) GetData() *Manifest_dependency_edge_insert_input {
	return v.Data
}

// GetOn_conflict returns Manifest_dependency_edge_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_obj_rel_insert_input) GetOn_conflict() *Manifest_dependency_edge_on_conflict {
	return v.On_conflict
}

type Manifest_dependency_edge_on_conflict struct {
	Constraint     Manifest_dependency_edge_constraint      `json:"constraint,omitempty"`
	Update_columns []Manifest_dependency_edge_update_column `json:"update_columns,omitempty"`
	Where          *Manifest_dependency_edge_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Manifest_dependency_edge_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_on_conflict) GetConstraint() Manifest_dependency_edge_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Manifest_dependency_edge_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_on_conflict) GetUpdate_columns() []Manifest_dependency_edge_update_column {
	return v.Update_columns
}

// GetWhere returns Manifest_dependency_edge_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_edge_on_conflict) GetWhere() *Manifest_dependency_edge_bool_exp {
	return v.Where
}

type Manifest_dependency_edge_update_column string

const (
	Manifest_dependency_edge_update_columnChildId  Manifest_dependency_edge_update_column = "child_id"
	Manifest_dependency_edge_update_columnId       Manifest_dependency_edge_update_column = "id"
	Manifest_dependency_edge_update_columnParentId Manifest_dependency_edge_update_column = "parent_id"
)

type Manifest_dependency_insert_input struct {
	Manifest_dependency_node    *Manifest_dependency_node_obj_rel_insert_input `json:"manifest_dependency_node,omitempty"`
	Manifest_dependency_node_id *uuid.UUID                                     `json:"manifest_dependency_node_id,omitempty"`
	Manifest_id                 *uuid.UUID                                     `json:"manifest_id,omitempty"`
	Resolved_manifest           *Resolved_manifest_obj_rel_insert_input        `json:"resolved_manifest,omitempty"`
}

// GetManifest_dependency_node returns Manifest_dependency_insert_input.Manifest_dependency_node, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_insert_input) GetManifest_dependency_node() *Manifest_dependency_node_obj_rel_insert_input {
	return v.Manifest_dependency_node
}

// GetManifest_dependency_node_id returns Manifest_dependency_insert_input.Manifest_dependency_node_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_insert_input) GetManifest_dependency_node_id() *uuid.UUID {
	return v.Manifest_dependency_node_id
}

// GetManifest_id returns Manifest_dependency_insert_input.Manifest_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_insert_input) GetManifest_id() *uuid.UUID { return v.Manifest_id }

// GetResolved_manifest returns Manifest_dependency_insert_input.Resolved_manifest, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_insert_input) GetResolved_manifest() *Resolved_manifest_obj_rel_insert_input {
	return v.Resolved_manifest
}

type Manifest_dependency_node_bool_exp struct {
	And                   []*Manifest_dependency_node_bool_exp `json:"_and,omitempty"`
	Not                   *Manifest_dependency_node_bool_exp   `json:"_not,omitempty"`
	Or                    []*Manifest_dependency_node_bool_exp `json:"_or,omitempty"`
	Child_edges           *Manifest_dependency_edge_bool_exp   `json:"child_edges,omitempty"`
	Child_edges_recursive *Manifest_dependency_edge_bool_exp   `json:"child_edges_recursive,omitempty"`
	Id                    *Uuid_comparison_exp                 `json:"id,omitempty"`
	Labels                *Jsonb_comparison_exp                `json:"labels,omitempty"`
	Parent_edges          *Manifest_dependency_edge_bool_exp   `json:"parent_edges,omitempty"`
	Range                 *String_comparison_exp               `json:"range,omitempty"`
	Release               *Package_release_bool_exp            `json:"release,omitempty"`
	Release_id            *Uuid_comparison_exp                 `json:"release_id,omitempty"`
}

// GetAnd returns Manifest_dependency_node_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetAnd() []*Manifest_dependency_node_bool_exp {
	return v.And
}

// GetNot returns Manifest_dependency_node_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetNot() *Manifest_dependency_node_bool_exp { return v.Not }

// GetOr returns Manifest_dependency_node_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetOr() []*Manifest_dependency_node_bool_exp { return v.Or }

// GetChild_edges returns Manifest_dependency_node_bool_exp.Child_edges, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetChild_edges() *Manifest_dependency_edge_bool_exp {
	return v.Child_edges
}

// GetChild_edges_recursive returns Manifest_dependency_node_bool_exp.Child_edges_recursive, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetChild_edges_recursive() *Manifest_dependency_edge_bool_exp {
	return v.Child_edges_recursive
}

// GetId returns Manifest_dependency_node_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLabels returns Manifest_dependency_node_bool_exp.Labels, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetLabels() *Jsonb_comparison_exp { return v.Labels }

// GetParent_edges returns Manifest_dependency_node_bool_exp.Parent_edges, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetParent_edges() *Manifest_dependency_edge_bool_exp {
	return v.Parent_edges
}

// GetRange returns Manifest_dependency_node_bool_exp.Range, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetRange() *String_comparison_exp { return v.Range }

// GetRelease returns Manifest_dependency_node_bool_exp.Release, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetRelease() *Package_release_bool_exp { return v.Release }

// GetRelease_id returns Manifest_dependency_node_bool_exp.Release_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_bool_exp) GetRelease_id() *Uuid_comparison_exp { return v.Release_id }

type Manifest_dependency_node_constraint string

const (
	Manifest_dependency_node_constraintManifestDependencyNodePkey Manifest_dependency_node_constraint = "manifest_dependency_node_pkey"
)

type Manifest_dependency_node_insert_input struct {
	Child_edges  *Manifest_dependency_edge_arr_rel_insert_input `json:"child_edges,omitempty"`
	Id           *uuid.UUID                                     `json:"id,omitempty"`
	Labels       *json.RawMessage                               `json:"labels,omitempty"`
	Parent_edges *Manifest_dependency_edge_arr_rel_insert_input `json:"parent_edges,omitempty"`
	Range        *string                                        `json:"range,omitempty"`
	Release      *Package_release_obj_rel_insert_input          `json:"release,omitempty"`
	Release_id   *uuid.UUID                                     `json:"release_id,omitempty"`
}

// GetChild_edges returns Manifest_dependency_node_insert_input.Child_edges, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetChild_edges() *Manifest_dependency_edge_arr_rel_insert_input {
	return v.Child_edges
}

// GetId returns Manifest_dependency_node_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLabels returns Manifest_dependency_node_insert_input.Labels, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetLabels() *json.RawMessage { return v.Labels }

// GetParent_edges returns Manifest_dependency_node_insert_input.Parent_edges, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetParent_edges() *Manifest_dependency_edge_arr_rel_insert_input {
	return v.Parent_edges
}

// GetRange returns Manifest_dependency_node_insert_input.Range, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetRange() *string { return v.Range }

// GetRelease returns Manifest_dependency_node_insert_input.Release, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetRelease() *Package_release_obj_rel_insert_input {
	return v.Release
}

// GetRelease_id returns Manifest_dependency_node_insert_input.Release_id, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_insert_input) GetRelease_id() *uuid.UUID { return v.Release_id }

type Manifest_dependency_node_obj_rel_insert_input struct {
	Data        *Manifest_dependency_node_insert_input `json:"data,omitempty"`
	On_conflict *Manifest_dependency_node_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Manifest_dependency_node_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_obj_rel_insert_input) GetData() *Manifest_dependency_node_insert_input {
	return v.Data
}

// GetOn_conflict returns Manifest_dependency_node_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_obj_rel_insert_input) GetOn_conflict() *Manifest_dependency_node_on_conflict {
	return v.On_conflict
}

type Manifest_dependency_node_on_conflict struct {
	Constraint     Manifest_dependency_node_constraint      `json:"constraint,omitempty"`
	Update_columns []Manifest_dependency_node_update_column `json:"update_columns,omitempty"`
	Where          *Manifest_dependency_node_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Manifest_dependency_node_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_on_conflict) GetConstraint() Manifest_dependency_node_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Manifest_dependency_node_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_on_conflict) GetUpdate_columns() []Manifest_dependency_node_update_column {
	return v.Update_columns
}

// GetWhere returns Manifest_dependency_node_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_node_on_conflict) GetWhere() *Manifest_dependency_node_bool_exp {
	return v.Where
}

type Manifest_dependency_node_update_column string

const (
	Manifest_dependency_node_update_columnId        Manifest_dependency_node_update_column = "id"
	Manifest_dependency_node_update_columnLabels    Manifest_dependency_node_update_column = "labels"
	Manifest_dependency_node_update_columnRange     Manifest_dependency_node_update_column = "range"
	Manifest_dependency_node_update_columnReleaseId Manifest_dependency_node_update_column = "release_id"
)

type Manifest_dependency_on_conflict struct {
	Constraint     Manifest_dependency_constraint      `json:"constraint,omitempty"`
	Update_columns []Manifest_dependency_update_column `json:"update_columns,omitempty"`
	Where          *Manifest_dependency_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Manifest_dependency_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_on_conflict) GetConstraint() Manifest_dependency_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Manifest_dependency_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_on_conflict) GetUpdate_columns() []Manifest_dependency_update_column {
	return v.Update_columns
}

// GetWhere returns Manifest_dependency_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Manifest_dependency_on_conflict) GetWhere() *Manifest_dependency_bool_exp { return v.Where }

type Manifest_dependency_update_column string

const (
	Manifest_dependency_update_columnManifestDependencyNodeId Manifest_dependency_update_column = "manifest_dependency_node_id"
	Manifest_dependency_update_columnManifestId               Manifest_dependency_update_column = "manifest_id"
)

type Manifests_arr_rel_insert_input struct {
	Data        []*Manifests_insert_input `json:"data,omitempty"`
	On_conflict *Manifests_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Manifests_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Manifests_arr_rel_insert_input) GetData() []*Manifests_insert_input { return v.Data }

// GetOn_conflict returns Manifests_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Manifests_arr_rel_insert_input) GetOn_conflict() *Manifests_on_conflict {
	return v.On_conflict
}

type Manifests_bool_exp struct {
	And        []*Manifests_bool_exp       `json:"_and,omitempty"`
	Not        *Manifests_bool_exp         `json:"_not,omitempty"`
	Or         []*Manifests_bool_exp       `json:"_or,omitempty"`
	Build      *Builds_bool_exp            `json:"build,omitempty"`
	Build_id   *Uuid_comparison_exp        `json:"build_id,omitempty"`
	Created_at *Timestamptz_comparison_exp `json:"created_at,omitempty"`
	Filename   *String_comparison_exp      `json:"filename,omitempty"`
	Id         *Uuid_comparison_exp        `json:"id,omitempty"`
	Message    *String_comparison_exp      `json:"message,omitempty"`
	Project    *Projects_bool_exp          `json:"project,omitempty"`
	Project_id *Uuid_comparison_exp        `json:"project_id,omitempty"`
	S3_key     *String_comparison_exp      `json:"s3_key,omitempty"`
	S3_url     *String_comparison_exp      `json:"s3_url,omitempty"`
	Status     *String_comparison_exp      `json:"status,omitempty"`
}

// GetAnd returns Manifests_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetAnd() []*Manifests_bool_exp { return v.And }

// GetNot returns Manifests_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetNot() *Manifests_bool_exp { return v.Not }

// GetOr returns Manifests_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetOr() []*Manifests_bool_exp { return v.Or }

// GetBuild returns Manifests_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Manifests_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetBuild_id() *Uuid_comparison_exp { return v.Build_id }

// GetCreated_at returns Manifests_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetFilename returns Manifests_bool_exp.Filename, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetFilename() *String_comparison_exp { return v.Filename }

// GetId returns Manifests_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetMessage returns Manifests_bool_exp.Message, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetMessage() *String_comparison_exp { return v.Message }

// GetProject returns Manifests_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_id returns Manifests_bool_exp.Project_id, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetProject_id() *Uuid_comparison_exp { return v.Project_id }

// GetS3_key returns Manifests_bool_exp.S3_key, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetS3_key() *String_comparison_exp { return v.S3_key }

// GetS3_url returns Manifests_bool_exp.S3_url, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetS3_url() *String_comparison_exp { return v.S3_url }

// GetStatus returns Manifests_bool_exp.Status, and is useful for accessing the field via an interface.
func (v *Manifests_bool_exp) GetStatus() *String_comparison_exp { return v.Status }

type Manifests_constraint string

const (
	Manifests_constraintManifestsPkey     Manifests_constraint = "manifests_pkey"
	Manifests_constraintManifestsS3UrlKey Manifests_constraint = "manifests_s3_url_key"
)

type Manifests_insert_input struct {
	Build      *Builds_obj_rel_insert_input   `json:"build,omitempty"`
	Build_id   *uuid.UUID                     `json:"build_id,omitempty"`
	Created_at *time.Time                     `json:"created_at,omitempty"`
	Filename   *string                        `json:"filename,omitempty"`
	Id         *uuid.UUID                     `json:"id,omitempty"`
	Message    *string                        `json:"message,omitempty"`
	Project    *Projects_obj_rel_insert_input `json:"project,omitempty"`
	Project_id *uuid.UUID                     `json:"project_id,omitempty"`
	S3_key     *string                        `json:"s3_key,omitempty"`
	S3_url     *string                        `json:"s3_url,omitempty"`
	Status     *string                        `json:"status,omitempty"`
}

// GetBuild returns Manifests_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetBuild() *Builds_obj_rel_insert_input { return v.Build }

// GetBuild_id returns Manifests_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetCreated_at returns Manifests_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetFilename returns Manifests_insert_input.Filename, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetFilename() *string { return v.Filename }

// GetId returns Manifests_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetId() *uuid.UUID { return v.Id }

// GetMessage returns Manifests_insert_input.Message, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetMessage() *string { return v.Message }

// GetProject returns Manifests_insert_input.Project, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetProject() *Projects_obj_rel_insert_input { return v.Project }

// GetProject_id returns Manifests_insert_input.Project_id, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetProject_id() *uuid.UUID { return v.Project_id }

// GetS3_key returns Manifests_insert_input.S3_key, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetS3_key() *string { return v.S3_key }

// GetS3_url returns Manifests_insert_input.S3_url, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetS3_url() *string { return v.S3_url }

// GetStatus returns Manifests_insert_input.Status, and is useful for accessing the field via an interface.
func (v *Manifests_insert_input) GetStatus() *string { return v.Status }

type Manifests_on_conflict struct {
	Constraint     Manifests_constraint      `json:"constraint,omitempty"`
	Update_columns []Manifests_update_column `json:"update_columns,omitempty"`
	Where          *Manifests_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Manifests_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Manifests_on_conflict) GetConstraint() Manifests_constraint { return v.Constraint }

// GetUpdate_columns returns Manifests_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Manifests_on_conflict) GetUpdate_columns() []Manifests_update_column {
	return v.Update_columns
}

// GetWhere returns Manifests_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Manifests_on_conflict) GetWhere() *Manifests_bool_exp { return v.Where }

type Manifests_update_column string

const (
	Manifests_update_columnBuildId   Manifests_update_column = "build_id"
	Manifests_update_columnCreatedAt Manifests_update_column = "created_at"
	Manifests_update_columnFilename  Manifests_update_column = "filename"
	Manifests_update_columnId        Manifests_update_column = "id"
	Manifests_update_columnMessage   Manifests_update_column = "message"
	Manifests_update_columnProjectId Manifests_update_column = "project_id"
	Manifests_update_columnS3Key     Manifests_update_column = "s3_key"
	Manifests_update_columnS3Url     Manifests_update_column = "s3_url"
	Manifests_update_columnStatus    Manifests_update_column = "status"
)

type Organization_user_arr_rel_insert_input struct {
	Data        []*Organization_user_insert_input `json:"data,omitempty"`
	On_conflict *Organization_user_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Organization_user_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Organization_user_arr_rel_insert_input) GetData() []*Organization_user_insert_input {
	return v.Data
}

// GetOn_conflict returns Organization_user_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Organization_user_arr_rel_insert_input) GetOn_conflict() *Organization_user_on_conflict {
	return v.On_conflict
}

type Organization_user_bool_exp struct {
	And             []*Organization_user_bool_exp          `json:"_and,omitempty"`
	Not             *Organization_user_bool_exp            `json:"_not,omitempty"`
	Or              []*Organization_user_bool_exp          `json:"_or,omitempty"`
	Created_at      *Timestamptz_comparison_exp            `json:"created_at,omitempty"`
	Id              *Uuid_comparison_exp                   `json:"id,omitempty"`
	Organization    *Organizations_bool_exp                `json:"organization,omitempty"`
	Organization_id *Uuid_comparison_exp                   `json:"organization_id,omitempty"`
	Role            *Organization_user_role_comparison_exp `json:"role,omitempty"`
	Updated_at      *Timestamptz_comparison_exp            `json:"updated_at,omitempty"`
	User            *Users_bool_exp                        `json:"user,omitempty"`
	User_id         *Uuid_comparison_exp                   `json:"user_id,omitempty"`
}

// GetAnd returns Organization_user_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetAnd() []*Organization_user_bool_exp { return v.And }

// GetNot returns Organization_user_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetNot() *Organization_user_bool_exp { return v.Not }

// GetOr returns Organization_user_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetOr() []*Organization_user_bool_exp { return v.Or }

// GetCreated_at returns Organization_user_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetId returns Organization_user_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetOrganization returns Organization_user_bool_exp.Organization, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetOrganization() *Organizations_bool_exp { return v.Organization }

// GetOrganization_id returns Organization_user_bool_exp.Organization_id, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetOrganization_id() *Uuid_comparison_exp {
	return v.Organization_id
}

// GetRole returns Organization_user_bool_exp.Role, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetRole() *Organization_user_role_comparison_exp { return v.Role }

// GetUpdated_at returns Organization_user_bool_exp.Updated_at, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetUpdated_at() *Timestamptz_comparison_exp { return v.Updated_at }

// GetUser returns Organization_user_bool_exp.User, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetUser() *Users_bool_exp { return v.User }

// GetUser_id returns Organization_user_bool_exp.User_id, and is useful for accessing the field via an interface.
func (v *Organization_user_bool_exp) GetUser_id() *Uuid_comparison_exp { return v.User_id }

type Organization_user_constraint string

const (
	Organization_user_constraintOrganizationUserPkey                    Organization_user_constraint = "organization_user_pkey"
	Organization_user_constraintOrganizationUserUserIdOrganizationIdKey Organization_user_constraint = "organization_user_user_id_organization_id_key"
)

type Organization_user_insert_input struct {
	Created_at      *time.Time                          `json:"created_at,omitempty"`
	Id              *uuid.UUID                          `json:"id,omitempty"`
	Organization    *Organizations_obj_rel_insert_input `json:"organization,omitempty"`
	Organization_id *uuid.UUID                          `json:"organization_id,omitempty"`
	Role            *string                             `json:"role,omitempty"`
	Updated_at      *time.Time                          `json:"updated_at,omitempty"`
	User            *Users_obj_rel_insert_input         `json:"user,omitempty"`
	User_id         *uuid.UUID                          `json:"user_id,omitempty"`
}

// GetCreated_at returns Organization_user_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetId returns Organization_user_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetId() *uuid.UUID { return v.Id }

// GetOrganization returns Organization_user_insert_input.Organization, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetOrganization() *Organizations_obj_rel_insert_input {
	return v.Organization
}

// GetOrganization_id returns Organization_user_insert_input.Organization_id, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetOrganization_id() *uuid.UUID { return v.Organization_id }

// GetRole returns Organization_user_insert_input.Role, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetRole() *string { return v.Role }

// GetUpdated_at returns Organization_user_insert_input.Updated_at, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetUpdated_at() *time.Time { return v.Updated_at }

// GetUser returns Organization_user_insert_input.User, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetUser() *Users_obj_rel_insert_input { return v.User }

// GetUser_id returns Organization_user_insert_input.User_id, and is useful for accessing the field via an interface.
func (v *Organization_user_insert_input) GetUser_id() *uuid.UUID { return v.User_id }

type Organization_user_on_conflict struct {
	Constraint     Organization_user_constraint      `json:"constraint,omitempty"`
	Update_columns []Organization_user_update_column `json:"update_columns,omitempty"`
	Where          *Organization_user_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Organization_user_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Organization_user_on_conflict) GetConstraint() Organization_user_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Organization_user_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Organization_user_on_conflict) GetUpdate_columns() []Organization_user_update_column {
	return v.Update_columns
}

// GetWhere returns Organization_user_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Organization_user_on_conflict) GetWhere() *Organization_user_bool_exp { return v.Where }

type Organization_user_role_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns Organization_user_role_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns Organization_user_role_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns Organization_user_role_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns Organization_user_role_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns Organization_user_role_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Organization_user_role_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns Organization_user_role_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns Organization_user_role_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns Organization_user_role_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Organization_user_role_comparison_exp) GetNin() []string { return v.Nin }

type Organization_user_update_column string

const (
	Organization_user_update_columnCreatedAt      Organization_user_update_column = "created_at"
	Organization_user_update_columnId             Organization_user_update_column = "id"
	Organization_user_update_columnOrganizationId Organization_user_update_column = "organization_id"
	Organization_user_update_columnRole           Organization_user_update_column = "role"
	Organization_user_update_columnUpdatedAt      Organization_user_update_column = "updated_at"
	Organization_user_update_columnUserId         Organization_user_update_column = "user_id"
)

type Organizations_bool_exp struct {
	And                []*Organizations_bool_exp   `json:"_and,omitempty"`
	Not                *Organizations_bool_exp     `json:"_not,omitempty"`
	Or                 []*Organizations_bool_exp   `json:"_or,omitempty"`
	CreatedAt          *Timestamptz_comparison_exp `json:"createdAt,omitempty"`
	Creator            *Users_bool_exp             `json:"creator,omitempty"`
	Creator_id         *Uuid_comparison_exp        `json:"creator_id,omitempty"`
	Github_id          *Int_comparison_exp         `json:"github_id,omitempty"`
	Github_node_id     *String_comparison_exp      `json:"github_node_id,omitempty"`
	Id                 *Uuid_comparison_exp        `json:"id,omitempty"`
	Installation_id    *Int_comparison_exp         `json:"installation_id,omitempty"`
	Name               *String_comparison_exp      `json:"name,omitempty"`
	Organization_users *Organization_user_bool_exp `json:"organization_users,omitempty"`
	Projects           *Projects_bool_exp          `json:"projects,omitempty"`
	Settings           *Settings_bool_exp          `json:"settings,omitempty"`
	Settings_id        *Uuid_comparison_exp        `json:"settings_id,omitempty"`
}

// GetAnd returns Organizations_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetAnd() []*Organizations_bool_exp { return v.And }

// GetNot returns Organizations_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetNot() *Organizations_bool_exp { return v.Not }

// GetOr returns Organizations_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetOr() []*Organizations_bool_exp { return v.Or }

// GetCreatedAt returns Organizations_bool_exp.CreatedAt, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetCreatedAt() *Timestamptz_comparison_exp { return v.CreatedAt }

// GetCreator returns Organizations_bool_exp.Creator, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetCreator() *Users_bool_exp { return v.Creator }

// GetCreator_id returns Organizations_bool_exp.Creator_id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetCreator_id() *Uuid_comparison_exp { return v.Creator_id }

// GetGithub_id returns Organizations_bool_exp.Github_id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetGithub_id() *Int_comparison_exp { return v.Github_id }

// GetGithub_node_id returns Organizations_bool_exp.Github_node_id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetGithub_node_id() *String_comparison_exp { return v.Github_node_id }

// GetId returns Organizations_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetInstallation_id returns Organizations_bool_exp.Installation_id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetInstallation_id() *Int_comparison_exp { return v.Installation_id }

// GetName returns Organizations_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetOrganization_users returns Organizations_bool_exp.Organization_users, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetOrganization_users() *Organization_user_bool_exp {
	return v.Organization_users
}

// GetProjects returns Organizations_bool_exp.Projects, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetProjects() *Projects_bool_exp { return v.Projects }

// GetSettings returns Organizations_bool_exp.Settings, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetSettings() *Settings_bool_exp { return v.Settings }

// GetSettings_id returns Organizations_bool_exp.Settings_id, and is useful for accessing the field via an interface.
func (v *Organizations_bool_exp) GetSettings_id() *Uuid_comparison_exp { return v.Settings_id }

type Organizations_constraint string

const (
	Organizations_constraintInstallationIdUnique         Organizations_constraint = "installation_id_unique"
	Organizations_constraintOrganizationsGithubIdKey     Organizations_constraint = "organizations_github_id_key"
	Organizations_constraintOrganizationsGithubNodeIdKey Organizations_constraint = "organizations_github_node_id_key"
	Organizations_constraintOrganizationsPkey            Organizations_constraint = "organizations_pkey"
)

type Organizations_insert_input struct {
	CreatedAt          *time.Time                              `json:"createdAt,omitempty"`
	Creator            *Users_obj_rel_insert_input             `json:"creator,omitempty"`
	Creator_id         *uuid.UUID                              `json:"creator_id,omitempty"`
	Github_id          *int                                    `json:"github_id,omitempty"`
	Github_node_id     *string                                 `json:"github_node_id,omitempty"`
	Github_owner_type  *string                                 `json:"github_owner_type,omitempty"`
	Id                 *uuid.UUID                              `json:"id,omitempty"`
	Installation_id    *int                                    `json:"installation_id,omitempty"`
	Name               *string                                 `json:"name,omitempty"`
	Organization_users *Organization_user_arr_rel_insert_input `json:"organization_users,omitempty"`
	Projects           *Projects_arr_rel_insert_input          `json:"projects,omitempty"`
	Settings_id        *uuid.UUID                              `json:"settings_id,omitempty"`
}

// GetCreatedAt returns Organizations_insert_input.CreatedAt, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetCreator returns Organizations_insert_input.Creator, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetCreator() *Users_obj_rel_insert_input { return v.Creator }

// GetCreator_id returns Organizations_insert_input.Creator_id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetCreator_id() *uuid.UUID { return v.Creator_id }

// GetGithub_id returns Organizations_insert_input.Github_id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetGithub_id() *int { return v.Github_id }

// GetGithub_node_id returns Organizations_insert_input.Github_node_id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetGithub_node_id() *string { return v.Github_node_id }

// GetGithub_owner_type returns Organizations_insert_input.Github_owner_type, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetGithub_owner_type() *string { return v.Github_owner_type }

// GetId returns Organizations_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetId() *uuid.UUID { return v.Id }

// GetInstallation_id returns Organizations_insert_input.Installation_id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetInstallation_id() *int { return v.Installation_id }

// GetName returns Organizations_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetName() *string { return v.Name }

// GetOrganization_users returns Organizations_insert_input.Organization_users, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetOrganization_users() *Organization_user_arr_rel_insert_input {
	return v.Organization_users
}

// GetProjects returns Organizations_insert_input.Projects, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetProjects() *Projects_arr_rel_insert_input { return v.Projects }

// GetSettings_id returns Organizations_insert_input.Settings_id, and is useful for accessing the field via an interface.
func (v *Organizations_insert_input) GetSettings_id() *uuid.UUID { return v.Settings_id }

type Organizations_obj_rel_insert_input struct {
	Data        *Organizations_insert_input `json:"data,omitempty"`
	On_conflict *Organizations_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Organizations_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Organizations_obj_rel_insert_input) GetData() *Organizations_insert_input { return v.Data }

// GetOn_conflict returns Organizations_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Organizations_obj_rel_insert_input) GetOn_conflict() *Organizations_on_conflict {
	return v.On_conflict
}

type Organizations_on_conflict struct {
	Constraint     Organizations_constraint      `json:"constraint,omitempty"`
	Update_columns []Organizations_update_column `json:"update_columns,omitempty"`
	Where          *Organizations_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Organizations_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Organizations_on_conflict) GetConstraint() Organizations_constraint { return v.Constraint }

// GetUpdate_columns returns Organizations_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Organizations_on_conflict) GetUpdate_columns() []Organizations_update_column {
	return v.Update_columns
}

// GetWhere returns Organizations_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Organizations_on_conflict) GetWhere() *Organizations_bool_exp { return v.Where }

type Organizations_update_column string

const (
	Organizations_update_columnCreatedat       Organizations_update_column = "createdAt"
	Organizations_update_columnCreatorId       Organizations_update_column = "creator_id"
	Organizations_update_columnGithubId        Organizations_update_column = "github_id"
	Organizations_update_columnGithubNodeId    Organizations_update_column = "github_node_id"
	Organizations_update_columnGithubOwnerType Organizations_update_column = "github_owner_type"
	Organizations_update_columnId              Organizations_update_column = "id"
	Organizations_update_columnInstallationId  Organizations_update_column = "installation_id"
	Organizations_update_columnName            Organizations_update_column = "name"
	Organizations_update_columnSettingsId      Organizations_update_column = "settings_id"
)

// PackageFetchTimePackage includes the requested fields of the GraphQL type package.
type PackageFetchTimePackage struct {
	Last_successful_fetch *time.Time `json:"last_successful_fetch"`
}

// GetLast_successful_fetch returns PackageFetchTimePackage.Last_successful_fetch, and is useful for accessing the field via an interface.
func (v *PackageFetchTimePackage) GetLast_successful_fetch() *time.Time {
	return v.Last_successful_fetch
}

// PackageFetchTimeResponse is returned by PackageFetchTime on success.
type PackageFetchTimeResponse struct {
	Package []*PackageFetchTimePackage `json:"package"`
}

// GetPackage returns PackageFetchTimeResponse.Package, and is useful for accessing the field via an interface.
func (v *PackageFetchTimeResponse) GetPackage() []*PackageFetchTimePackage { return v.Package }

type Package_bool_exp struct {
	And                       []*Package_bool_exp                  `json:"_and,omitempty"`
	Not                       *Package_bool_exp                    `json:"_not,omitempty"`
	Or                        []*Package_bool_exp                  `json:"_or,omitempty"`
	Affected_by_vulnerability *Vulnerability_affected_bool_exp     `json:"affected_by_vulnerability,omitempty"`
	Custom_registry           *String_comparison_exp               `json:"custom_registry,omitempty"`
	Description               *String_comparison_exp               `json:"description,omitempty"`
	Id                        *Uuid_comparison_exp                 `json:"id,omitempty"`
	Last_failed_fetch         *Timestamptz_comparison_exp          `json:"last_failed_fetch,omitempty"`
	Last_successful_fetch     *Timestamptz_comparison_exp          `json:"last_successful_fetch,omitempty"`
	Name                      *String_comparison_exp               `json:"name,omitempty"`
	Package_maintainers       *Package_package_maintainer_bool_exp `json:"package_maintainers,omitempty"`
	Package_manager           *Package_manager_comparison_exp      `json:"package_manager,omitempty"`
	Releases                  *Package_release_bool_exp            `json:"releases,omitempty"`
	Upstream_data             *Jsonb_comparison_exp                `json:"upstream_data,omitempty"`
}

// GetAnd returns Package_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetAnd() []*Package_bool_exp { return v.And }

// GetNot returns Package_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetNot() *Package_bool_exp { return v.Not }

// GetOr returns Package_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetOr() []*Package_bool_exp { return v.Or }

// GetAffected_by_vulnerability returns Package_bool_exp.Affected_by_vulnerability, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetAffected_by_vulnerability() *Vulnerability_affected_bool_exp {
	return v.Affected_by_vulnerability
}

// GetCustom_registry returns Package_bool_exp.Custom_registry, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetCustom_registry() *String_comparison_exp { return v.Custom_registry }

// GetDescription returns Package_bool_exp.Description, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetDescription() *String_comparison_exp { return v.Description }

// GetId returns Package_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLast_failed_fetch returns Package_bool_exp.Last_failed_fetch, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetLast_failed_fetch() *Timestamptz_comparison_exp {
	return v.Last_failed_fetch
}

// GetLast_successful_fetch returns Package_bool_exp.Last_successful_fetch, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetLast_successful_fetch() *Timestamptz_comparison_exp {
	return v.Last_successful_fetch
}

// GetName returns Package_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetPackage_maintainers returns Package_bool_exp.Package_maintainers, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetPackage_maintainers() *Package_package_maintainer_bool_exp {
	return v.Package_maintainers
}

// GetPackage_manager returns Package_bool_exp.Package_manager, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetPackage_manager() *Package_manager_comparison_exp {
	return v.Package_manager
}

// GetReleases returns Package_bool_exp.Releases, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetReleases() *Package_release_bool_exp { return v.Releases }

// GetUpstream_data returns Package_bool_exp.Upstream_data, and is useful for accessing the field via an interface.
func (v *Package_bool_exp) GetUpstream_data() *Jsonb_comparison_exp { return v.Upstream_data }

type Package_constraint string

const (
	Package_constraintPackagePackageManagerCustomRegistryNameIdx Package_constraint = "package_package_manager_custom_registry_name_idx"
	Package_constraintPackagePkey                                Package_constraint = "package_pkey"
)

type Package_insert_input struct {
	Affected_by_vulnerability *Vulnerability_affected_arr_rel_insert_input     `json:"affected_by_vulnerability,omitempty"`
	Custom_registry           *string                                          `json:"custom_registry,omitempty"`
	Description               *string                                          `json:"description,omitempty"`
	Id                        *uuid.UUID                                       `json:"id,omitempty"`
	Last_failed_fetch         *time.Time                                       `json:"last_failed_fetch,omitempty"`
	Last_successful_fetch     *time.Time                                       `json:"last_successful_fetch,omitempty"`
	Name                      *string                                          `json:"name,omitempty"`
	Package_maintainers       *Package_package_maintainer_arr_rel_insert_input `json:"package_maintainers,omitempty"`
	Package_manager           *types.PackageManager                            `json:"package_manager,omitempty"`
	Releases                  *Package_release_arr_rel_insert_input            `json:"releases,omitempty"`
	Upstream_data             *json.RawMessage                                 `json:"upstream_data,omitempty"`
}

// GetAffected_by_vulnerability returns Package_insert_input.Affected_by_vulnerability, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetAffected_by_vulnerability() *Vulnerability_affected_arr_rel_insert_input {
	return v.Affected_by_vulnerability
}

// GetCustom_registry returns Package_insert_input.Custom_registry, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetCustom_registry() *string { return v.Custom_registry }

// GetDescription returns Package_insert_input.Description, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetDescription() *string { return v.Description }

// GetId returns Package_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLast_failed_fetch returns Package_insert_input.Last_failed_fetch, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetLast_failed_fetch() *time.Time { return v.Last_failed_fetch }

// GetLast_successful_fetch returns Package_insert_input.Last_successful_fetch, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetLast_successful_fetch() *time.Time { return v.Last_successful_fetch }

// GetName returns Package_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetName() *string { return v.Name }

// GetPackage_maintainers returns Package_insert_input.Package_maintainers, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetPackage_maintainers() *Package_package_maintainer_arr_rel_insert_input {
	return v.Package_maintainers
}

// GetPackage_manager returns Package_insert_input.Package_manager, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetPackage_manager() *types.PackageManager { return v.Package_manager }

// GetReleases returns Package_insert_input.Releases, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetReleases() *Package_release_arr_rel_insert_input { return v.Releases }

// GetUpstream_data returns Package_insert_input.Upstream_data, and is useful for accessing the field via an interface.
func (v *Package_insert_input) GetUpstream_data() *json.RawMessage { return v.Upstream_data }

type Package_license_bool_exp struct {
	And              []*Package_license_bool_exp       `json:"_and,omitempty"`
	Not              *Package_license_bool_exp         `json:"_not,omitempty"`
	Or               []*Package_license_bool_exp       `json:"_or,omitempty"`
	Id               *Uuid_comparison_exp              `json:"id,omitempty"`
	Name             *String_comparison_exp            `json:"name,omitempty"`
	Release_licenses *Package_release_license_bool_exp `json:"release_licenses,omitempty"`
}

// GetAnd returns Package_license_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetAnd() []*Package_license_bool_exp { return v.And }

// GetNot returns Package_license_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetNot() *Package_license_bool_exp { return v.Not }

// GetOr returns Package_license_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetOr() []*Package_license_bool_exp { return v.Or }

// GetId returns Package_license_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetName returns Package_license_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetRelease_licenses returns Package_license_bool_exp.Release_licenses, and is useful for accessing the field via an interface.
func (v *Package_license_bool_exp) GetRelease_licenses() *Package_release_license_bool_exp {
	return v.Release_licenses
}

type Package_license_constraint string

const (
	Package_license_constraintLicenseNameIdx Package_license_constraint = "license_name_idx"
	Package_license_constraintLicensePkey    Package_license_constraint = "license_pkey"
)

type Package_license_insert_input struct {
	Id               *uuid.UUID                                    `json:"id,omitempty"`
	Name             *string                                       `json:"name,omitempty"`
	Release_licenses *Package_release_license_arr_rel_insert_input `json:"release_licenses,omitempty"`
}

// GetId returns Package_license_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_license_insert_input) GetId() *uuid.UUID { return v.Id }

// GetName returns Package_license_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Package_license_insert_input) GetName() *string { return v.Name }

// GetRelease_licenses returns Package_license_insert_input.Release_licenses, and is useful for accessing the field via an interface.
func (v *Package_license_insert_input) GetRelease_licenses() *Package_release_license_arr_rel_insert_input {
	return v.Release_licenses
}

type Package_license_obj_rel_insert_input struct {
	Data        *Package_license_insert_input `json:"data,omitempty"`
	On_conflict *Package_license_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Package_license_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_license_obj_rel_insert_input) GetData() *Package_license_insert_input { return v.Data }

// GetOn_conflict returns Package_license_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_license_obj_rel_insert_input) GetOn_conflict() *Package_license_on_conflict {
	return v.On_conflict
}

type Package_license_on_conflict struct {
	Constraint     Package_license_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_license_update_column `json:"update_columns,omitempty"`
	Where          *Package_license_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_license_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_license_on_conflict) GetConstraint() Package_license_constraint { return v.Constraint }

// GetUpdate_columns returns Package_license_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_license_on_conflict) GetUpdate_columns() []Package_license_update_column {
	return v.Update_columns
}

// GetWhere returns Package_license_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_license_on_conflict) GetWhere() *Package_license_bool_exp { return v.Where }

type Package_license_update_column string

const (
	Package_license_update_columnId   Package_license_update_column = "id"
	Package_license_update_columnName Package_license_update_column = "name"
)

type Package_maintainer_bool_exp struct {
	And                 []*Package_maintainer_bool_exp       `json:"_and,omitempty"`
	Not                 *Package_maintainer_bool_exp         `json:"_not,omitempty"`
	Or                  []*Package_maintainer_bool_exp       `json:"_or,omitempty"`
	Email               *String_comparison_exp               `json:"email,omitempty"`
	Id                  *Uuid_comparison_exp                 `json:"id,omitempty"`
	Name                *String_comparison_exp               `json:"name,omitempty"`
	Package_maintainers *Package_package_maintainer_bool_exp `json:"package_maintainers,omitempty"`
	Package_manager     *Package_manager_comparison_exp      `json:"package_manager,omitempty"`
	Published_releases  *Package_release_bool_exp            `json:"published_releases,omitempty"`
}

// GetAnd returns Package_maintainer_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetAnd() []*Package_maintainer_bool_exp { return v.And }

// GetNot returns Package_maintainer_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetNot() *Package_maintainer_bool_exp { return v.Not }

// GetOr returns Package_maintainer_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetOr() []*Package_maintainer_bool_exp { return v.Or }

// GetEmail returns Package_maintainer_bool_exp.Email, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetEmail() *String_comparison_exp { return v.Email }

// GetId returns Package_maintainer_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetName returns Package_maintainer_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetPackage_maintainers returns Package_maintainer_bool_exp.Package_maintainers, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetPackage_maintainers() *Package_package_maintainer_bool_exp {
	return v.Package_maintainers
}

// GetPackage_manager returns Package_maintainer_bool_exp.Package_manager, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetPackage_manager() *Package_manager_comparison_exp {
	return v.Package_manager
}

// GetPublished_releases returns Package_maintainer_bool_exp.Published_releases, and is useful for accessing the field via an interface.
func (v *Package_maintainer_bool_exp) GetPublished_releases() *Package_release_bool_exp {
	return v.Published_releases
}

type Package_maintainer_constraint string

const (
	Package_maintainer_constraintMaintainerPackageManagerEmailIdx Package_maintainer_constraint = "maintainer_package_manager_email_idx"
	Package_maintainer_constraintMaintainerPkey                   Package_maintainer_constraint = "maintainer_pkey"
)

type Package_maintainer_insert_input struct {
	Email               *string                                          `json:"email,omitempty"`
	Id                  *uuid.UUID                                       `json:"id,omitempty"`
	Name                *string                                          `json:"name,omitempty"`
	Package_maintainers *Package_package_maintainer_arr_rel_insert_input `json:"package_maintainers,omitempty"`
	Package_manager     *types.PackageManager                            `json:"package_manager,omitempty"`
	Published_releases  *Package_release_arr_rel_insert_input            `json:"published_releases,omitempty"`
}

// GetEmail returns Package_maintainer_insert_input.Email, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetEmail() *string { return v.Email }

// GetId returns Package_maintainer_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetId() *uuid.UUID { return v.Id }

// GetName returns Package_maintainer_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetName() *string { return v.Name }

// GetPackage_maintainers returns Package_maintainer_insert_input.Package_maintainers, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetPackage_maintainers() *Package_package_maintainer_arr_rel_insert_input {
	return v.Package_maintainers
}

// GetPackage_manager returns Package_maintainer_insert_input.Package_manager, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetPackage_manager() *types.PackageManager {
	return v.Package_manager
}

// GetPublished_releases returns Package_maintainer_insert_input.Published_releases, and is useful for accessing the field via an interface.
func (v *Package_maintainer_insert_input) GetPublished_releases() *Package_release_arr_rel_insert_input {
	return v.Published_releases
}

type Package_maintainer_obj_rel_insert_input struct {
	Data        *Package_maintainer_insert_input `json:"data,omitempty"`
	On_conflict *Package_maintainer_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Package_maintainer_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_maintainer_obj_rel_insert_input) GetData() *Package_maintainer_insert_input {
	return v.Data
}

// GetOn_conflict returns Package_maintainer_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_maintainer_obj_rel_insert_input) GetOn_conflict() *Package_maintainer_on_conflict {
	return v.On_conflict
}

type Package_maintainer_on_conflict struct {
	Constraint     Package_maintainer_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_maintainer_update_column `json:"update_columns,omitempty"`
	Where          *Package_maintainer_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_maintainer_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_maintainer_on_conflict) GetConstraint() Package_maintainer_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Package_maintainer_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_maintainer_on_conflict) GetUpdate_columns() []Package_maintainer_update_column {
	return v.Update_columns
}

// GetWhere returns Package_maintainer_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_maintainer_on_conflict) GetWhere() *Package_maintainer_bool_exp { return v.Where }

type Package_maintainer_update_column string

const (
	Package_maintainer_update_columnEmail          Package_maintainer_update_column = "email"
	Package_maintainer_update_columnId             Package_maintainer_update_column = "id"
	Package_maintainer_update_columnName           Package_maintainer_update_column = "name"
	Package_maintainer_update_columnPackageManager Package_maintainer_update_column = "package_manager"
)

type Package_manager_comparison_exp struct {
	Eq      *types.PackageManager  `json:"_eq,omitempty"`
	Gt      *types.PackageManager  `json:"_gt,omitempty"`
	Gte     *types.PackageManager  `json:"_gte,omitempty"`
	In      []types.PackageManager `json:"_in,omitempty"`
	Is_null *bool                  `json:"_is_null,omitempty"`
	Lt      *types.PackageManager  `json:"_lt,omitempty"`
	Lte     *types.PackageManager  `json:"_lte,omitempty"`
	Neq     *types.PackageManager  `json:"_neq,omitempty"`
	Nin     []types.PackageManager `json:"_nin,omitempty"`
}

// GetEq returns Package_manager_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetEq() *types.PackageManager { return v.Eq }

// GetGt returns Package_manager_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetGt() *types.PackageManager { return v.Gt }

// GetGte returns Package_manager_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetGte() *types.PackageManager { return v.Gte }

// GetIn returns Package_manager_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetIn() []types.PackageManager { return v.In }

// GetIs_null returns Package_manager_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Package_manager_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetLt() *types.PackageManager { return v.Lt }

// GetLte returns Package_manager_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetLte() *types.PackageManager { return v.Lte }

// GetNeq returns Package_manager_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetNeq() *types.PackageManager { return v.Neq }

// GetNin returns Package_manager_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Package_manager_comparison_exp) GetNin() []types.PackageManager { return v.Nin }

type Package_obj_rel_insert_input struct {
	Data        *Package_insert_input `json:"data,omitempty"`
	On_conflict *Package_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Package_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_obj_rel_insert_input) GetData() *Package_insert_input { return v.Data }

// GetOn_conflict returns Package_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_obj_rel_insert_input) GetOn_conflict() *Package_on_conflict { return v.On_conflict }

type Package_on_conflict struct {
	Constraint     Package_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_update_column `json:"update_columns,omitempty"`
	Where          *Package_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_on_conflict) GetConstraint() Package_constraint { return v.Constraint }

// GetUpdate_columns returns Package_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_on_conflict) GetUpdate_columns() []Package_update_column { return v.Update_columns }

// GetWhere returns Package_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_on_conflict) GetWhere() *Package_bool_exp { return v.Where }

type Package_package_maintainer_arr_rel_insert_input struct {
	Data        []*Package_package_maintainer_insert_input `json:"data,omitempty"`
	On_conflict *Package_package_maintainer_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Package_package_maintainer_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_arr_rel_insert_input) GetData() []*Package_package_maintainer_insert_input {
	return v.Data
}

// GetOn_conflict returns Package_package_maintainer_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_arr_rel_insert_input) GetOn_conflict() *Package_package_maintainer_on_conflict {
	return v.On_conflict
}

type Package_package_maintainer_bool_exp struct {
	And           []*Package_package_maintainer_bool_exp `json:"_and,omitempty"`
	Not           *Package_package_maintainer_bool_exp   `json:"_not,omitempty"`
	Or            []*Package_package_maintainer_bool_exp `json:"_or,omitempty"`
	Maintainer    *Package_maintainer_bool_exp           `json:"maintainer,omitempty"`
	Maintainer_id *Uuid_comparison_exp                   `json:"maintainer_id,omitempty"`
	Package       *Package_bool_exp                      `json:"package,omitempty"`
	Package_id    *Uuid_comparison_exp                   `json:"package_id,omitempty"`
}

// GetAnd returns Package_package_maintainer_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetAnd() []*Package_package_maintainer_bool_exp {
	return v.And
}

// GetNot returns Package_package_maintainer_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetNot() *Package_package_maintainer_bool_exp {
	return v.Not
}

// GetOr returns Package_package_maintainer_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetOr() []*Package_package_maintainer_bool_exp {
	return v.Or
}

// GetMaintainer returns Package_package_maintainer_bool_exp.Maintainer, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetMaintainer() *Package_maintainer_bool_exp {
	return v.Maintainer
}

// GetMaintainer_id returns Package_package_maintainer_bool_exp.Maintainer_id, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetMaintainer_id() *Uuid_comparison_exp {
	return v.Maintainer_id
}

// GetPackage returns Package_package_maintainer_bool_exp.Package, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetPackage() *Package_bool_exp { return v.Package }

// GetPackage_id returns Package_package_maintainer_bool_exp.Package_id, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_bool_exp) GetPackage_id() *Uuid_comparison_exp {
	return v.Package_id
}

type Package_package_maintainer_constraint string

const (
	Package_package_maintainer_constraintPackageMaintainerPackageIdMaintainerIdIdx Package_package_maintainer_constraint = "package_maintainer_package_id_maintainer_id_idx"
)

type Package_package_maintainer_insert_input struct {
	Maintainer    *Package_maintainer_obj_rel_insert_input `json:"maintainer,omitempty"`
	Maintainer_id *uuid.UUID                               `json:"maintainer_id,omitempty"`
	Package       *Package_obj_rel_insert_input            `json:"package,omitempty"`
	Package_id    *uuid.UUID                               `json:"package_id,omitempty"`
}

// GetMaintainer returns Package_package_maintainer_insert_input.Maintainer, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_insert_input) GetMaintainer() *Package_maintainer_obj_rel_insert_input {
	return v.Maintainer
}

// GetMaintainer_id returns Package_package_maintainer_insert_input.Maintainer_id, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_insert_input) GetMaintainer_id() *uuid.UUID {
	return v.Maintainer_id
}

// GetPackage returns Package_package_maintainer_insert_input.Package, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_insert_input) GetPackage() *Package_obj_rel_insert_input {
	return v.Package
}

// GetPackage_id returns Package_package_maintainer_insert_input.Package_id, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_insert_input) GetPackage_id() *uuid.UUID { return v.Package_id }

type Package_package_maintainer_on_conflict struct {
	Constraint     Package_package_maintainer_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_package_maintainer_update_column `json:"update_columns,omitempty"`
	Where          *Package_package_maintainer_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_package_maintainer_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_on_conflict) GetConstraint() Package_package_maintainer_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Package_package_maintainer_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_on_conflict) GetUpdate_columns() []Package_package_maintainer_update_column {
	return v.Update_columns
}

// GetWhere returns Package_package_maintainer_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_package_maintainer_on_conflict) GetWhere() *Package_package_maintainer_bool_exp {
	return v.Where
}

type Package_package_maintainer_update_column string

const (
	Package_package_maintainer_update_columnMaintainerId Package_package_maintainer_update_column = "maintainer_id"
	Package_package_maintainer_update_columnPackageId    Package_package_maintainer_update_column = "package_id"
)

type Package_release_arr_rel_insert_input struct {
	Data        []*Package_release_insert_input `json:"data,omitempty"`
	On_conflict *Package_release_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Package_release_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_release_arr_rel_insert_input) GetData() []*Package_release_insert_input {
	return v.Data
}

// GetOn_conflict returns Package_release_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_release_arr_rel_insert_input) GetOn_conflict() *Package_release_on_conflict {
	return v.On_conflict
}

type Package_release_bool_exp struct {
	And                            []*Package_release_bool_exp             `json:"_and,omitempty"`
	Not                            *Package_release_bool_exp               `json:"_not,omitempty"`
	Or                             []*Package_release_bool_exp             `json:"_or,omitempty"`
	Blob_hash                      *String_comparison_exp                  `json:"blob_hash,omitempty"`
	Build_dependency_relationships *Build_dependency_relationship_bool_exp `json:"build_dependency_relationships,omitempty"`
	Fetched_time                   *Timestamptz_comparison_exp             `json:"fetched_time,omitempty"`
	Id                             *Uuid_comparison_exp                    `json:"id,omitempty"`
	Mirrored_blob_url              *String_comparison_exp                  `json:"mirrored_blob_url,omitempty"`
	Observed_time                  *Timestamptz_comparison_exp             `json:"observed_time,omitempty"`
	Package                        *Package_bool_exp                       `json:"package,omitempty"`
	Package_id                     *Uuid_comparison_exp                    `json:"package_id,omitempty"`
	Publishing_maintainer          *Package_maintainer_bool_exp            `json:"publishing_maintainer,omitempty"`
	Publishing_maintainer_id       *Uuid_comparison_exp                    `json:"publishing_maintainer_id,omitempty"`
	Release_dependencies           *Package_release_dependency_bool_exp    `json:"release_dependencies,omitempty"`
	Release_licenses               *Package_release_license_bool_exp       `json:"release_licenses,omitempty"`
	Release_time                   *Timestamptz_comparison_exp             `json:"release_time,omitempty"`
	Upstream_blob_url              *String_comparison_exp                  `json:"upstream_blob_url,omitempty"`
	Upstream_data                  *Jsonb_comparison_exp                   `json:"upstream_data,omitempty"`
	Version                        *String_comparison_exp                  `json:"version,omitempty"`
}

// GetAnd returns Package_release_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetAnd() []*Package_release_bool_exp { return v.And }

// GetNot returns Package_release_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetNot() *Package_release_bool_exp { return v.Not }

// GetOr returns Package_release_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetOr() []*Package_release_bool_exp { return v.Or }

// GetBlob_hash returns Package_release_bool_exp.Blob_hash, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetBlob_hash() *String_comparison_exp { return v.Blob_hash }

// GetBuild_dependency_relationships returns Package_release_bool_exp.Build_dependency_relationships, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetBuild_dependency_relationships() *Build_dependency_relationship_bool_exp {
	return v.Build_dependency_relationships
}

// GetFetched_time returns Package_release_bool_exp.Fetched_time, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetFetched_time() *Timestamptz_comparison_exp {
	return v.Fetched_time
}

// GetId returns Package_release_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetMirrored_blob_url returns Package_release_bool_exp.Mirrored_blob_url, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetMirrored_blob_url() *String_comparison_exp {
	return v.Mirrored_blob_url
}

// GetObserved_time returns Package_release_bool_exp.Observed_time, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetObserved_time() *Timestamptz_comparison_exp {
	return v.Observed_time
}

// GetPackage returns Package_release_bool_exp.Package, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetPackage() *Package_bool_exp { return v.Package }

// GetPackage_id returns Package_release_bool_exp.Package_id, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetPackage_id() *Uuid_comparison_exp { return v.Package_id }

// GetPublishing_maintainer returns Package_release_bool_exp.Publishing_maintainer, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetPublishing_maintainer() *Package_maintainer_bool_exp {
	return v.Publishing_maintainer
}

// GetPublishing_maintainer_id returns Package_release_bool_exp.Publishing_maintainer_id, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetPublishing_maintainer_id() *Uuid_comparison_exp {
	return v.Publishing_maintainer_id
}

// GetRelease_dependencies returns Package_release_bool_exp.Release_dependencies, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetRelease_dependencies() *Package_release_dependency_bool_exp {
	return v.Release_dependencies
}

// GetRelease_licenses returns Package_release_bool_exp.Release_licenses, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetRelease_licenses() *Package_release_license_bool_exp {
	return v.Release_licenses
}

// GetRelease_time returns Package_release_bool_exp.Release_time, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetRelease_time() *Timestamptz_comparison_exp {
	return v.Release_time
}

// GetUpstream_blob_url returns Package_release_bool_exp.Upstream_blob_url, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetUpstream_blob_url() *String_comparison_exp {
	return v.Upstream_blob_url
}

// GetUpstream_data returns Package_release_bool_exp.Upstream_data, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetUpstream_data() *Jsonb_comparison_exp { return v.Upstream_data }

// GetVersion returns Package_release_bool_exp.Version, and is useful for accessing the field via an interface.
func (v *Package_release_bool_exp) GetVersion() *String_comparison_exp { return v.Version }

type Package_release_constraint string

const (
	Package_release_constraintReleasePackageIdVersionIdx Package_release_constraint = "release_package_id_version_idx"
	Package_release_constraintReleasePkey                Package_release_constraint = "release_pkey"
)

type Package_release_dependency_arr_rel_insert_input struct {
	Data        []*Package_release_dependency_insert_input `json:"data,omitempty"`
	On_conflict *Package_release_dependency_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Package_release_dependency_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_arr_rel_insert_input) GetData() []*Package_release_dependency_insert_input {
	return v.Data
}

// GetOn_conflict returns Package_release_dependency_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_arr_rel_insert_input) GetOn_conflict() *Package_release_dependency_on_conflict {
	return v.On_conflict
}

type Package_release_dependency_bool_exp struct {
	And                   []*Package_release_dependency_bool_exp `json:"_and,omitempty"`
	Not                   *Package_release_dependency_bool_exp   `json:"_not,omitempty"`
	Or                    []*Package_release_dependency_bool_exp `json:"_or,omitempty"`
	Dependency_package    *Package_bool_exp                      `json:"dependency_package,omitempty"`
	Dependency_package_id *Uuid_comparison_exp                   `json:"dependency_package_id,omitempty"`
	Dependency_release_id *Uuid_comparison_exp                   `json:"dependency_release_id,omitempty"`
	Id                    *Uuid_comparison_exp                   `json:"id,omitempty"`
	Is_dev                *Boolean_comparison_exp                `json:"is_dev,omitempty"`
	Package_name          *String_comparison_exp                 `json:"package_name,omitempty"`
	Package_version_query *String_comparison_exp                 `json:"package_version_query,omitempty"`
	Release               *Package_release_bool_exp              `json:"release,omitempty"`
	Release_id            *Uuid_comparison_exp                   `json:"release_id,omitempty"`
}

// GetAnd returns Package_release_dependency_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetAnd() []*Package_release_dependency_bool_exp {
	return v.And
}

// GetNot returns Package_release_dependency_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetNot() *Package_release_dependency_bool_exp {
	return v.Not
}

// GetOr returns Package_release_dependency_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetOr() []*Package_release_dependency_bool_exp {
	return v.Or
}

// GetDependency_package returns Package_release_dependency_bool_exp.Dependency_package, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetDependency_package() *Package_bool_exp {
	return v.Dependency_package
}

// GetDependency_package_id returns Package_release_dependency_bool_exp.Dependency_package_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetDependency_package_id() *Uuid_comparison_exp {
	return v.Dependency_package_id
}

// GetDependency_release_id returns Package_release_dependency_bool_exp.Dependency_release_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetDependency_release_id() *Uuid_comparison_exp {
	return v.Dependency_release_id
}

// GetId returns Package_release_dependency_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIs_dev returns Package_release_dependency_bool_exp.Is_dev, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetIs_dev() *Boolean_comparison_exp { return v.Is_dev }

// GetPackage_name returns Package_release_dependency_bool_exp.Package_name, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetPackage_name() *String_comparison_exp {
	return v.Package_name
}

// GetPackage_version_query returns Package_release_dependency_bool_exp.Package_version_query, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetPackage_version_query() *String_comparison_exp {
	return v.Package_version_query
}

// GetRelease returns Package_release_dependency_bool_exp.Release, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetRelease() *Package_release_bool_exp {
	return v.Release
}

// GetRelease_id returns Package_release_dependency_bool_exp.Release_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_bool_exp) GetRelease_id() *Uuid_comparison_exp {
	return v.Release_id
}

type Package_release_dependency_constraint string

const (
	Package_release_dependency_constraintReleaseDependencyPkey                                  Package_release_dependency_constraint = "release_dependency_pkey"
	Package_release_dependency_constraintReleaseDependencyReleaseIdPackageNamePackageVersionIdx Package_release_dependency_constraint = "release_dependency_release_id_package_name_package_version__idx"
)

type Package_release_dependency_insert_input struct {
	Dependency_package    *Package_obj_rel_insert_input         `json:"dependency_package,omitempty"`
	Dependency_package_id *uuid.UUID                            `json:"dependency_package_id,omitempty"`
	Dependency_release_id *uuid.UUID                            `json:"dependency_release_id,omitempty"`
	Id                    *uuid.UUID                            `json:"id,omitempty"`
	Is_dev                *bool                                 `json:"is_dev,omitempty"`
	Package_name          *string                               `json:"package_name,omitempty"`
	Package_version_query *string                               `json:"package_version_query,omitempty"`
	Release               *Package_release_obj_rel_insert_input `json:"release,omitempty"`
	Release_id            *uuid.UUID                            `json:"release_id,omitempty"`
}

// GetDependency_package returns Package_release_dependency_insert_input.Dependency_package, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetDependency_package() *Package_obj_rel_insert_input {
	return v.Dependency_package
}

// GetDependency_package_id returns Package_release_dependency_insert_input.Dependency_package_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetDependency_package_id() *uuid.UUID {
	return v.Dependency_package_id
}

// GetDependency_release_id returns Package_release_dependency_insert_input.Dependency_release_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetDependency_release_id() *uuid.UUID {
	return v.Dependency_release_id
}

// GetId returns Package_release_dependency_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetId() *uuid.UUID { return v.Id }

// GetIs_dev returns Package_release_dependency_insert_input.Is_dev, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetIs_dev() *bool { return v.Is_dev }

// GetPackage_name returns Package_release_dependency_insert_input.Package_name, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetPackage_name() *string { return v.Package_name }

// GetPackage_version_query returns Package_release_dependency_insert_input.Package_version_query, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetPackage_version_query() *string {
	return v.Package_version_query
}

// GetRelease returns Package_release_dependency_insert_input.Release, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetRelease() *Package_release_obj_rel_insert_input {
	return v.Release
}

// GetRelease_id returns Package_release_dependency_insert_input.Release_id, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_insert_input) GetRelease_id() *uuid.UUID { return v.Release_id }

type Package_release_dependency_on_conflict struct {
	Constraint     Package_release_dependency_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_release_dependency_update_column `json:"update_columns,omitempty"`
	Where          *Package_release_dependency_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_release_dependency_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_on_conflict) GetConstraint() Package_release_dependency_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Package_release_dependency_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_on_conflict) GetUpdate_columns() []Package_release_dependency_update_column {
	return v.Update_columns
}

// GetWhere returns Package_release_dependency_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_release_dependency_on_conflict) GetWhere() *Package_release_dependency_bool_exp {
	return v.Where
}

type Package_release_dependency_update_column string

const (
	Package_release_dependency_update_columnDependencyPackageId Package_release_dependency_update_column = "dependency_package_id"
	Package_release_dependency_update_columnDependencyReleaseId Package_release_dependency_update_column = "dependency_release_id"
	Package_release_dependency_update_columnId                  Package_release_dependency_update_column = "id"
	Package_release_dependency_update_columnIsDev               Package_release_dependency_update_column = "is_dev"
	Package_release_dependency_update_columnPackageName         Package_release_dependency_update_column = "package_name"
	Package_release_dependency_update_columnPackageVersionQuery Package_release_dependency_update_column = "package_version_query"
	Package_release_dependency_update_columnReleaseId           Package_release_dependency_update_column = "release_id"
)

type Package_release_insert_input struct {
	Blob_hash                      *string                                             `json:"blob_hash,omitempty"`
	Build_dependency_relationships *Build_dependency_relationship_arr_rel_insert_input `json:"build_dependency_relationships,omitempty"`
	Fetched_time                   *time.Time                                          `json:"fetched_time,omitempty"`
	Id                             *uuid.UUID                                          `json:"id,omitempty"`
	Mirrored_blob_url              *string                                             `json:"mirrored_blob_url,omitempty"`
	Observed_time                  *time.Time                                          `json:"observed_time,omitempty"`
	Package                        *Package_obj_rel_insert_input                       `json:"package,omitempty"`
	Package_id                     *uuid.UUID                                          `json:"package_id,omitempty"`
	Publishing_maintainer          *Package_maintainer_obj_rel_insert_input            `json:"publishing_maintainer,omitempty"`
	Publishing_maintainer_id       *uuid.UUID                                          `json:"publishing_maintainer_id,omitempty"`
	Release_dependencies           *Package_release_dependency_arr_rel_insert_input    `json:"release_dependencies,omitempty"`
	Release_licenses               *Package_release_license_arr_rel_insert_input       `json:"release_licenses,omitempty"`
	Release_time                   *time.Time                                          `json:"release_time,omitempty"`
	Upstream_blob_url              *string                                             `json:"upstream_blob_url,omitempty"`
	Upstream_data                  *json.RawMessage                                    `json:"upstream_data,omitempty"`
	Version                        *string                                             `json:"version,omitempty"`
}

// GetBlob_hash returns Package_release_insert_input.Blob_hash, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetBlob_hash() *string { return v.Blob_hash }

// GetBuild_dependency_relationships returns Package_release_insert_input.Build_dependency_relationships, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetBuild_dependency_relationships() *Build_dependency_relationship_arr_rel_insert_input {
	return v.Build_dependency_relationships
}

// GetFetched_time returns Package_release_insert_input.Fetched_time, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetFetched_time() *time.Time { return v.Fetched_time }

// GetId returns Package_release_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetId() *uuid.UUID { return v.Id }

// GetMirrored_blob_url returns Package_release_insert_input.Mirrored_blob_url, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetMirrored_blob_url() *string { return v.Mirrored_blob_url }

// GetObserved_time returns Package_release_insert_input.Observed_time, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetObserved_time() *time.Time { return v.Observed_time }

// GetPackage returns Package_release_insert_input.Package, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetPackage() *Package_obj_rel_insert_input { return v.Package }

// GetPackage_id returns Package_release_insert_input.Package_id, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetPackage_id() *uuid.UUID { return v.Package_id }

// GetPublishing_maintainer returns Package_release_insert_input.Publishing_maintainer, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetPublishing_maintainer() *Package_maintainer_obj_rel_insert_input {
	return v.Publishing_maintainer
}

// GetPublishing_maintainer_id returns Package_release_insert_input.Publishing_maintainer_id, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetPublishing_maintainer_id() *uuid.UUID {
	return v.Publishing_maintainer_id
}

// GetRelease_dependencies returns Package_release_insert_input.Release_dependencies, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetRelease_dependencies() *Package_release_dependency_arr_rel_insert_input {
	return v.Release_dependencies
}

// GetRelease_licenses returns Package_release_insert_input.Release_licenses, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetRelease_licenses() *Package_release_license_arr_rel_insert_input {
	return v.Release_licenses
}

// GetRelease_time returns Package_release_insert_input.Release_time, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetRelease_time() *time.Time { return v.Release_time }

// GetUpstream_blob_url returns Package_release_insert_input.Upstream_blob_url, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetUpstream_blob_url() *string { return v.Upstream_blob_url }

// GetUpstream_data returns Package_release_insert_input.Upstream_data, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetUpstream_data() *json.RawMessage { return v.Upstream_data }

// GetVersion returns Package_release_insert_input.Version, and is useful for accessing the field via an interface.
func (v *Package_release_insert_input) GetVersion() *string { return v.Version }

type Package_release_license_arr_rel_insert_input struct {
	Data        []*Package_release_license_insert_input `json:"data,omitempty"`
	On_conflict *Package_release_license_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Package_release_license_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_release_license_arr_rel_insert_input) GetData() []*Package_release_license_insert_input {
	return v.Data
}

// GetOn_conflict returns Package_release_license_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_release_license_arr_rel_insert_input) GetOn_conflict() *Package_release_license_on_conflict {
	return v.On_conflict
}

type Package_release_license_bool_exp struct {
	And           []*Package_release_license_bool_exp `json:"_and,omitempty"`
	Not           *Package_release_license_bool_exp   `json:"_not,omitempty"`
	Or            []*Package_release_license_bool_exp `json:"_or,omitempty"`
	Id            *Uuid_comparison_exp                `json:"id,omitempty"`
	License       *Package_license_bool_exp           `json:"license,omitempty"`
	License_id    *Uuid_comparison_exp                `json:"license_id,omitempty"`
	Release_id    *Uuid_comparison_exp                `json:"release_id,omitempty"`
	Scan_metadata *Jsonb_comparison_exp               `json:"scan_metadata,omitempty"`
	Scan_time     *Timestamptz_comparison_exp         `json:"scan_time,omitempty"`
	Source        *License_source_comparison_exp      `json:"source,omitempty"`
}

// GetAnd returns Package_release_license_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetAnd() []*Package_release_license_bool_exp { return v.And }

// GetNot returns Package_release_license_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetNot() *Package_release_license_bool_exp { return v.Not }

// GetOr returns Package_release_license_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetOr() []*Package_release_license_bool_exp { return v.Or }

// GetId returns Package_release_license_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetLicense returns Package_release_license_bool_exp.License, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetLicense() *Package_license_bool_exp { return v.License }

// GetLicense_id returns Package_release_license_bool_exp.License_id, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetLicense_id() *Uuid_comparison_exp { return v.License_id }

// GetRelease_id returns Package_release_license_bool_exp.Release_id, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetRelease_id() *Uuid_comparison_exp { return v.Release_id }

// GetScan_metadata returns Package_release_license_bool_exp.Scan_metadata, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetScan_metadata() *Jsonb_comparison_exp {
	return v.Scan_metadata
}

// GetScan_time returns Package_release_license_bool_exp.Scan_time, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetScan_time() *Timestamptz_comparison_exp {
	return v.Scan_time
}

// GetSource returns Package_release_license_bool_exp.Source, and is useful for accessing the field via an interface.
func (v *Package_release_license_bool_exp) GetSource() *License_source_comparison_exp {
	return v.Source
}

type Package_release_license_constraint string

const (
	Package_release_license_constraintReleaseLicensePkey Package_release_license_constraint = "release_license_pkey"
)

type Package_release_license_insert_input struct {
	Id            *uuid.UUID                            `json:"id,omitempty"`
	License       *Package_license_obj_rel_insert_input `json:"license,omitempty"`
	License_id    *uuid.UUID                            `json:"license_id,omitempty"`
	Release_id    *uuid.UUID                            `json:"release_id,omitempty"`
	Scan_metadata *json.RawMessage                      `json:"scan_metadata,omitempty"`
	Scan_time     *time.Time                            `json:"scan_time,omitempty"`
	Source        *types.LicenseSource                  `json:"source,omitempty"`
}

// GetId returns Package_release_license_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLicense returns Package_release_license_insert_input.License, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetLicense() *Package_license_obj_rel_insert_input {
	return v.License
}

// GetLicense_id returns Package_release_license_insert_input.License_id, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetLicense_id() *uuid.UUID { return v.License_id }

// GetRelease_id returns Package_release_license_insert_input.Release_id, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetRelease_id() *uuid.UUID { return v.Release_id }

// GetScan_metadata returns Package_release_license_insert_input.Scan_metadata, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetScan_metadata() *json.RawMessage {
	return v.Scan_metadata
}

// GetScan_time returns Package_release_license_insert_input.Scan_time, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetScan_time() *time.Time { return v.Scan_time }

// GetSource returns Package_release_license_insert_input.Source, and is useful for accessing the field via an interface.
func (v *Package_release_license_insert_input) GetSource() *types.LicenseSource { return v.Source }

type Package_release_license_on_conflict struct {
	Constraint     Package_release_license_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_release_license_update_column `json:"update_columns,omitempty"`
	Where          *Package_release_license_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_release_license_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_release_license_on_conflict) GetConstraint() Package_release_license_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Package_release_license_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_release_license_on_conflict) GetUpdate_columns() []Package_release_license_update_column {
	return v.Update_columns
}

// GetWhere returns Package_release_license_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_release_license_on_conflict) GetWhere() *Package_release_license_bool_exp {
	return v.Where
}

type Package_release_license_update_column string

const (
	Package_release_license_update_columnId           Package_release_license_update_column = "id"
	Package_release_license_update_columnLicenseId    Package_release_license_update_column = "license_id"
	Package_release_license_update_columnReleaseId    Package_release_license_update_column = "release_id"
	Package_release_license_update_columnScanMetadata Package_release_license_update_column = "scan_metadata"
	Package_release_license_update_columnScanTime     Package_release_license_update_column = "scan_time"
	Package_release_license_update_columnSource       Package_release_license_update_column = "source"
)

type Package_release_obj_rel_insert_input struct {
	Data        *Package_release_insert_input `json:"data,omitempty"`
	On_conflict *Package_release_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Package_release_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Package_release_obj_rel_insert_input) GetData() *Package_release_insert_input { return v.Data }

// GetOn_conflict returns Package_release_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Package_release_obj_rel_insert_input) GetOn_conflict() *Package_release_on_conflict {
	return v.On_conflict
}

type Package_release_on_conflict struct {
	Constraint     Package_release_constraint      `json:"constraint,omitempty"`
	Update_columns []Package_release_update_column `json:"update_columns,omitempty"`
	Where          *Package_release_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Package_release_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Package_release_on_conflict) GetConstraint() Package_release_constraint { return v.Constraint }

// GetUpdate_columns returns Package_release_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Package_release_on_conflict) GetUpdate_columns() []Package_release_update_column {
	return v.Update_columns
}

// GetWhere returns Package_release_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Package_release_on_conflict) GetWhere() *Package_release_bool_exp { return v.Where }

type Package_release_update_column string

const (
	Package_release_update_columnBlobHash               Package_release_update_column = "blob_hash"
	Package_release_update_columnFetchedTime            Package_release_update_column = "fetched_time"
	Package_release_update_columnId                     Package_release_update_column = "id"
	Package_release_update_columnMirroredBlobUrl        Package_release_update_column = "mirrored_blob_url"
	Package_release_update_columnObservedTime           Package_release_update_column = "observed_time"
	Package_release_update_columnPackageId              Package_release_update_column = "package_id"
	Package_release_update_columnPublishingMaintainerId Package_release_update_column = "publishing_maintainer_id"
	Package_release_update_columnReleaseTime            Package_release_update_column = "release_time"
	Package_release_update_columnUpstreamBlobUrl        Package_release_update_column = "upstream_blob_url"
	Package_release_update_columnUpstreamData           Package_release_update_column = "upstream_data"
	Package_release_update_columnVersion                Package_release_update_column = "version"
)

type Package_update_column string

const (
	Package_update_columnCustomRegistry      Package_update_column = "custom_registry"
	Package_update_columnDescription         Package_update_column = "description"
	Package_update_columnId                  Package_update_column = "id"
	Package_update_columnLastFailedFetch     Package_update_column = "last_failed_fetch"
	Package_update_columnLastSuccessfulFetch Package_update_column = "last_successful_fetch"
	Package_update_columnName                Package_update_column = "name"
	Package_update_columnPackageManager      Package_update_column = "package_manager"
	Package_update_columnUpstreamData        Package_update_column = "upstream_data"
)

type Project_access_tokens_bool_exp struct {
	And             []*Project_access_tokens_bool_exp `json:"_and,omitempty"`
	Not             *Project_access_tokens_bool_exp   `json:"_not,omitempty"`
	Or              []*Project_access_tokens_bool_exp `json:"_or,omitempty"`
	Access_token    *Uuid_comparison_exp              `json:"access_token,omitempty"`
	Created_by_user *Identities_bool_exp              `json:"created_by_user,omitempty"`
	Id              *Uuid_comparison_exp              `json:"id,omitempty"`
	Project         *Projects_bool_exp                `json:"project,omitempty"`
	Project_uuid    *Uuid_comparison_exp              `json:"project_uuid,omitempty"`
}

// GetAnd returns Project_access_tokens_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetAnd() []*Project_access_tokens_bool_exp { return v.And }

// GetNot returns Project_access_tokens_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetNot() *Project_access_tokens_bool_exp { return v.Not }

// GetOr returns Project_access_tokens_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetOr() []*Project_access_tokens_bool_exp { return v.Or }

// GetAccess_token returns Project_access_tokens_bool_exp.Access_token, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetAccess_token() *Uuid_comparison_exp {
	return v.Access_token
}

// GetCreated_by_user returns Project_access_tokens_bool_exp.Created_by_user, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetCreated_by_user() *Identities_bool_exp {
	return v.Created_by_user
}

// GetId returns Project_access_tokens_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetProject returns Project_access_tokens_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

// GetProject_uuid returns Project_access_tokens_bool_exp.Project_uuid, and is useful for accessing the field via an interface.
func (v *Project_access_tokens_bool_exp) GetProject_uuid() *Uuid_comparison_exp {
	return v.Project_uuid
}

type Projects_arr_rel_insert_input struct {
	Data        []*Projects_insert_input `json:"data,omitempty"`
	On_conflict *Projects_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Projects_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Projects_arr_rel_insert_input) GetData() []*Projects_insert_input { return v.Data }

// GetOn_conflict returns Projects_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Projects_arr_rel_insert_input) GetOn_conflict() *Projects_on_conflict { return v.On_conflict }

type Projects_bool_exp struct {
	And                     []*Projects_bool_exp              `json:"_and,omitempty"`
	Not                     *Projects_bool_exp                `json:"_not,omitempty"`
	Or                      []*Projects_bool_exp              `json:"_or,omitempty"`
	Builds                  *Builds_bool_exp                  `json:"builds,omitempty"`
	Created_at              *Timestamptz_comparison_exp       `json:"created_at,omitempty"`
	Default_branch_builds   *Default_branch_builds_bool_exp   `json:"default_branch_builds,omitempty"`
	Github_repositories     *Github_repositories_bool_exp     `json:"github_repositories,omitempty"`
	Github_repository       *Github_repositories_bool_exp     `json:"github_repository,omitempty"`
	Id                      *Uuid_comparison_exp              `json:"id,omitempty"`
	Ignored_vulnerabilities *Ignored_vulnerabilities_bool_exp `json:"ignored_vulnerabilities,omitempty"`
	Manifests               *Manifests_bool_exp               `json:"manifests,omitempty"`
	Name                    *String_comparison_exp            `json:"name,omitempty"`
	Organization            *Organizations_bool_exp           `json:"organization,omitempty"`
	Organization_id         *Uuid_comparison_exp              `json:"organization_id,omitempty"`
	Project_access_tokens   *Project_access_tokens_bool_exp   `json:"project_access_tokens,omitempty"`
	Repo                    *String_comparison_exp            `json:"repo,omitempty"`
	Reports                 *Project_access_tokens_bool_exp   `json:"reports,omitempty"`
	Settings                *Settings_bool_exp                `json:"settings,omitempty"`
	Settings_id             *Uuid_comparison_exp              `json:"settings_id,omitempty"`
}

// GetAnd returns Projects_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetAnd() []*Projects_bool_exp { return v.And }

// GetNot returns Projects_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetNot() *Projects_bool_exp { return v.Not }

// GetOr returns Projects_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetOr() []*Projects_bool_exp { return v.Or }

// GetBuilds returns Projects_bool_exp.Builds, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetBuilds() *Builds_bool_exp { return v.Builds }

// GetCreated_at returns Projects_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetDefault_branch_builds returns Projects_bool_exp.Default_branch_builds, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetDefault_branch_builds() *Default_branch_builds_bool_exp {
	return v.Default_branch_builds
}

// GetGithub_repositories returns Projects_bool_exp.Github_repositories, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetGithub_repositories() *Github_repositories_bool_exp {
	return v.Github_repositories
}

// GetGithub_repository returns Projects_bool_exp.Github_repository, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetGithub_repository() *Github_repositories_bool_exp {
	return v.Github_repository
}

// GetId returns Projects_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIgnored_vulnerabilities returns Projects_bool_exp.Ignored_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetIgnored_vulnerabilities() *Ignored_vulnerabilities_bool_exp {
	return v.Ignored_vulnerabilities
}

// GetManifests returns Projects_bool_exp.Manifests, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetManifests() *Manifests_bool_exp { return v.Manifests }

// GetName returns Projects_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetOrganization returns Projects_bool_exp.Organization, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetOrganization() *Organizations_bool_exp { return v.Organization }

// GetOrganization_id returns Projects_bool_exp.Organization_id, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetOrganization_id() *Uuid_comparison_exp { return v.Organization_id }

// GetProject_access_tokens returns Projects_bool_exp.Project_access_tokens, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetProject_access_tokens() *Project_access_tokens_bool_exp {
	return v.Project_access_tokens
}

// GetRepo returns Projects_bool_exp.Repo, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetRepo() *String_comparison_exp { return v.Repo }

// GetReports returns Projects_bool_exp.Reports, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetReports() *Project_access_tokens_bool_exp { return v.Reports }

// GetSettings returns Projects_bool_exp.Settings, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetSettings() *Settings_bool_exp { return v.Settings }

// GetSettings_id returns Projects_bool_exp.Settings_id, and is useful for accessing the field via an interface.
func (v *Projects_bool_exp) GetSettings_id() *Uuid_comparison_exp { return v.Settings_id }

type Projects_constraint string

const (
	Projects_constraintProjectsNameOrganizationIdKey Projects_constraint = "projects_name_organization_id_key"
	Projects_constraintProjectsPkey                  Projects_constraint = "projects_pkey"
)

type Projects_insert_input struct {
	Builds                *Builds_arr_rel_insert_input                `json:"builds,omitempty"`
	Created_at            *time.Time                                  `json:"created_at,omitempty"`
	Default_branch_builds *Default_branch_builds_arr_rel_insert_input `json:"default_branch_builds,omitempty"`
	Github_repositories   *Github_repositories_arr_rel_insert_input   `json:"github_repositories,omitempty"`
	Github_repository     *Github_repositories_obj_rel_insert_input   `json:"github_repository,omitempty"`
	Id                    *uuid.UUID                                  `json:"id,omitempty"`
	Manifests             *Manifests_arr_rel_insert_input             `json:"manifests,omitempty"`
	Name                  *string                                     `json:"name,omitempty"`
	Organization          *Organizations_obj_rel_insert_input         `json:"organization,omitempty"`
	Organization_id       *uuid.UUID                                  `json:"organization_id,omitempty"`
	Repo                  *string                                     `json:"repo,omitempty"`
	Settings_id           *uuid.UUID                                  `json:"settings_id,omitempty"`
}

// GetBuilds returns Projects_insert_input.Builds, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetBuilds() *Builds_arr_rel_insert_input { return v.Builds }

// GetCreated_at returns Projects_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetDefault_branch_builds returns Projects_insert_input.Default_branch_builds, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetDefault_branch_builds() *Default_branch_builds_arr_rel_insert_input {
	return v.Default_branch_builds
}

// GetGithub_repositories returns Projects_insert_input.Github_repositories, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetGithub_repositories() *Github_repositories_arr_rel_insert_input {
	return v.Github_repositories
}

// GetGithub_repository returns Projects_insert_input.Github_repository, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetGithub_repository() *Github_repositories_obj_rel_insert_input {
	return v.Github_repository
}

// GetId returns Projects_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetId() *uuid.UUID { return v.Id }

// GetManifests returns Projects_insert_input.Manifests, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetManifests() *Manifests_arr_rel_insert_input { return v.Manifests }

// GetName returns Projects_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetName() *string { return v.Name }

// GetOrganization returns Projects_insert_input.Organization, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetOrganization() *Organizations_obj_rel_insert_input {
	return v.Organization
}

// GetOrganization_id returns Projects_insert_input.Organization_id, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetOrganization_id() *uuid.UUID { return v.Organization_id }

// GetRepo returns Projects_insert_input.Repo, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetRepo() *string { return v.Repo }

// GetSettings_id returns Projects_insert_input.Settings_id, and is useful for accessing the field via an interface.
func (v *Projects_insert_input) GetSettings_id() *uuid.UUID { return v.Settings_id }

type Projects_obj_rel_insert_input struct {
	Data        *Projects_insert_input `json:"data,omitempty"`
	On_conflict *Projects_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Projects_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Projects_obj_rel_insert_input) GetData() *Projects_insert_input { return v.Data }

// GetOn_conflict returns Projects_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Projects_obj_rel_insert_input) GetOn_conflict() *Projects_on_conflict { return v.On_conflict }

type Projects_on_conflict struct {
	Constraint     Projects_constraint      `json:"constraint,omitempty"`
	Update_columns []Projects_update_column `json:"update_columns,omitempty"`
	Where          *Projects_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Projects_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Projects_on_conflict) GetConstraint() Projects_constraint { return v.Constraint }

// GetUpdate_columns returns Projects_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Projects_on_conflict) GetUpdate_columns() []Projects_update_column { return v.Update_columns }

// GetWhere returns Projects_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Projects_on_conflict) GetWhere() *Projects_bool_exp { return v.Where }

type Projects_update_column string

const (
	Projects_update_columnCreatedAt      Projects_update_column = "created_at"
	Projects_update_columnId             Projects_update_column = "id"
	Projects_update_columnName           Projects_update_column = "name"
	Projects_update_columnOrganizationId Projects_update_column = "organization_id"
	Projects_update_columnRepo           Projects_update_column = "repo"
	Projects_update_columnSettingsId     Projects_update_column = "settings_id"
)

type Reference_type_comparison_exp struct {
	Eq      *types.ReferenceType  `json:"_eq,omitempty"`
	Gt      *types.ReferenceType  `json:"_gt,omitempty"`
	Gte     *types.ReferenceType  `json:"_gte,omitempty"`
	In      []types.ReferenceType `json:"_in,omitempty"`
	Is_null *bool                 `json:"_is_null,omitempty"`
	Lt      *types.ReferenceType  `json:"_lt,omitempty"`
	Lte     *types.ReferenceType  `json:"_lte,omitempty"`
	Neq     *types.ReferenceType  `json:"_neq,omitempty"`
	Nin     []types.ReferenceType `json:"_nin,omitempty"`
}

// GetEq returns Reference_type_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetEq() *types.ReferenceType { return v.Eq }

// GetGt returns Reference_type_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetGt() *types.ReferenceType { return v.Gt }

// GetGte returns Reference_type_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetGte() *types.ReferenceType { return v.Gte }

// GetIn returns Reference_type_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetIn() []types.ReferenceType { return v.In }

// GetIs_null returns Reference_type_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Reference_type_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetLt() *types.ReferenceType { return v.Lt }

// GetLte returns Reference_type_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetLte() *types.ReferenceType { return v.Lte }

// GetNeq returns Reference_type_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetNeq() *types.ReferenceType { return v.Neq }

// GetNin returns Reference_type_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Reference_type_comparison_exp) GetNin() []types.ReferenceType { return v.Nin }

type Resolved_manifest_arr_rel_insert_input struct {
	Data        []*Resolved_manifest_insert_input `json:"data,omitempty"`
	On_conflict *Resolved_manifest_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Resolved_manifest_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_arr_rel_insert_input) GetData() []*Resolved_manifest_insert_input {
	return v.Data
}

// GetOn_conflict returns Resolved_manifest_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_arr_rel_insert_input) GetOn_conflict() *Resolved_manifest_on_conflict {
	return v.On_conflict
}

type Resolved_manifest_bool_exp struct {
	And                      []*Resolved_manifest_bool_exp      `json:"_and,omitempty"`
	Not                      *Resolved_manifest_bool_exp        `json:"_not,omitempty"`
	Or                       []*Resolved_manifest_bool_exp      `json:"_or,omitempty"`
	Build                    *Builds_bool_exp                   `json:"build,omitempty"`
	Build_id                 *Uuid_comparison_exp               `json:"build_id,omitempty"`
	Child_edges_recursive    *Manifest_dependency_edge_bool_exp `json:"child_edges_recursive,omitempty"`
	Id                       *Uuid_comparison_exp               `json:"id,omitempty"`
	Manifest_dependencies    *Manifest_dependency_bool_exp      `json:"manifest_dependencies,omitempty"`
	Manifest_dependency_node *Manifest_dependency_node_bool_exp `json:"manifest_dependency_node,omitempty"`
	Path                     *String_comparison_exp             `json:"path,omitempty"`
}

// GetAnd returns Resolved_manifest_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetAnd() []*Resolved_manifest_bool_exp { return v.And }

// GetNot returns Resolved_manifest_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetNot() *Resolved_manifest_bool_exp { return v.Not }

// GetOr returns Resolved_manifest_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetOr() []*Resolved_manifest_bool_exp { return v.Or }

// GetBuild returns Resolved_manifest_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Resolved_manifest_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetBuild_id() *Uuid_comparison_exp { return v.Build_id }

// GetChild_edges_recursive returns Resolved_manifest_bool_exp.Child_edges_recursive, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetChild_edges_recursive() *Manifest_dependency_edge_bool_exp {
	return v.Child_edges_recursive
}

// GetId returns Resolved_manifest_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetManifest_dependencies returns Resolved_manifest_bool_exp.Manifest_dependencies, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetManifest_dependencies() *Manifest_dependency_bool_exp {
	return v.Manifest_dependencies
}

// GetManifest_dependency_node returns Resolved_manifest_bool_exp.Manifest_dependency_node, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetManifest_dependency_node() *Manifest_dependency_node_bool_exp {
	return v.Manifest_dependency_node
}

// GetPath returns Resolved_manifest_bool_exp.Path, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_bool_exp) GetPath() *String_comparison_exp { return v.Path }

type Resolved_manifest_constraint string

const (
	Resolved_manifest_constraintManifestBuildIdPathIdx Resolved_manifest_constraint = "manifest_build_id_path_idx"
	Resolved_manifest_constraintManifestPkey           Resolved_manifest_constraint = "manifest_pkey"
)

type Resolved_manifest_insert_input struct {
	Build                    *Builds_obj_rel_insert_input                   `json:"build,omitempty"`
	Build_id                 *uuid.UUID                                     `json:"build_id,omitempty"`
	Id                       *uuid.UUID                                     `json:"id,omitempty"`
	Manifest_dependencies    *Manifest_dependency_arr_rel_insert_input      `json:"manifest_dependencies,omitempty"`
	Manifest_dependency_node *Manifest_dependency_node_obj_rel_insert_input `json:"manifest_dependency_node,omitempty"`
	Path                     *string                                        `json:"path,omitempty"`
}

// GetBuild returns Resolved_manifest_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetBuild() *Builds_obj_rel_insert_input { return v.Build }

// GetBuild_id returns Resolved_manifest_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetId returns Resolved_manifest_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetId() *uuid.UUID { return v.Id }

// GetManifest_dependencies returns Resolved_manifest_insert_input.Manifest_dependencies, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetManifest_dependencies() *Manifest_dependency_arr_rel_insert_input {
	return v.Manifest_dependencies
}

// GetManifest_dependency_node returns Resolved_manifest_insert_input.Manifest_dependency_node, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetManifest_dependency_node() *Manifest_dependency_node_obj_rel_insert_input {
	return v.Manifest_dependency_node
}

// GetPath returns Resolved_manifest_insert_input.Path, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_insert_input) GetPath() *string { return v.Path }

type Resolved_manifest_obj_rel_insert_input struct {
	Data        *Resolved_manifest_insert_input `json:"data,omitempty"`
	On_conflict *Resolved_manifest_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Resolved_manifest_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_obj_rel_insert_input) GetData() *Resolved_manifest_insert_input {
	return v.Data
}

// GetOn_conflict returns Resolved_manifest_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_obj_rel_insert_input) GetOn_conflict() *Resolved_manifest_on_conflict {
	return v.On_conflict
}

type Resolved_manifest_on_conflict struct {
	Constraint     Resolved_manifest_constraint      `json:"constraint,omitempty"`
	Update_columns []Resolved_manifest_update_column `json:"update_columns,omitempty"`
	Where          *Resolved_manifest_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Resolved_manifest_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_on_conflict) GetConstraint() Resolved_manifest_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Resolved_manifest_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_on_conflict) GetUpdate_columns() []Resolved_manifest_update_column {
	return v.Update_columns
}

// GetWhere returns Resolved_manifest_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Resolved_manifest_on_conflict) GetWhere() *Resolved_manifest_bool_exp { return v.Where }

type Resolved_manifest_update_column string

const (
	Resolved_manifest_update_columnBuildId Resolved_manifest_update_column = "build_id"
	Resolved_manifest_update_columnId      Resolved_manifest_update_column = "id"
	Resolved_manifest_update_columnPath    Resolved_manifest_update_column = "path"
)

type Scans_arr_rel_insert_input struct {
	Data        []*Scans_insert_input `json:"data,omitempty"`
	On_conflict *Scans_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Scans_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Scans_arr_rel_insert_input) GetData() []*Scans_insert_input { return v.Data }

// GetOn_conflict returns Scans_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Scans_arr_rel_insert_input) GetOn_conflict() *Scans_on_conflict { return v.On_conflict }

type Scans_bool_exp struct {
	And            []*Scans_bool_exp           `json:"_and,omitempty"`
	Not            *Scans_bool_exp             `json:"_not,omitempty"`
	Or             []*Scans_bool_exp           `json:"_or,omitempty"`
	Build          *Builds_bool_exp            `json:"build,omitempty"`
	Build_id       *Uuid_comparison_exp        `json:"build_id,omitempty"`
	Created_at     *Timestamptz_comparison_exp `json:"created_at,omitempty"`
	Db_date        *Date_comparison_exp        `json:"db_date,omitempty"`
	Distro_name    *String_comparison_exp      `json:"distro_name,omitempty"`
	Distro_version *String_comparison_exp      `json:"distro_version,omitempty"`
	Findings       *Findings_bool_exp          `json:"findings,omitempty"`
	Grype_version  *String_comparison_exp      `json:"grype_version,omitempty"`
	Id             *Uuid_comparison_exp        `json:"id,omitempty"`
	Scan_number    *Int_comparison_exp         `json:"scan_number,omitempty"`
	Source_type    *String_comparison_exp      `json:"source_type,omitempty"`
	Target         *String_comparison_exp      `json:"target,omitempty"`
}

// GetAnd returns Scans_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetAnd() []*Scans_bool_exp { return v.And }

// GetNot returns Scans_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetNot() *Scans_bool_exp { return v.Not }

// GetOr returns Scans_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetOr() []*Scans_bool_exp { return v.Or }

// GetBuild returns Scans_bool_exp.Build, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetBuild() *Builds_bool_exp { return v.Build }

// GetBuild_id returns Scans_bool_exp.Build_id, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetBuild_id() *Uuid_comparison_exp { return v.Build_id }

// GetCreated_at returns Scans_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetDb_date returns Scans_bool_exp.Db_date, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetDb_date() *Date_comparison_exp { return v.Db_date }

// GetDistro_name returns Scans_bool_exp.Distro_name, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetDistro_name() *String_comparison_exp { return v.Distro_name }

// GetDistro_version returns Scans_bool_exp.Distro_version, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetDistro_version() *String_comparison_exp { return v.Distro_version }

// GetFindings returns Scans_bool_exp.Findings, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetFindings() *Findings_bool_exp { return v.Findings }

// GetGrype_version returns Scans_bool_exp.Grype_version, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetGrype_version() *String_comparison_exp { return v.Grype_version }

// GetId returns Scans_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetScan_number returns Scans_bool_exp.Scan_number, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetScan_number() *Int_comparison_exp { return v.Scan_number }

// GetSource_type returns Scans_bool_exp.Source_type, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetSource_type() *String_comparison_exp { return v.Source_type }

// GetTarget returns Scans_bool_exp.Target, and is useful for accessing the field via an interface.
func (v *Scans_bool_exp) GetTarget() *String_comparison_exp { return v.Target }

type Scans_constraint string

const (
	Scans_constraintScansPkey                 Scans_constraint = "scans_pkey"
	Scans_constraintScansScanNumberBuildIdKey Scans_constraint = "scans_scan_number_build_id_key"
)

type Scans_insert_input struct {
	Build          *Builds_obj_rel_insert_input   `json:"build,omitempty"`
	Build_id       *uuid.UUID                     `json:"build_id,omitempty"`
	Created_at     *time.Time                     `json:"created_at,omitempty"`
	Db_date        *time.Time                     `json:"db_date,omitempty"`
	Distro_name    *string                        `json:"distro_name,omitempty"`
	Distro_version *string                        `json:"distro_version,omitempty"`
	Findings       *Findings_arr_rel_insert_input `json:"findings,omitempty"`
	Grype_version  *string                        `json:"grype_version,omitempty"`
	Id             *uuid.UUID                     `json:"id,omitempty"`
	Scan_number    *int                           `json:"scan_number,omitempty"`
	Source_type    *string                        `json:"source_type,omitempty"`
	Target         *string                        `json:"target,omitempty"`
}

// GetBuild returns Scans_insert_input.Build, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetBuild() *Builds_obj_rel_insert_input { return v.Build }

// GetBuild_id returns Scans_insert_input.Build_id, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetBuild_id() *uuid.UUID { return v.Build_id }

// GetCreated_at returns Scans_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetDb_date returns Scans_insert_input.Db_date, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetDb_date() *time.Time { return v.Db_date }

// GetDistro_name returns Scans_insert_input.Distro_name, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetDistro_name() *string { return v.Distro_name }

// GetDistro_version returns Scans_insert_input.Distro_version, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetDistro_version() *string { return v.Distro_version }

// GetFindings returns Scans_insert_input.Findings, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetFindings() *Findings_arr_rel_insert_input { return v.Findings }

// GetGrype_version returns Scans_insert_input.Grype_version, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetGrype_version() *string { return v.Grype_version }

// GetId returns Scans_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetId() *uuid.UUID { return v.Id }

// GetScan_number returns Scans_insert_input.Scan_number, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetScan_number() *int { return v.Scan_number }

// GetSource_type returns Scans_insert_input.Source_type, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetSource_type() *string { return v.Source_type }

// GetTarget returns Scans_insert_input.Target, and is useful for accessing the field via an interface.
func (v *Scans_insert_input) GetTarget() *string { return v.Target }

type Scans_obj_rel_insert_input struct {
	Data        *Scans_insert_input `json:"data,omitempty"`
	On_conflict *Scans_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Scans_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Scans_obj_rel_insert_input) GetData() *Scans_insert_input { return v.Data }

// GetOn_conflict returns Scans_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Scans_obj_rel_insert_input) GetOn_conflict() *Scans_on_conflict { return v.On_conflict }

type Scans_on_conflict struct {
	Constraint     Scans_constraint      `json:"constraint,omitempty"`
	Update_columns []Scans_update_column `json:"update_columns,omitempty"`
	Where          *Scans_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Scans_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Scans_on_conflict) GetConstraint() Scans_constraint { return v.Constraint }

// GetUpdate_columns returns Scans_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Scans_on_conflict) GetUpdate_columns() []Scans_update_column { return v.Update_columns }

// GetWhere returns Scans_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Scans_on_conflict) GetWhere() *Scans_bool_exp { return v.Where }

type Scans_update_column string

const (
	Scans_update_columnBuildId       Scans_update_column = "build_id"
	Scans_update_columnCreatedAt     Scans_update_column = "created_at"
	Scans_update_columnDbDate        Scans_update_column = "db_date"
	Scans_update_columnDistroName    Scans_update_column = "distro_name"
	Scans_update_columnDistroVersion Scans_update_column = "distro_version"
	Scans_update_columnGrypeVersion  Scans_update_column = "grype_version"
	Scans_update_columnId            Scans_update_column = "id"
	Scans_update_columnScanNumber    Scans_update_column = "scan_number"
	Scans_update_columnSourceType    Scans_update_column = "source_type"
	Scans_update_columnTarget        Scans_update_column = "target"
)

// SetBuildS3UrlResponse is returned by SetBuildS3Url on success.
type SetBuildS3UrlResponse struct {
	Update_builds_by_pk *SetBuildS3UrlUpdate_builds_by_pkBuilds `json:"update_builds_by_pk"`
}

// GetUpdate_builds_by_pk returns SetBuildS3UrlResponse.Update_builds_by_pk, and is useful for accessing the field via an interface.
func (v *SetBuildS3UrlResponse) GetUpdate_builds_by_pk() *SetBuildS3UrlUpdate_builds_by_pkBuilds {
	return v.Update_builds_by_pk
}

// SetBuildS3UrlUpdate_builds_by_pkBuilds includes the requested fields of the GraphQL type builds.
type SetBuildS3UrlUpdate_builds_by_pkBuilds struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns SetBuildS3UrlUpdate_builds_by_pkBuilds.Id, and is useful for accessing the field via an interface.
func (v *SetBuildS3UrlUpdate_builds_by_pkBuilds) GetId() uuid.UUID { return v.Id }

type Settings_bool_exp struct {
	And                  []*Settings_bool_exp        `json:"_and,omitempty"`
	Not                  *Settings_bool_exp          `json:"_not,omitempty"`
	Or                   []*Settings_bool_exp        `json:"_or,omitempty"`
	Created_at           *Timestamptz_comparison_exp `json:"created_at,omitempty"`
	Id                   *Uuid_comparison_exp        `json:"id,omitempty"`
	Organization         *Organizations_bool_exp     `json:"organization,omitempty"`
	Pr_check_enabled     *Boolean_comparison_exp     `json:"pr_check_enabled,omitempty"`
	Pr_feedback_disabled *Boolean_comparison_exp     `json:"pr_feedback_disabled,omitempty"`
	Project              *Projects_bool_exp          `json:"project,omitempty"`
}

// GetAnd returns Settings_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetAnd() []*Settings_bool_exp { return v.And }

// GetNot returns Settings_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetNot() *Settings_bool_exp { return v.Not }

// GetOr returns Settings_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetOr() []*Settings_bool_exp { return v.Or }

// GetCreated_at returns Settings_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetId returns Settings_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetOrganization returns Settings_bool_exp.Organization, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetOrganization() *Organizations_bool_exp { return v.Organization }

// GetPr_check_enabled returns Settings_bool_exp.Pr_check_enabled, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetPr_check_enabled() *Boolean_comparison_exp { return v.Pr_check_enabled }

// GetPr_feedback_disabled returns Settings_bool_exp.Pr_feedback_disabled, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetPr_feedback_disabled() *Boolean_comparison_exp {
	return v.Pr_feedback_disabled
}

// GetProject returns Settings_bool_exp.Project, and is useful for accessing the field via an interface.
func (v *Settings_bool_exp) GetProject() *Projects_bool_exp { return v.Project }

type Severity_enum_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns Severity_enum_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns Severity_enum_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns Severity_enum_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns Severity_enum_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns Severity_enum_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Severity_enum_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns Severity_enum_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns Severity_enum_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns Severity_enum_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Severity_enum_comparison_exp) GetNin() []string { return v.Nin }

type String_comparison_exp struct {
	Eq       *string  `json:"_eq,omitempty"`
	Gt       *string  `json:"_gt,omitempty"`
	Gte      *string  `json:"_gte,omitempty"`
	Ilike    *string  `json:"_ilike,omitempty"`
	In       []string `json:"_in,omitempty"`
	Iregex   *string  `json:"_iregex,omitempty"`
	Is_null  *bool    `json:"_is_null,omitempty"`
	Like     *string  `json:"_like,omitempty"`
	Lt       *string  `json:"_lt,omitempty"`
	Lte      *string  `json:"_lte,omitempty"`
	Neq      *string  `json:"_neq,omitempty"`
	Nilike   *string  `json:"_nilike,omitempty"`
	Nin      []string `json:"_nin,omitempty"`
	Niregex  *string  `json:"_niregex,omitempty"`
	Nlike    *string  `json:"_nlike,omitempty"`
	Nregex   *string  `json:"_nregex,omitempty"`
	Nsimilar *string  `json:"_nsimilar,omitempty"`
	Regex    *string  `json:"_regex,omitempty"`
	Similar  *string  `json:"_similar,omitempty"`
}

// GetEq returns String_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns String_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns String_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetGte() *string { return v.Gte }

// GetIlike returns String_comparison_exp.Ilike, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetIlike() *string { return v.Ilike }

// GetIn returns String_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetIn() []string { return v.In }

// GetIregex returns String_comparison_exp.Iregex, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetIregex() *string { return v.Iregex }

// GetIs_null returns String_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLike returns String_comparison_exp.Like, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetLike() *string { return v.Like }

// GetLt returns String_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns String_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns String_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNeq() *string { return v.Neq }

// GetNilike returns String_comparison_exp.Nilike, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNilike() *string { return v.Nilike }

// GetNin returns String_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNin() []string { return v.Nin }

// GetNiregex returns String_comparison_exp.Niregex, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNiregex() *string { return v.Niregex }

// GetNlike returns String_comparison_exp.Nlike, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNlike() *string { return v.Nlike }

// GetNregex returns String_comparison_exp.Nregex, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNregex() *string { return v.Nregex }

// GetNsimilar returns String_comparison_exp.Nsimilar, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetNsimilar() *string { return v.Nsimilar }

// GetRegex returns String_comparison_exp.Regex, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetRegex() *string { return v.Regex }

// GetSimilar returns String_comparison_exp.Similar, and is useful for accessing the field via an interface.
func (v *String_comparison_exp) GetSimilar() *string { return v.Similar }

type Text_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns Text_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns Text_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns Text_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns Text_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns Text_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Text_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns Text_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns Text_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns Text_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Text_comparison_exp) GetNin() []string { return v.Nin }

type Timestamp_comparison_exp struct {
	Eq      *time.Time  `json:"_eq,omitempty"`
	Gt      *time.Time  `json:"_gt,omitempty"`
	Gte     *time.Time  `json:"_gte,omitempty"`
	In      []time.Time `json:"_in,omitempty"`
	Is_null *bool       `json:"_is_null,omitempty"`
	Lt      *time.Time  `json:"_lt,omitempty"`
	Lte     *time.Time  `json:"_lte,omitempty"`
	Neq     *time.Time  `json:"_neq,omitempty"`
	Nin     []time.Time `json:"_nin,omitempty"`
}

// GetEq returns Timestamp_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetEq() *time.Time { return v.Eq }

// GetGt returns Timestamp_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetGt() *time.Time { return v.Gt }

// GetGte returns Timestamp_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetGte() *time.Time { return v.Gte }

// GetIn returns Timestamp_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetIn() []time.Time { return v.In }

// GetIs_null returns Timestamp_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Timestamp_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetLt() *time.Time { return v.Lt }

// GetLte returns Timestamp_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetLte() *time.Time { return v.Lte }

// GetNeq returns Timestamp_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetNeq() *time.Time { return v.Neq }

// GetNin returns Timestamp_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Timestamp_comparison_exp) GetNin() []time.Time { return v.Nin }

type Timestamptz_comparison_exp struct {
	Eq      *time.Time  `json:"_eq,omitempty"`
	Gt      *time.Time  `json:"_gt,omitempty"`
	Gte     *time.Time  `json:"_gte,omitempty"`
	In      []time.Time `json:"_in,omitempty"`
	Is_null *bool       `json:"_is_null,omitempty"`
	Lt      *time.Time  `json:"_lt,omitempty"`
	Lte     *time.Time  `json:"_lte,omitempty"`
	Neq     *time.Time  `json:"_neq,omitempty"`
	Nin     []time.Time `json:"_nin,omitempty"`
}

// GetEq returns Timestamptz_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetEq() *time.Time { return v.Eq }

// GetGt returns Timestamptz_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetGt() *time.Time { return v.Gt }

// GetGte returns Timestamptz_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetGte() *time.Time { return v.Gte }

// GetIn returns Timestamptz_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetIn() []time.Time { return v.In }

// GetIs_null returns Timestamptz_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Timestamptz_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetLt() *time.Time { return v.Lt }

// GetLte returns Timestamptz_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetLte() *time.Time { return v.Lte }

// GetNeq returns Timestamptz_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetNeq() *time.Time { return v.Neq }

// GetNin returns Timestamptz_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Timestamptz_comparison_exp) GetNin() []time.Time { return v.Nin }

// UpsertPackageInsert_package_onePackage includes the requested fields of the GraphQL type package.
type UpsertPackageInsert_package_onePackage struct {
	Id       uuid.UUID                                                        `json:"id"`
	Releases []*UpsertPackageInsert_package_onePackageReleasesPackage_release `json:"releases"`
}

// GetId returns UpsertPackageInsert_package_onePackage.Id, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackage) GetId() uuid.UUID { return v.Id }

// GetReleases returns UpsertPackageInsert_package_onePackage.Releases, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackage) GetReleases() []*UpsertPackageInsert_package_onePackageReleasesPackage_release {
	return v.Releases
}

// UpsertPackageInsert_package_onePackageReleasesPackage_release includes the requested fields of the GraphQL type package_release.
type UpsertPackageInsert_package_onePackageReleasesPackage_release struct {
	Id                   uuid.UUID                                                                                                      `json:"id"`
	Release_dependencies []*UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency `json:"release_dependencies"`
}

// GetId returns UpsertPackageInsert_package_onePackageReleasesPackage_release.Id, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_release) GetId() uuid.UUID {
	return v.Id
}

// GetRelease_dependencies returns UpsertPackageInsert_package_onePackageReleasesPackage_release.Release_dependencies, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_release) GetRelease_dependencies() []*UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency {
	return v.Release_dependencies
}

// UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency includes the requested fields of the GraphQL type package_release_dependency.
type UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency struct {
	Id                 uuid.UUID                                                                                                                             `json:"id"`
	Dependency_package *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage `json:"dependency_package"`
}

// GetId returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency.Id, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency) GetId() uuid.UUID {
	return v.Id
}

// GetDependency_package returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency.Dependency_package, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependency) GetDependency_package() *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage {
	return v.Dependency_package
}

// UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage includes the requested fields of the GraphQL type package.
type UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage struct {
	Id                    uuid.UUID  `json:"id"`
	Name                  string     `json:"name"`
	Last_successful_fetch *time.Time `json:"last_successful_fetch"`
	Last_failed_fetch     *time.Time `json:"last_failed_fetch"`
}

// GetId returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage.Id, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage) GetId() uuid.UUID {
	return v.Id
}

// GetName returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage.Name, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage) GetName() string {
	return v.Name
}

// GetLast_successful_fetch returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage.Last_successful_fetch, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage) GetLast_successful_fetch() *time.Time {
	return v.Last_successful_fetch
}

// GetLast_failed_fetch returns UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage.Last_failed_fetch, and is useful for accessing the field via an interface.
func (v *UpsertPackageInsert_package_onePackageReleasesPackage_releaseRelease_dependenciesPackage_release_dependencyDependency_packagePackage) GetLast_failed_fetch() *time.Time {
	return v.Last_failed_fetch
}

// UpsertPackageResponse is returned by UpsertPackage on success.
type UpsertPackageResponse struct {
	Insert_package_one *UpsertPackageInsert_package_onePackage `json:"insert_package_one"`
}

// GetInsert_package_one returns UpsertPackageResponse.Insert_package_one, and is useful for accessing the field via an interface.
func (v *UpsertPackageResponse) GetInsert_package_one() *UpsertPackageInsert_package_onePackage {
	return v.Insert_package_one
}

// UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response includes the requested fields of the GraphQL type vulnerability_mutation_response.
type UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response struct {
	Returning []*UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability `json:"returning"`
}

// GetReturning returns UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response.Returning, and is useful for accessing the field via an interface.
func (v *UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response) GetReturning() []*UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability {
	return v.Returning
}

// UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability includes the requested fields of the GraphQL type vulnerability.
type UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability struct {
	Id uuid.UUID `json:"id"`
}

// GetId returns UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability.Id, and is useful for accessing the field via an interface.
func (v *UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_responseReturningVulnerability) GetId() uuid.UUID {
	return v.Id
}

// UpsertVulnerabilitiesResponse is returned by UpsertVulnerabilities on success.
type UpsertVulnerabilitiesResponse struct {
	Insert_vulnerability *UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response `json:"insert_vulnerability"`
}

// GetInsert_vulnerability returns UpsertVulnerabilitiesResponse.Insert_vulnerability, and is useful for accessing the field via an interface.
func (v *UpsertVulnerabilitiesResponse) GetInsert_vulnerability() *UpsertVulnerabilitiesInsert_vulnerabilityVulnerability_mutation_response {
	return v.Insert_vulnerability
}

type User_role_comparison_exp struct {
	Eq      *string  `json:"_eq,omitempty"`
	Gt      *string  `json:"_gt,omitempty"`
	Gte     *string  `json:"_gte,omitempty"`
	In      []string `json:"_in,omitempty"`
	Is_null *bool    `json:"_is_null,omitempty"`
	Lt      *string  `json:"_lt,omitempty"`
	Lte     *string  `json:"_lte,omitempty"`
	Neq     *string  `json:"_neq,omitempty"`
	Nin     []string `json:"_nin,omitempty"`
}

// GetEq returns User_role_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetEq() *string { return v.Eq }

// GetGt returns User_role_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetGt() *string { return v.Gt }

// GetGte returns User_role_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetGte() *string { return v.Gte }

// GetIn returns User_role_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetIn() []string { return v.In }

// GetIs_null returns User_role_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns User_role_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetLt() *string { return v.Lt }

// GetLte returns User_role_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetLte() *string { return v.Lte }

// GetNeq returns User_role_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetNeq() *string { return v.Neq }

// GetNin returns User_role_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *User_role_comparison_exp) GetNin() []string { return v.Nin }

type Users_bool_exp struct {
	And             []*Users_bool_exp         `json:"_and,omitempty"`
	Not             *Users_bool_exp           `json:"_not,omitempty"`
	Or              []*Users_bool_exp         `json:"_or,omitempty"`
	Github_id       *String_comparison_exp    `json:"github_id,omitempty"`
	Github_node_id  *String_comparison_exp    `json:"github_node_id,omitempty"`
	Id              *Uuid_comparison_exp      `json:"id,omitempty"`
	Kratos_id       *Uuid_comparison_exp      `json:"kratos_id,omitempty"`
	Kratos_identity *Identities_bool_exp      `json:"kratos_identity,omitempty"`
	Role            *User_role_comparison_exp `json:"role,omitempty"`
}

// GetAnd returns Users_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetAnd() []*Users_bool_exp { return v.And }

// GetNot returns Users_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetNot() *Users_bool_exp { return v.Not }

// GetOr returns Users_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetOr() []*Users_bool_exp { return v.Or }

// GetGithub_id returns Users_bool_exp.Github_id, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetGithub_id() *String_comparison_exp { return v.Github_id }

// GetGithub_node_id returns Users_bool_exp.Github_node_id, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetGithub_node_id() *String_comparison_exp { return v.Github_node_id }

// GetId returns Users_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetKratos_id returns Users_bool_exp.Kratos_id, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetKratos_id() *Uuid_comparison_exp { return v.Kratos_id }

// GetKratos_identity returns Users_bool_exp.Kratos_identity, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetKratos_identity() *Identities_bool_exp { return v.Kratos_identity }

// GetRole returns Users_bool_exp.Role, and is useful for accessing the field via an interface.
func (v *Users_bool_exp) GetRole() *User_role_comparison_exp { return v.Role }

type Users_constraint string

const (
	Users_constraintUsersGithubIdKey     Users_constraint = "users_github_id_key"
	Users_constraintUsersGithubNodeIdKey Users_constraint = "users_github_node_id_key"
	Users_constraintUsersKratosIdUnique  Users_constraint = "users_kratos_id_unique"
	Users_constraintUsersPkey            Users_constraint = "users_pkey"
)

type Users_insert_input struct {
	Github_id      *string    `json:"github_id,omitempty"`
	Github_node_id *string    `json:"github_node_id,omitempty"`
	Id             *uuid.UUID `json:"id,omitempty"`
	Kratos_id      *uuid.UUID `json:"kratos_id,omitempty"`
}

// GetGithub_id returns Users_insert_input.Github_id, and is useful for accessing the field via an interface.
func (v *Users_insert_input) GetGithub_id() *string { return v.Github_id }

// GetGithub_node_id returns Users_insert_input.Github_node_id, and is useful for accessing the field via an interface.
func (v *Users_insert_input) GetGithub_node_id() *string { return v.Github_node_id }

// GetId returns Users_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Users_insert_input) GetId() *uuid.UUID { return v.Id }

// GetKratos_id returns Users_insert_input.Kratos_id, and is useful for accessing the field via an interface.
func (v *Users_insert_input) GetKratos_id() *uuid.UUID { return v.Kratos_id }

type Users_obj_rel_insert_input struct {
	Data        *Users_insert_input `json:"data,omitempty"`
	On_conflict *Users_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Users_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Users_obj_rel_insert_input) GetData() *Users_insert_input { return v.Data }

// GetOn_conflict returns Users_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Users_obj_rel_insert_input) GetOn_conflict() *Users_on_conflict { return v.On_conflict }

type Users_on_conflict struct {
	Constraint     Users_constraint      `json:"constraint,omitempty"`
	Update_columns []Users_update_column `json:"update_columns,omitempty"`
	Where          *Users_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Users_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Users_on_conflict) GetConstraint() Users_constraint { return v.Constraint }

// GetUpdate_columns returns Users_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Users_on_conflict) GetUpdate_columns() []Users_update_column { return v.Update_columns }

// GetWhere returns Users_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Users_on_conflict) GetWhere() *Users_bool_exp { return v.Where }

type Users_update_column string

const (
	Users_update_columnGithubId     Users_update_column = "github_id"
	Users_update_columnGithubNodeId Users_update_column = "github_node_id"
	Users_update_columnId           Users_update_column = "id"
	Users_update_columnKratosId     Users_update_column = "kratos_id"
)

type Uuid_comparison_exp struct {
	Eq      *uuid.UUID  `json:"_eq,omitempty"`
	Gt      *uuid.UUID  `json:"_gt,omitempty"`
	Gte     *uuid.UUID  `json:"_gte,omitempty"`
	In      []uuid.UUID `json:"_in,omitempty"`
	Is_null *bool       `json:"_is_null,omitempty"`
	Lt      *uuid.UUID  `json:"_lt,omitempty"`
	Lte     *uuid.UUID  `json:"_lte,omitempty"`
	Neq     *uuid.UUID  `json:"_neq,omitempty"`
	Nin     []uuid.UUID `json:"_nin,omitempty"`
}

// GetEq returns Uuid_comparison_exp.Eq, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetEq() *uuid.UUID { return v.Eq }

// GetGt returns Uuid_comparison_exp.Gt, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetGt() *uuid.UUID { return v.Gt }

// GetGte returns Uuid_comparison_exp.Gte, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetGte() *uuid.UUID { return v.Gte }

// GetIn returns Uuid_comparison_exp.In, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetIn() []uuid.UUID { return v.In }

// GetIs_null returns Uuid_comparison_exp.Is_null, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetIs_null() *bool { return v.Is_null }

// GetLt returns Uuid_comparison_exp.Lt, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetLt() *uuid.UUID { return v.Lt }

// GetLte returns Uuid_comparison_exp.Lte, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetLte() *uuid.UUID { return v.Lte }

// GetNeq returns Uuid_comparison_exp.Neq, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetNeq() *uuid.UUID { return v.Neq }

// GetNin returns Uuid_comparison_exp.Nin, and is useful for accessing the field via an interface.
func (v *Uuid_comparison_exp) GetNin() []uuid.UUID { return v.Nin }

type Vulnerability_affected_arr_rel_insert_input struct {
	Data        []*Vulnerability_affected_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_affected_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_affected_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_arr_rel_insert_input) GetData() []*Vulnerability_affected_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_affected_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_arr_rel_insert_input) GetOn_conflict() *Vulnerability_affected_on_conflict {
	return v.On_conflict
}

type Vulnerability_affected_bool_exp struct {
	And                   []*Vulnerability_affected_bool_exp           `json:"_and,omitempty"`
	Not                   *Vulnerability_affected_bool_exp             `json:"_not,omitempty"`
	Or                    []*Vulnerability_affected_bool_exp           `json:"_or,omitempty"`
	Affected_range_events *Vulnerability_affected_range_event_bool_exp `json:"affected_range_events,omitempty"`
	Affected_versions     *Vulnerability_affected_version_bool_exp     `json:"affected_versions,omitempty"`
	Database_specific     *Jsonb_comparison_exp                        `json:"database_specific,omitempty"`
	Ecosystem_specific    *Jsonb_comparison_exp                        `json:"ecosystem_specific,omitempty"`
	Id                    *Uuid_comparison_exp                         `json:"id,omitempty"`
	Package               *Package_bool_exp                            `json:"package,omitempty"`
	Package_id            *Uuid_comparison_exp                         `json:"package_id,omitempty"`
	Ranges                *Vulnerability_range_bool_exp                `json:"ranges,omitempty"`
	Vulnerability         *Vulnerability_bool_exp                      `json:"vulnerability,omitempty"`
	Vulnerability_id      *Uuid_comparison_exp                         `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Vulnerability_affected_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetAnd() []*Vulnerability_affected_bool_exp { return v.And }

// GetNot returns Vulnerability_affected_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetNot() *Vulnerability_affected_bool_exp { return v.Not }

// GetOr returns Vulnerability_affected_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetOr() []*Vulnerability_affected_bool_exp { return v.Or }

// GetAffected_range_events returns Vulnerability_affected_bool_exp.Affected_range_events, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetAffected_range_events() *Vulnerability_affected_range_event_bool_exp {
	return v.Affected_range_events
}

// GetAffected_versions returns Vulnerability_affected_bool_exp.Affected_versions, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetAffected_versions() *Vulnerability_affected_version_bool_exp {
	return v.Affected_versions
}

// GetDatabase_specific returns Vulnerability_affected_bool_exp.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetDatabase_specific() *Jsonb_comparison_exp {
	return v.Database_specific
}

// GetEcosystem_specific returns Vulnerability_affected_bool_exp.Ecosystem_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetEcosystem_specific() *Jsonb_comparison_exp {
	return v.Ecosystem_specific
}

// GetId returns Vulnerability_affected_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetPackage returns Vulnerability_affected_bool_exp.Package, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetPackage() *Package_bool_exp { return v.Package }

// GetPackage_id returns Vulnerability_affected_bool_exp.Package_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetPackage_id() *Uuid_comparison_exp { return v.Package_id }

// GetRanges returns Vulnerability_affected_bool_exp.Ranges, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetRanges() *Vulnerability_range_bool_exp { return v.Ranges }

// GetVulnerability returns Vulnerability_affected_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_affected_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Vulnerability_affected_constraint string

const (
	Vulnerability_affected_constraintAffectedPkey                        Vulnerability_affected_constraint = "affected_pkey"
	Vulnerability_affected_constraintAffectedVulnerabilityIdPackageIdIdx Vulnerability_affected_constraint = "affected_vulnerability_id_package_id_idx"
)

type Vulnerability_affected_insert_input struct {
	Affected_range_events *Vulnerability_affected_range_event_arr_rel_insert_input `json:"affected_range_events,omitempty"`
	Affected_versions     *Vulnerability_affected_version_arr_rel_insert_input     `json:"affected_versions,omitempty"`
	Database_specific     *json.RawMessage                                         `json:"database_specific,omitempty"`
	Ecosystem_specific    *json.RawMessage                                         `json:"ecosystem_specific,omitempty"`
	Id                    *uuid.UUID                                               `json:"id,omitempty"`
	Package               *Package_obj_rel_insert_input                            `json:"package,omitempty"`
	Package_id            *uuid.UUID                                               `json:"package_id,omitempty"`
	Ranges                *Vulnerability_range_arr_rel_insert_input                `json:"ranges,omitempty"`
	Vulnerability         *Vulnerability_obj_rel_insert_input                      `json:"vulnerability,omitempty"`
	Vulnerability_id      *uuid.UUID                                               `json:"vulnerability_id,omitempty"`
}

// GetAffected_range_events returns Vulnerability_affected_insert_input.Affected_range_events, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetAffected_range_events() *Vulnerability_affected_range_event_arr_rel_insert_input {
	return v.Affected_range_events
}

// GetAffected_versions returns Vulnerability_affected_insert_input.Affected_versions, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetAffected_versions() *Vulnerability_affected_version_arr_rel_insert_input {
	return v.Affected_versions
}

// GetDatabase_specific returns Vulnerability_affected_insert_input.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetDatabase_specific() *json.RawMessage {
	return v.Database_specific
}

// GetEcosystem_specific returns Vulnerability_affected_insert_input.Ecosystem_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetEcosystem_specific() *json.RawMessage {
	return v.Ecosystem_specific
}

// GetId returns Vulnerability_affected_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetId() *uuid.UUID { return v.Id }

// GetPackage returns Vulnerability_affected_insert_input.Package, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetPackage() *Package_obj_rel_insert_input {
	return v.Package
}

// GetPackage_id returns Vulnerability_affected_insert_input.Package_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetPackage_id() *uuid.UUID { return v.Package_id }

// GetRanges returns Vulnerability_affected_insert_input.Ranges, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetRanges() *Vulnerability_range_arr_rel_insert_input {
	return v.Ranges
}

// GetVulnerability returns Vulnerability_affected_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_affected_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Vulnerability_affected_obj_rel_insert_input struct {
	Data        *Vulnerability_affected_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_affected_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_affected_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_obj_rel_insert_input) GetData() *Vulnerability_affected_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_affected_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_obj_rel_insert_input) GetOn_conflict() *Vulnerability_affected_on_conflict {
	return v.On_conflict
}

type Vulnerability_affected_on_conflict struct {
	Constraint     Vulnerability_affected_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_affected_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_affected_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_affected_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_on_conflict) GetConstraint() Vulnerability_affected_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_affected_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_on_conflict) GetUpdate_columns() []Vulnerability_affected_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_affected_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_on_conflict) GetWhere() *Vulnerability_affected_bool_exp {
	return v.Where
}

type Vulnerability_affected_range_event_arr_rel_insert_input struct {
	Data        []*Vulnerability_affected_range_event_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_affected_range_event_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_affected_range_event_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_arr_rel_insert_input) GetData() []*Vulnerability_affected_range_event_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_affected_range_event_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_arr_rel_insert_input) GetOn_conflict() *Vulnerability_affected_range_event_on_conflict {
	return v.On_conflict
}

type Vulnerability_affected_range_event_bool_exp struct {
	And               []*Vulnerability_affected_range_event_bool_exp `json:"_and,omitempty"`
	Not               *Vulnerability_affected_range_event_bool_exp   `json:"_not,omitempty"`
	Or                []*Vulnerability_affected_range_event_bool_exp `json:"_or,omitempty"`
	Affected          *Vulnerability_affected_bool_exp               `json:"affected,omitempty"`
	Affected_id       *Uuid_comparison_exp                           `json:"affected_id,omitempty"`
	Database_specific *Jsonb_comparison_exp                          `json:"database_specific,omitempty"`
	Event             *String_comparison_exp                         `json:"event,omitempty"`
	Id                *Uuid_comparison_exp                           `json:"id,omitempty"`
	Type              *Affected_range_type_comparison_exp            `json:"type,omitempty"`
	Version           *String_comparison_exp                         `json:"version,omitempty"`
}

// GetAnd returns Vulnerability_affected_range_event_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetAnd() []*Vulnerability_affected_range_event_bool_exp {
	return v.And
}

// GetNot returns Vulnerability_affected_range_event_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetNot() *Vulnerability_affected_range_event_bool_exp {
	return v.Not
}

// GetOr returns Vulnerability_affected_range_event_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetOr() []*Vulnerability_affected_range_event_bool_exp {
	return v.Or
}

// GetAffected returns Vulnerability_affected_range_event_bool_exp.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetAffected() *Vulnerability_affected_bool_exp {
	return v.Affected
}

// GetAffected_id returns Vulnerability_affected_range_event_bool_exp.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetAffected_id() *Uuid_comparison_exp {
	return v.Affected_id
}

// GetDatabase_specific returns Vulnerability_affected_range_event_bool_exp.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetDatabase_specific() *Jsonb_comparison_exp {
	return v.Database_specific
}

// GetEvent returns Vulnerability_affected_range_event_bool_exp.Event, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetEvent() *String_comparison_exp {
	return v.Event
}

// GetId returns Vulnerability_affected_range_event_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetType returns Vulnerability_affected_range_event_bool_exp.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetType() *Affected_range_type_comparison_exp {
	return v.Type
}

// GetVersion returns Vulnerability_affected_range_event_bool_exp.Version, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_bool_exp) GetVersion() *String_comparison_exp {
	return v.Version
}

type Vulnerability_affected_range_event_constraint string

const (
	Vulnerability_affected_range_event_constraintAffectedRangeEventAffectedIdTypeEventVersionIdx Vulnerability_affected_range_event_constraint = "affected_range_event_affected_id_type_event_version_idx"
	Vulnerability_affected_range_event_constraintAffectedRangeEventPkey                          Vulnerability_affected_range_event_constraint = "affected_range_event_pkey"
)

type Vulnerability_affected_range_event_insert_input struct {
	Affected          *Vulnerability_affected_obj_rel_insert_input `json:"affected,omitempty"`
	Affected_id       *uuid.UUID                                   `json:"affected_id,omitempty"`
	Database_specific *json.RawMessage                             `json:"database_specific,omitempty"`
	Event             *string                                      `json:"event,omitempty"`
	Id                *uuid.UUID                                   `json:"id,omitempty"`
	Type              *types.AffectedRangeType                     `json:"type,omitempty"`
	Version           *string                                      `json:"version,omitempty"`
}

// GetAffected returns Vulnerability_affected_range_event_insert_input.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetAffected() *Vulnerability_affected_obj_rel_insert_input {
	return v.Affected
}

// GetAffected_id returns Vulnerability_affected_range_event_insert_input.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetAffected_id() *uuid.UUID {
	return v.Affected_id
}

// GetDatabase_specific returns Vulnerability_affected_range_event_insert_input.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetDatabase_specific() *json.RawMessage {
	return v.Database_specific
}

// GetEvent returns Vulnerability_affected_range_event_insert_input.Event, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetEvent() *string { return v.Event }

// GetId returns Vulnerability_affected_range_event_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetId() *uuid.UUID { return v.Id }

// GetType returns Vulnerability_affected_range_event_insert_input.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetType() *types.AffectedRangeType {
	return v.Type
}

// GetVersion returns Vulnerability_affected_range_event_insert_input.Version, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_insert_input) GetVersion() *string { return v.Version }

type Vulnerability_affected_range_event_on_conflict struct {
	Constraint     Vulnerability_affected_range_event_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_affected_range_event_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_affected_range_event_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_affected_range_event_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_on_conflict) GetConstraint() Vulnerability_affected_range_event_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_affected_range_event_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_on_conflict) GetUpdate_columns() []Vulnerability_affected_range_event_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_affected_range_event_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_range_event_on_conflict) GetWhere() *Vulnerability_affected_range_event_bool_exp {
	return v.Where
}

type Vulnerability_affected_range_event_update_column string

const (
	Vulnerability_affected_range_event_update_columnAffectedId       Vulnerability_affected_range_event_update_column = "affected_id"
	Vulnerability_affected_range_event_update_columnDatabaseSpecific Vulnerability_affected_range_event_update_column = "database_specific"
	Vulnerability_affected_range_event_update_columnEvent            Vulnerability_affected_range_event_update_column = "event"
	Vulnerability_affected_range_event_update_columnId               Vulnerability_affected_range_event_update_column = "id"
	Vulnerability_affected_range_event_update_columnType             Vulnerability_affected_range_event_update_column = "type"
	Vulnerability_affected_range_event_update_columnVersion          Vulnerability_affected_range_event_update_column = "version"
)

type Vulnerability_affected_update_column string

const (
	Vulnerability_affected_update_columnDatabaseSpecific  Vulnerability_affected_update_column = "database_specific"
	Vulnerability_affected_update_columnEcosystemSpecific Vulnerability_affected_update_column = "ecosystem_specific"
	Vulnerability_affected_update_columnId                Vulnerability_affected_update_column = "id"
	Vulnerability_affected_update_columnPackageId         Vulnerability_affected_update_column = "package_id"
	Vulnerability_affected_update_columnVulnerabilityId   Vulnerability_affected_update_column = "vulnerability_id"
)

type Vulnerability_affected_version_arr_rel_insert_input struct {
	Data        []*Vulnerability_affected_version_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_affected_version_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_affected_version_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_arr_rel_insert_input) GetData() []*Vulnerability_affected_version_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_affected_version_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_arr_rel_insert_input) GetOn_conflict() *Vulnerability_affected_version_on_conflict {
	return v.On_conflict
}

type Vulnerability_affected_version_bool_exp struct {
	And               []*Vulnerability_affected_version_bool_exp `json:"_and,omitempty"`
	Not               *Vulnerability_affected_version_bool_exp   `json:"_not,omitempty"`
	Or                []*Vulnerability_affected_version_bool_exp `json:"_or,omitempty"`
	Affected          *Vulnerability_affected_bool_exp           `json:"affected,omitempty"`
	Affected_id       *Uuid_comparison_exp                       `json:"affected_id,omitempty"`
	Database_specific *Jsonb_comparison_exp                      `json:"database_specific,omitempty"`
	Id                *Uuid_comparison_exp                       `json:"id,omitempty"`
	Version           *String_comparison_exp                     `json:"version,omitempty"`
}

// GetAnd returns Vulnerability_affected_version_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetAnd() []*Vulnerability_affected_version_bool_exp {
	return v.And
}

// GetNot returns Vulnerability_affected_version_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetNot() *Vulnerability_affected_version_bool_exp {
	return v.Not
}

// GetOr returns Vulnerability_affected_version_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetOr() []*Vulnerability_affected_version_bool_exp {
	return v.Or
}

// GetAffected returns Vulnerability_affected_version_bool_exp.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetAffected() *Vulnerability_affected_bool_exp {
	return v.Affected
}

// GetAffected_id returns Vulnerability_affected_version_bool_exp.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetAffected_id() *Uuid_comparison_exp {
	return v.Affected_id
}

// GetDatabase_specific returns Vulnerability_affected_version_bool_exp.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetDatabase_specific() *Jsonb_comparison_exp {
	return v.Database_specific
}

// GetId returns Vulnerability_affected_version_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetVersion returns Vulnerability_affected_version_bool_exp.Version, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_bool_exp) GetVersion() *String_comparison_exp {
	return v.Version
}

type Vulnerability_affected_version_constraint string

const (
	Vulnerability_affected_version_constraintAffectedVersionAffectedIdTypeVersion Vulnerability_affected_version_constraint = "affected_version_affected_id_type_version"
	Vulnerability_affected_version_constraintAffectedVersionPkey                  Vulnerability_affected_version_constraint = "affected_version_pkey"
)

type Vulnerability_affected_version_insert_input struct {
	Affected          *Vulnerability_affected_obj_rel_insert_input `json:"affected,omitempty"`
	Affected_id       *uuid.UUID                                   `json:"affected_id,omitempty"`
	Database_specific *json.RawMessage                             `json:"database_specific,omitempty"`
	Id                *uuid.UUID                                   `json:"id,omitempty"`
	Version           *string                                      `json:"version,omitempty"`
}

// GetAffected returns Vulnerability_affected_version_insert_input.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_insert_input) GetAffected() *Vulnerability_affected_obj_rel_insert_input {
	return v.Affected
}

// GetAffected_id returns Vulnerability_affected_version_insert_input.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_insert_input) GetAffected_id() *uuid.UUID {
	return v.Affected_id
}

// GetDatabase_specific returns Vulnerability_affected_version_insert_input.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_insert_input) GetDatabase_specific() *json.RawMessage {
	return v.Database_specific
}

// GetId returns Vulnerability_affected_version_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_insert_input) GetId() *uuid.UUID { return v.Id }

// GetVersion returns Vulnerability_affected_version_insert_input.Version, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_insert_input) GetVersion() *string { return v.Version }

type Vulnerability_affected_version_on_conflict struct {
	Constraint     Vulnerability_affected_version_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_affected_version_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_affected_version_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_affected_version_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_on_conflict) GetConstraint() Vulnerability_affected_version_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_affected_version_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_on_conflict) GetUpdate_columns() []Vulnerability_affected_version_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_affected_version_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_affected_version_on_conflict) GetWhere() *Vulnerability_affected_version_bool_exp {
	return v.Where
}

type Vulnerability_affected_version_update_column string

const (
	Vulnerability_affected_version_update_columnAffectedId       Vulnerability_affected_version_update_column = "affected_id"
	Vulnerability_affected_version_update_columnDatabaseSpecific Vulnerability_affected_version_update_column = "database_specific"
	Vulnerability_affected_version_update_columnId               Vulnerability_affected_version_update_column = "id"
	Vulnerability_affected_version_update_columnVersion          Vulnerability_affected_version_update_column = "version"
)

type Vulnerability_bool_exp struct {
	And                     []*Vulnerability_bool_exp                 `json:"_and,omitempty"`
	Not                     *Vulnerability_bool_exp                   `json:"_not,omitempty"`
	Or                      []*Vulnerability_bool_exp                 `json:"_or,omitempty"`
	Affected                *Vulnerability_affected_bool_exp          `json:"affected,omitempty"`
	Created_at              *Timestamptz_comparison_exp               `json:"created_at,omitempty"`
	Credits                 *Vulnerability_credit_bool_exp            `json:"credits,omitempty"`
	Cvss_score              *Float_comparison_exp                     `json:"cvss_score,omitempty"`
	Cwes                    *Vulnerability_vulnerability_cwe_bool_exp `json:"cwes,omitempty"`
	Database_specific       *Jsonb_comparison_exp                     `json:"database_specific,omitempty"`
	Details                 *String_comparison_exp                    `json:"details,omitempty"`
	Epss_percentile         *Float_comparison_exp                     `json:"epss_percentile,omitempty"`
	Epss_score              *Float_comparison_exp                     `json:"epss_score,omitempty"`
	Equivalents             *Vulnerability_equivalent_bool_exp        `json:"equivalents,omitempty"`
	Findings                *Findings_bool_exp                        `json:"findings,omitempty"`
	Guide_vulnerabilities   *Guide_vulnerabilities_bool_exp           `json:"guide_vulnerabilities,omitempty"`
	Id                      *Uuid_comparison_exp                      `json:"id,omitempty"`
	Ignored_vulnerabilities *Ignored_vulnerabilities_bool_exp         `json:"ignored_vulnerabilities,omitempty"`
	Last_fetched            *Timestamptz_comparison_exp               `json:"last_fetched,omitempty"`
	Modified                *Timestamptz_comparison_exp               `json:"modified,omitempty"`
	Published               *Timestamptz_comparison_exp               `json:"published,omitempty"`
	References              *Vulnerability_reference_bool_exp         `json:"references,omitempty"`
	Reviewed_by_source      *Boolean_comparison_exp                   `json:"reviewed_by_source,omitempty"`
	Severities              *Vulnerability_severity_bool_exp          `json:"severities,omitempty"`
	Severity_name           *Severity_enum_comparison_exp             `json:"severity_name,omitempty"`
	Source                  *String_comparison_exp                    `json:"source,omitempty"`
	Source_id               *String_comparison_exp                    `json:"source_id,omitempty"`
	Summary                 *String_comparison_exp                    `json:"summary,omitempty"`
	Upstream_data           *Jsonb_comparison_exp                     `json:"upstream_data,omitempty"`
	Withdrawn               *Timestamptz_comparison_exp               `json:"withdrawn,omitempty"`
}

// GetAnd returns Vulnerability_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetAnd() []*Vulnerability_bool_exp { return v.And }

// GetNot returns Vulnerability_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetNot() *Vulnerability_bool_exp { return v.Not }

// GetOr returns Vulnerability_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetOr() []*Vulnerability_bool_exp { return v.Or }

// GetAffected returns Vulnerability_bool_exp.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetAffected() *Vulnerability_affected_bool_exp { return v.Affected }

// GetCreated_at returns Vulnerability_bool_exp.Created_at, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetCreated_at() *Timestamptz_comparison_exp { return v.Created_at }

// GetCredits returns Vulnerability_bool_exp.Credits, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetCredits() *Vulnerability_credit_bool_exp { return v.Credits }

// GetCvss_score returns Vulnerability_bool_exp.Cvss_score, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetCvss_score() *Float_comparison_exp { return v.Cvss_score }

// GetCwes returns Vulnerability_bool_exp.Cwes, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetCwes() *Vulnerability_vulnerability_cwe_bool_exp { return v.Cwes }

// GetDatabase_specific returns Vulnerability_bool_exp.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetDatabase_specific() *Jsonb_comparison_exp {
	return v.Database_specific
}

// GetDetails returns Vulnerability_bool_exp.Details, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetDetails() *String_comparison_exp { return v.Details }

// GetEpss_percentile returns Vulnerability_bool_exp.Epss_percentile, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetEpss_percentile() *Float_comparison_exp { return v.Epss_percentile }

// GetEpss_score returns Vulnerability_bool_exp.Epss_score, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetEpss_score() *Float_comparison_exp { return v.Epss_score }

// GetEquivalents returns Vulnerability_bool_exp.Equivalents, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetEquivalents() *Vulnerability_equivalent_bool_exp {
	return v.Equivalents
}

// GetFindings returns Vulnerability_bool_exp.Findings, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetFindings() *Findings_bool_exp { return v.Findings }

// GetGuide_vulnerabilities returns Vulnerability_bool_exp.Guide_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetGuide_vulnerabilities() *Guide_vulnerabilities_bool_exp {
	return v.Guide_vulnerabilities
}

// GetId returns Vulnerability_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIgnored_vulnerabilities returns Vulnerability_bool_exp.Ignored_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetIgnored_vulnerabilities() *Ignored_vulnerabilities_bool_exp {
	return v.Ignored_vulnerabilities
}

// GetLast_fetched returns Vulnerability_bool_exp.Last_fetched, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetLast_fetched() *Timestamptz_comparison_exp { return v.Last_fetched }

// GetModified returns Vulnerability_bool_exp.Modified, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetModified() *Timestamptz_comparison_exp { return v.Modified }

// GetPublished returns Vulnerability_bool_exp.Published, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetPublished() *Timestamptz_comparison_exp { return v.Published }

// GetReferences returns Vulnerability_bool_exp.References, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetReferences() *Vulnerability_reference_bool_exp {
	return v.References
}

// GetReviewed_by_source returns Vulnerability_bool_exp.Reviewed_by_source, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetReviewed_by_source() *Boolean_comparison_exp {
	return v.Reviewed_by_source
}

// GetSeverities returns Vulnerability_bool_exp.Severities, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetSeverities() *Vulnerability_severity_bool_exp {
	return v.Severities
}

// GetSeverity_name returns Vulnerability_bool_exp.Severity_name, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetSeverity_name() *Severity_enum_comparison_exp {
	return v.Severity_name
}

// GetSource returns Vulnerability_bool_exp.Source, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetSource() *String_comparison_exp { return v.Source }

// GetSource_id returns Vulnerability_bool_exp.Source_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetSource_id() *String_comparison_exp { return v.Source_id }

// GetSummary returns Vulnerability_bool_exp.Summary, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetSummary() *String_comparison_exp { return v.Summary }

// GetUpstream_data returns Vulnerability_bool_exp.Upstream_data, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetUpstream_data() *Jsonb_comparison_exp { return v.Upstream_data }

// GetWithdrawn returns Vulnerability_bool_exp.Withdrawn, and is useful for accessing the field via an interface.
func (v *Vulnerability_bool_exp) GetWithdrawn() *Timestamptz_comparison_exp { return v.Withdrawn }

type Vulnerability_constraint string

const (
	Vulnerability_constraintVulnerabilityPkey              Vulnerability_constraint = "vulnerability_pkey"
	Vulnerability_constraintVulnerabilitySourceSourceIdIdx Vulnerability_constraint = "vulnerability_source_source_id_idx"
)

type Vulnerability_credit_arr_rel_insert_input struct {
	Data        []*Vulnerability_credit_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_credit_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_credit_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_arr_rel_insert_input) GetData() []*Vulnerability_credit_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_credit_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_arr_rel_insert_input) GetOn_conflict() *Vulnerability_credit_on_conflict {
	return v.On_conflict
}

type Vulnerability_credit_bool_exp struct {
	And              []*Vulnerability_credit_bool_exp `json:"_and,omitempty"`
	Not              *Vulnerability_credit_bool_exp   `json:"_not,omitempty"`
	Or               []*Vulnerability_credit_bool_exp `json:"_or,omitempty"`
	Contact          *Text_comparison_exp             `json:"contact,omitempty"`
	Id               *Uuid_comparison_exp             `json:"id,omitempty"`
	Name             *String_comparison_exp           `json:"name,omitempty"`
	Vulnerability    *Vulnerability_bool_exp          `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp             `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Vulnerability_credit_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetAnd() []*Vulnerability_credit_bool_exp { return v.And }

// GetNot returns Vulnerability_credit_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetNot() *Vulnerability_credit_bool_exp { return v.Not }

// GetOr returns Vulnerability_credit_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetOr() []*Vulnerability_credit_bool_exp { return v.Or }

// GetContact returns Vulnerability_credit_bool_exp.Contact, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetContact() *Text_comparison_exp { return v.Contact }

// GetId returns Vulnerability_credit_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetName returns Vulnerability_credit_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetName() *String_comparison_exp { return v.Name }

// GetVulnerability returns Vulnerability_credit_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_credit_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Vulnerability_credit_constraint string

const (
	Vulnerability_credit_constraintCreditPkey                Vulnerability_credit_constraint = "credit_pkey"
	Vulnerability_credit_constraintCreditVulnerabilityIdName Vulnerability_credit_constraint = "credit_vulnerability_id_name"
)

type Vulnerability_credit_insert_input struct {
	Contact          *string                             `json:"contact,omitempty"`
	Id               *uuid.UUID                          `json:"id,omitempty"`
	Name             *string                             `json:"name,omitempty"`
	Vulnerability    *Vulnerability_obj_rel_insert_input `json:"vulnerability,omitempty"`
	Vulnerability_id *uuid.UUID                          `json:"vulnerability_id,omitempty"`
}

// GetContact returns Vulnerability_credit_insert_input.Contact, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_insert_input) GetContact() *string { return v.Contact }

// GetId returns Vulnerability_credit_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_insert_input) GetId() *uuid.UUID { return v.Id }

// GetName returns Vulnerability_credit_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_insert_input) GetName() *string { return v.Name }

// GetVulnerability returns Vulnerability_credit_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_credit_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Vulnerability_credit_on_conflict struct {
	Constraint     Vulnerability_credit_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_credit_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_credit_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_credit_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_on_conflict) GetConstraint() Vulnerability_credit_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_credit_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_on_conflict) GetUpdate_columns() []Vulnerability_credit_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_credit_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_credit_on_conflict) GetWhere() *Vulnerability_credit_bool_exp { return v.Where }

type Vulnerability_credit_update_column string

const (
	Vulnerability_credit_update_columnContact         Vulnerability_credit_update_column = "contact"
	Vulnerability_credit_update_columnId              Vulnerability_credit_update_column = "id"
	Vulnerability_credit_update_columnName            Vulnerability_credit_update_column = "name"
	Vulnerability_credit_update_columnVulnerabilityId Vulnerability_credit_update_column = "vulnerability_id"
)

type Vulnerability_cwe_bool_exp struct {
	And                  []*Vulnerability_cwe_bool_exp `json:"_and,omitempty"`
	Not                  *Vulnerability_cwe_bool_exp   `json:"_not,omitempty"`
	Or                   []*Vulnerability_cwe_bool_exp `json:"_or,omitempty"`
	Common_name          *String_comparison_exp        `json:"common_name,omitempty"`
	Description          *String_comparison_exp        `json:"description,omitempty"`
	Extended_description *String_comparison_exp        `json:"extended_description,omitempty"`
	Id                   *Int_comparison_exp           `json:"id,omitempty"`
	Name                 *String_comparison_exp        `json:"name,omitempty"`
}

// GetAnd returns Vulnerability_cwe_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetAnd() []*Vulnerability_cwe_bool_exp { return v.And }

// GetNot returns Vulnerability_cwe_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetNot() *Vulnerability_cwe_bool_exp { return v.Not }

// GetOr returns Vulnerability_cwe_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetOr() []*Vulnerability_cwe_bool_exp { return v.Or }

// GetCommon_name returns Vulnerability_cwe_bool_exp.Common_name, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetCommon_name() *String_comparison_exp { return v.Common_name }

// GetDescription returns Vulnerability_cwe_bool_exp.Description, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetDescription() *String_comparison_exp { return v.Description }

// GetExtended_description returns Vulnerability_cwe_bool_exp.Extended_description, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetExtended_description() *String_comparison_exp {
	return v.Extended_description
}

// GetId returns Vulnerability_cwe_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetId() *Int_comparison_exp { return v.Id }

// GetName returns Vulnerability_cwe_bool_exp.Name, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_bool_exp) GetName() *String_comparison_exp { return v.Name }

type Vulnerability_cwe_constraint string

const (
	Vulnerability_cwe_constraintCwePkey Vulnerability_cwe_constraint = "cwe_pkey"
)

type Vulnerability_cwe_insert_input struct {
	Common_name          *string `json:"common_name,omitempty"`
	Description          *string `json:"description,omitempty"`
	Extended_description *string `json:"extended_description,omitempty"`
	Id                   *int    `json:"id,omitempty"`
	Name                 *string `json:"name,omitempty"`
}

// GetCommon_name returns Vulnerability_cwe_insert_input.Common_name, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_insert_input) GetCommon_name() *string { return v.Common_name }

// GetDescription returns Vulnerability_cwe_insert_input.Description, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_insert_input) GetDescription() *string { return v.Description }

// GetExtended_description returns Vulnerability_cwe_insert_input.Extended_description, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_insert_input) GetExtended_description() *string {
	return v.Extended_description
}

// GetId returns Vulnerability_cwe_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_insert_input) GetId() *int { return v.Id }

// GetName returns Vulnerability_cwe_insert_input.Name, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_insert_input) GetName() *string { return v.Name }

type Vulnerability_cwe_obj_rel_insert_input struct {
	Data        *Vulnerability_cwe_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_cwe_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_cwe_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_obj_rel_insert_input) GetData() *Vulnerability_cwe_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_cwe_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_obj_rel_insert_input) GetOn_conflict() *Vulnerability_cwe_on_conflict {
	return v.On_conflict
}

type Vulnerability_cwe_on_conflict struct {
	Constraint     Vulnerability_cwe_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_cwe_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_cwe_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_cwe_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_on_conflict) GetConstraint() Vulnerability_cwe_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_cwe_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_on_conflict) GetUpdate_columns() []Vulnerability_cwe_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_cwe_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_cwe_on_conflict) GetWhere() *Vulnerability_cwe_bool_exp { return v.Where }

type Vulnerability_cwe_update_column string

const (
	Vulnerability_cwe_update_columnCommonName          Vulnerability_cwe_update_column = "common_name"
	Vulnerability_cwe_update_columnDescription         Vulnerability_cwe_update_column = "description"
	Vulnerability_cwe_update_columnExtendedDescription Vulnerability_cwe_update_column = "extended_description"
	Vulnerability_cwe_update_columnId                  Vulnerability_cwe_update_column = "id"
	Vulnerability_cwe_update_columnName                Vulnerability_cwe_update_column = "name"
)

type Vulnerability_equivalent_arr_rel_insert_input struct {
	Data        []*Vulnerability_equivalent_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_equivalent_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_equivalent_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_arr_rel_insert_input) GetData() []*Vulnerability_equivalent_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_equivalent_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_arr_rel_insert_input) GetOn_conflict() *Vulnerability_equivalent_on_conflict {
	return v.On_conflict
}

type Vulnerability_equivalent_bool_exp struct {
	And                      []*Vulnerability_equivalent_bool_exp `json:"_and,omitempty"`
	Not                      *Vulnerability_equivalent_bool_exp   `json:"_not,omitempty"`
	Or                       []*Vulnerability_equivalent_bool_exp `json:"_or,omitempty"`
	A                        *Uuid_comparison_exp                 `json:"a,omitempty"`
	B                        *Uuid_comparison_exp                 `json:"b,omitempty"`
	Equivalent_vulnerability *Vulnerability_bool_exp              `json:"equivalent_vulnerability,omitempty"`
	Vulnerability            *Vulnerability_bool_exp              `json:"vulnerability,omitempty"`
}

// GetAnd returns Vulnerability_equivalent_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetAnd() []*Vulnerability_equivalent_bool_exp {
	return v.And
}

// GetNot returns Vulnerability_equivalent_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetNot() *Vulnerability_equivalent_bool_exp { return v.Not }

// GetOr returns Vulnerability_equivalent_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetOr() []*Vulnerability_equivalent_bool_exp { return v.Or }

// GetA returns Vulnerability_equivalent_bool_exp.A, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetA() *Uuid_comparison_exp { return v.A }

// GetB returns Vulnerability_equivalent_bool_exp.B, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetB() *Uuid_comparison_exp { return v.B }

// GetEquivalent_vulnerability returns Vulnerability_equivalent_bool_exp.Equivalent_vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetEquivalent_vulnerability() *Vulnerability_bool_exp {
	return v.Equivalent_vulnerability
}

// GetVulnerability returns Vulnerability_equivalent_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

type Vulnerability_equivalent_constraint string

const (
	Vulnerability_equivalent_constraintEquivalentABIdx Vulnerability_equivalent_constraint = "equivalent_a_b_idx"
)

type Vulnerability_equivalent_insert_input struct {
	A                        *uuid.UUID                          `json:"a,omitempty"`
	B                        *uuid.UUID                          `json:"b,omitempty"`
	Equivalent_vulnerability *Vulnerability_obj_rel_insert_input `json:"equivalent_vulnerability,omitempty"`
	Vulnerability            *Vulnerability_obj_rel_insert_input `json:"vulnerability,omitempty"`
}

// GetA returns Vulnerability_equivalent_insert_input.A, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_insert_input) GetA() *uuid.UUID { return v.A }

// GetB returns Vulnerability_equivalent_insert_input.B, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_insert_input) GetB() *uuid.UUID { return v.B }

// GetEquivalent_vulnerability returns Vulnerability_equivalent_insert_input.Equivalent_vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_insert_input) GetEquivalent_vulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Equivalent_vulnerability
}

// GetVulnerability returns Vulnerability_equivalent_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

type Vulnerability_equivalent_on_conflict struct {
	Constraint     Vulnerability_equivalent_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_equivalent_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_equivalent_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_equivalent_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_on_conflict) GetConstraint() Vulnerability_equivalent_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_equivalent_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_on_conflict) GetUpdate_columns() []Vulnerability_equivalent_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_equivalent_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_equivalent_on_conflict) GetWhere() *Vulnerability_equivalent_bool_exp {
	return v.Where
}

type Vulnerability_equivalent_update_column string

const (
	Vulnerability_equivalent_update_columnA Vulnerability_equivalent_update_column = "a"
	Vulnerability_equivalent_update_columnB Vulnerability_equivalent_update_column = "b"
)

type Vulnerability_insert_input struct {
	Affected              *Vulnerability_affected_arr_rel_insert_input          `json:"affected,omitempty"`
	Created_at            *time.Time                                            `json:"created_at,omitempty"`
	Credits               *Vulnerability_credit_arr_rel_insert_input            `json:"credits,omitempty"`
	Cvss_score            *float64                                              `json:"cvss_score,omitempty"`
	Cwes                  *Vulnerability_vulnerability_cwe_arr_rel_insert_input `json:"cwes,omitempty"`
	Database_specific     *json.RawMessage                                      `json:"database_specific,omitempty"`
	Details               *string                                               `json:"details,omitempty"`
	Epss_percentile       *float64                                              `json:"epss_percentile,omitempty"`
	Epss_score            *float64                                              `json:"epss_score,omitempty"`
	Equivalents           *Vulnerability_equivalent_arr_rel_insert_input        `json:"equivalents,omitempty"`
	Findings              *Findings_arr_rel_insert_input                        `json:"findings,omitempty"`
	Guide_vulnerabilities *Guide_vulnerabilities_arr_rel_insert_input           `json:"guide_vulnerabilities,omitempty"`
	Id                    *uuid.UUID                                            `json:"id,omitempty"`
	Last_fetched          *time.Time                                            `json:"last_fetched,omitempty"`
	Modified              *time.Time                                            `json:"modified,omitempty"`
	Published             *time.Time                                            `json:"published,omitempty"`
	References            *Vulnerability_reference_arr_rel_insert_input         `json:"references,omitempty"`
	Reviewed_by_source    *bool                                                 `json:"reviewed_by_source,omitempty"`
	Severities            *Vulnerability_severity_arr_rel_insert_input          `json:"severities,omitempty"`
	Severity_name         *string                                               `json:"severity_name,omitempty"`
	Source                *string                                               `json:"source,omitempty"`
	Source_id             *string                                               `json:"source_id,omitempty"`
	Summary               *string                                               `json:"summary,omitempty"`
	Upstream_data         *json.RawMessage                                      `json:"upstream_data,omitempty"`
	Withdrawn             *time.Time                                            `json:"withdrawn,omitempty"`
}

// GetAffected returns Vulnerability_insert_input.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetAffected() *Vulnerability_affected_arr_rel_insert_input {
	return v.Affected
}

// GetCreated_at returns Vulnerability_insert_input.Created_at, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetCreated_at() *time.Time { return v.Created_at }

// GetCredits returns Vulnerability_insert_input.Credits, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetCredits() *Vulnerability_credit_arr_rel_insert_input {
	return v.Credits
}

// GetCvss_score returns Vulnerability_insert_input.Cvss_score, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetCvss_score() *float64 { return v.Cvss_score }

// GetCwes returns Vulnerability_insert_input.Cwes, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetCwes() *Vulnerability_vulnerability_cwe_arr_rel_insert_input {
	return v.Cwes
}

// GetDatabase_specific returns Vulnerability_insert_input.Database_specific, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetDatabase_specific() *json.RawMessage {
	return v.Database_specific
}

// GetDetails returns Vulnerability_insert_input.Details, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetDetails() *string { return v.Details }

// GetEpss_percentile returns Vulnerability_insert_input.Epss_percentile, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetEpss_percentile() *float64 { return v.Epss_percentile }

// GetEpss_score returns Vulnerability_insert_input.Epss_score, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetEpss_score() *float64 { return v.Epss_score }

// GetEquivalents returns Vulnerability_insert_input.Equivalents, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetEquivalents() *Vulnerability_equivalent_arr_rel_insert_input {
	return v.Equivalents
}

// GetFindings returns Vulnerability_insert_input.Findings, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetFindings() *Findings_arr_rel_insert_input { return v.Findings }

// GetGuide_vulnerabilities returns Vulnerability_insert_input.Guide_vulnerabilities, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetGuide_vulnerabilities() *Guide_vulnerabilities_arr_rel_insert_input {
	return v.Guide_vulnerabilities
}

// GetId returns Vulnerability_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetId() *uuid.UUID { return v.Id }

// GetLast_fetched returns Vulnerability_insert_input.Last_fetched, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetLast_fetched() *time.Time { return v.Last_fetched }

// GetModified returns Vulnerability_insert_input.Modified, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetModified() *time.Time { return v.Modified }

// GetPublished returns Vulnerability_insert_input.Published, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetPublished() *time.Time { return v.Published }

// GetReferences returns Vulnerability_insert_input.References, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetReferences() *Vulnerability_reference_arr_rel_insert_input {
	return v.References
}

// GetReviewed_by_source returns Vulnerability_insert_input.Reviewed_by_source, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetReviewed_by_source() *bool { return v.Reviewed_by_source }

// GetSeverities returns Vulnerability_insert_input.Severities, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetSeverities() *Vulnerability_severity_arr_rel_insert_input {
	return v.Severities
}

// GetSeverity_name returns Vulnerability_insert_input.Severity_name, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetSeverity_name() *string { return v.Severity_name }

// GetSource returns Vulnerability_insert_input.Source, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetSource() *string { return v.Source }

// GetSource_id returns Vulnerability_insert_input.Source_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetSource_id() *string { return v.Source_id }

// GetSummary returns Vulnerability_insert_input.Summary, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetSummary() *string { return v.Summary }

// GetUpstream_data returns Vulnerability_insert_input.Upstream_data, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetUpstream_data() *json.RawMessage { return v.Upstream_data }

// GetWithdrawn returns Vulnerability_insert_input.Withdrawn, and is useful for accessing the field via an interface.
func (v *Vulnerability_insert_input) GetWithdrawn() *time.Time { return v.Withdrawn }

type Vulnerability_obj_rel_insert_input struct {
	Data        *Vulnerability_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_on_conflict  `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_obj_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_obj_rel_insert_input) GetData() *Vulnerability_insert_input { return v.Data }

// GetOn_conflict returns Vulnerability_obj_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_obj_rel_insert_input) GetOn_conflict() *Vulnerability_on_conflict {
	return v.On_conflict
}

type Vulnerability_on_conflict struct {
	Constraint     Vulnerability_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_on_conflict) GetConstraint() Vulnerability_constraint { return v.Constraint }

// GetUpdate_columns returns Vulnerability_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_on_conflict) GetUpdate_columns() []Vulnerability_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_on_conflict) GetWhere() *Vulnerability_bool_exp { return v.Where }

type Vulnerability_range_arr_rel_insert_input struct {
	Data        []*Vulnerability_range_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_range_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_range_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_arr_rel_insert_input) GetData() []*Vulnerability_range_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_range_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_arr_rel_insert_input) GetOn_conflict() *Vulnerability_range_on_conflict {
	return v.On_conflict
}

type Vulnerability_range_bool_exp struct {
	And         []*Vulnerability_range_bool_exp  `json:"_and,omitempty"`
	Not         *Vulnerability_range_bool_exp    `json:"_not,omitempty"`
	Or          []*Vulnerability_range_bool_exp  `json:"_or,omitempty"`
	Affected    *Vulnerability_affected_bool_exp `json:"affected,omitempty"`
	Affected_id *Uuid_comparison_exp             `json:"affected_id,omitempty"`
	Fixed       *String_comparison_exp           `json:"fixed,omitempty"`
	Id          *Uuid_comparison_exp             `json:"id,omitempty"`
	Introduced  *String_comparison_exp           `json:"introduced,omitempty"`
}

// GetAnd returns Vulnerability_range_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetAnd() []*Vulnerability_range_bool_exp { return v.And }

// GetNot returns Vulnerability_range_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetNot() *Vulnerability_range_bool_exp { return v.Not }

// GetOr returns Vulnerability_range_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetOr() []*Vulnerability_range_bool_exp { return v.Or }

// GetAffected returns Vulnerability_range_bool_exp.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetAffected() *Vulnerability_affected_bool_exp {
	return v.Affected
}

// GetAffected_id returns Vulnerability_range_bool_exp.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetAffected_id() *Uuid_comparison_exp { return v.Affected_id }

// GetFixed returns Vulnerability_range_bool_exp.Fixed, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetFixed() *String_comparison_exp { return v.Fixed }

// GetId returns Vulnerability_range_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetIntroduced returns Vulnerability_range_bool_exp.Introduced, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_bool_exp) GetIntroduced() *String_comparison_exp { return v.Introduced }

type Vulnerability_range_constraint string

const (
	Vulnerability_range_constraintRangePkey Vulnerability_range_constraint = "range_pkey"
	Vulnerability_range_constraintRangeUniq Vulnerability_range_constraint = "range_uniq"
)

type Vulnerability_range_insert_input struct {
	Affected    *Vulnerability_affected_obj_rel_insert_input `json:"affected,omitempty"`
	Affected_id *uuid.UUID                                   `json:"affected_id,omitempty"`
	Fixed       *string                                      `json:"fixed,omitempty"`
	Id          *uuid.UUID                                   `json:"id,omitempty"`
	Introduced  *string                                      `json:"introduced,omitempty"`
}

// GetAffected returns Vulnerability_range_insert_input.Affected, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_insert_input) GetAffected() *Vulnerability_affected_obj_rel_insert_input {
	return v.Affected
}

// GetAffected_id returns Vulnerability_range_insert_input.Affected_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_insert_input) GetAffected_id() *uuid.UUID { return v.Affected_id }

// GetFixed returns Vulnerability_range_insert_input.Fixed, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_insert_input) GetFixed() *string { return v.Fixed }

// GetId returns Vulnerability_range_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_insert_input) GetId() *uuid.UUID { return v.Id }

// GetIntroduced returns Vulnerability_range_insert_input.Introduced, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_insert_input) GetIntroduced() *string { return v.Introduced }

type Vulnerability_range_on_conflict struct {
	Constraint     Vulnerability_range_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_range_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_range_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_range_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_on_conflict) GetConstraint() Vulnerability_range_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_range_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_on_conflict) GetUpdate_columns() []Vulnerability_range_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_range_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_range_on_conflict) GetWhere() *Vulnerability_range_bool_exp { return v.Where }

type Vulnerability_range_update_column string

const (
	Vulnerability_range_update_columnAffectedId Vulnerability_range_update_column = "affected_id"
	Vulnerability_range_update_columnFixed      Vulnerability_range_update_column = "fixed"
	Vulnerability_range_update_columnId         Vulnerability_range_update_column = "id"
	Vulnerability_range_update_columnIntroduced Vulnerability_range_update_column = "introduced"
)

type Vulnerability_reference_arr_rel_insert_input struct {
	Data        []*Vulnerability_reference_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_reference_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_reference_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_arr_rel_insert_input) GetData() []*Vulnerability_reference_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_reference_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_arr_rel_insert_input) GetOn_conflict() *Vulnerability_reference_on_conflict {
	return v.On_conflict
}

type Vulnerability_reference_bool_exp struct {
	And              []*Vulnerability_reference_bool_exp `json:"_and,omitempty"`
	Not              *Vulnerability_reference_bool_exp   `json:"_not,omitempty"`
	Or               []*Vulnerability_reference_bool_exp `json:"_or,omitempty"`
	Id               *Uuid_comparison_exp                `json:"id,omitempty"`
	Type             *Reference_type_comparison_exp      `json:"type,omitempty"`
	Url              *String_comparison_exp              `json:"url,omitempty"`
	Vulnerability    *Vulnerability_bool_exp             `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp                `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Vulnerability_reference_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetAnd() []*Vulnerability_reference_bool_exp { return v.And }

// GetNot returns Vulnerability_reference_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetNot() *Vulnerability_reference_bool_exp { return v.Not }

// GetOr returns Vulnerability_reference_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetOr() []*Vulnerability_reference_bool_exp { return v.Or }

// GetId returns Vulnerability_reference_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetType returns Vulnerability_reference_bool_exp.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetType() *Reference_type_comparison_exp { return v.Type }

// GetUrl returns Vulnerability_reference_bool_exp.Url, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetUrl() *String_comparison_exp { return v.Url }

// GetVulnerability returns Vulnerability_reference_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_reference_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Vulnerability_reference_constraint string

const (
	Vulnerability_reference_constraintReferencePkey                      Vulnerability_reference_constraint = "reference_pkey"
	Vulnerability_reference_constraintReferenceVulnerabilityIdTypeUrlIdx Vulnerability_reference_constraint = "reference_vulnerability_id_type_url_idx"
)

type Vulnerability_reference_insert_input struct {
	Id               *uuid.UUID                          `json:"id,omitempty"`
	Type             *types.ReferenceType                `json:"type,omitempty"`
	Url              *string                             `json:"url,omitempty"`
	Vulnerability    *Vulnerability_obj_rel_insert_input `json:"vulnerability,omitempty"`
	Vulnerability_id *uuid.UUID                          `json:"vulnerability_id,omitempty"`
}

// GetId returns Vulnerability_reference_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_insert_input) GetId() *uuid.UUID { return v.Id }

// GetType returns Vulnerability_reference_insert_input.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_insert_input) GetType() *types.ReferenceType { return v.Type }

// GetUrl returns Vulnerability_reference_insert_input.Url, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_insert_input) GetUrl() *string { return v.Url }

// GetVulnerability returns Vulnerability_reference_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_reference_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Vulnerability_reference_on_conflict struct {
	Constraint     Vulnerability_reference_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_reference_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_reference_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_reference_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_on_conflict) GetConstraint() Vulnerability_reference_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_reference_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_on_conflict) GetUpdate_columns() []Vulnerability_reference_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_reference_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_reference_on_conflict) GetWhere() *Vulnerability_reference_bool_exp {
	return v.Where
}

type Vulnerability_reference_update_column string

const (
	Vulnerability_reference_update_columnId              Vulnerability_reference_update_column = "id"
	Vulnerability_reference_update_columnType            Vulnerability_reference_update_column = "type"
	Vulnerability_reference_update_columnUrl             Vulnerability_reference_update_column = "url"
	Vulnerability_reference_update_columnVulnerabilityId Vulnerability_reference_update_column = "vulnerability_id"
)

type Vulnerability_severity_arr_rel_insert_input struct {
	Data        []*Vulnerability_severity_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_severity_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_severity_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_arr_rel_insert_input) GetData() []*Vulnerability_severity_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_severity_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_arr_rel_insert_input) GetOn_conflict() *Vulnerability_severity_on_conflict {
	return v.On_conflict
}

type Vulnerability_severity_bool_exp struct {
	And              []*Vulnerability_severity_bool_exp `json:"_and,omitempty"`
	Not              *Vulnerability_severity_bool_exp   `json:"_not,omitempty"`
	Or               []*Vulnerability_severity_bool_exp `json:"_or,omitempty"`
	Id               *Uuid_comparison_exp               `json:"id,omitempty"`
	Score            *String_comparison_exp             `json:"score,omitempty"`
	Source           *String_comparison_exp             `json:"source,omitempty"`
	Type             *String_comparison_exp             `json:"type,omitempty"`
	Vulnerability    *Vulnerability_bool_exp            `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp               `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Vulnerability_severity_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetAnd() []*Vulnerability_severity_bool_exp { return v.And }

// GetNot returns Vulnerability_severity_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetNot() *Vulnerability_severity_bool_exp { return v.Not }

// GetOr returns Vulnerability_severity_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetOr() []*Vulnerability_severity_bool_exp { return v.Or }

// GetId returns Vulnerability_severity_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetScore returns Vulnerability_severity_bool_exp.Score, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetScore() *String_comparison_exp { return v.Score }

// GetSource returns Vulnerability_severity_bool_exp.Source, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetSource() *String_comparison_exp { return v.Source }

// GetType returns Vulnerability_severity_bool_exp.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetType() *String_comparison_exp { return v.Type }

// GetVulnerability returns Vulnerability_severity_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_severity_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Vulnerability_severity_constraint string

const (
	Vulnerability_severity_constraintSeverityPkey                         Vulnerability_severity_constraint = "severity_pkey"
	Vulnerability_severity_constraintSeverityVulnerabilityIdSourceTypeIdx Vulnerability_severity_constraint = "severity_vulnerability_id_source_type_idx"
)

type Vulnerability_severity_insert_input struct {
	Id               *uuid.UUID                          `json:"id,omitempty"`
	Score            *string                             `json:"score,omitempty"`
	Source           *string                             `json:"source,omitempty"`
	Type             *string                             `json:"type,omitempty"`
	Vulnerability    *Vulnerability_obj_rel_insert_input `json:"vulnerability,omitempty"`
	Vulnerability_id *uuid.UUID                          `json:"vulnerability_id,omitempty"`
}

// GetId returns Vulnerability_severity_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetId() *uuid.UUID { return v.Id }

// GetScore returns Vulnerability_severity_insert_input.Score, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetScore() *string { return v.Score }

// GetSource returns Vulnerability_severity_insert_input.Source, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetSource() *string { return v.Source }

// GetType returns Vulnerability_severity_insert_input.Type, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetType() *string { return v.Type }

// GetVulnerability returns Vulnerability_severity_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_severity_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Vulnerability_severity_on_conflict struct {
	Constraint     Vulnerability_severity_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_severity_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_severity_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_severity_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_on_conflict) GetConstraint() Vulnerability_severity_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_severity_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_on_conflict) GetUpdate_columns() []Vulnerability_severity_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_severity_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_severity_on_conflict) GetWhere() *Vulnerability_severity_bool_exp {
	return v.Where
}

type Vulnerability_severity_update_column string

const (
	Vulnerability_severity_update_columnId              Vulnerability_severity_update_column = "id"
	Vulnerability_severity_update_columnScore           Vulnerability_severity_update_column = "score"
	Vulnerability_severity_update_columnSource          Vulnerability_severity_update_column = "source"
	Vulnerability_severity_update_columnType            Vulnerability_severity_update_column = "type"
	Vulnerability_severity_update_columnVulnerabilityId Vulnerability_severity_update_column = "vulnerability_id"
)

type Vulnerability_update_column string

const (
	Vulnerability_update_columnCreatedAt        Vulnerability_update_column = "created_at"
	Vulnerability_update_columnCvssScore        Vulnerability_update_column = "cvss_score"
	Vulnerability_update_columnDatabaseSpecific Vulnerability_update_column = "database_specific"
	Vulnerability_update_columnDetails          Vulnerability_update_column = "details"
	Vulnerability_update_columnEpssPercentile   Vulnerability_update_column = "epss_percentile"
	Vulnerability_update_columnEpssScore        Vulnerability_update_column = "epss_score"
	Vulnerability_update_columnId               Vulnerability_update_column = "id"
	Vulnerability_update_columnLastFetched      Vulnerability_update_column = "last_fetched"
	Vulnerability_update_columnModified         Vulnerability_update_column = "modified"
	Vulnerability_update_columnPublished        Vulnerability_update_column = "published"
	Vulnerability_update_columnReviewedBySource Vulnerability_update_column = "reviewed_by_source"
	Vulnerability_update_columnSeverityName     Vulnerability_update_column = "severity_name"
	Vulnerability_update_columnSource           Vulnerability_update_column = "source"
	Vulnerability_update_columnSourceId         Vulnerability_update_column = "source_id"
	Vulnerability_update_columnSummary          Vulnerability_update_column = "summary"
	Vulnerability_update_columnUpstreamData     Vulnerability_update_column = "upstream_data"
	Vulnerability_update_columnWithdrawn        Vulnerability_update_column = "withdrawn"
)

type Vulnerability_vulnerability_cwe_arr_rel_insert_input struct {
	Data        []*Vulnerability_vulnerability_cwe_insert_input `json:"data,omitempty"`
	On_conflict *Vulnerability_vulnerability_cwe_on_conflict    `json:"on_conflict,omitempty"`
}

// GetData returns Vulnerability_vulnerability_cwe_arr_rel_insert_input.Data, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_arr_rel_insert_input) GetData() []*Vulnerability_vulnerability_cwe_insert_input {
	return v.Data
}

// GetOn_conflict returns Vulnerability_vulnerability_cwe_arr_rel_insert_input.On_conflict, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_arr_rel_insert_input) GetOn_conflict() *Vulnerability_vulnerability_cwe_on_conflict {
	return v.On_conflict
}

type Vulnerability_vulnerability_cwe_bool_exp struct {
	And              []*Vulnerability_vulnerability_cwe_bool_exp `json:"_and,omitempty"`
	Not              *Vulnerability_vulnerability_cwe_bool_exp   `json:"_not,omitempty"`
	Or               []*Vulnerability_vulnerability_cwe_bool_exp `json:"_or,omitempty"`
	Cwe              *Vulnerability_cwe_bool_exp                 `json:"cwe,omitempty"`
	Cwe_id           *Int_comparison_exp                         `json:"cwe_id,omitempty"`
	Id               *Uuid_comparison_exp                        `json:"id,omitempty"`
	Vulnerability    *Vulnerability_bool_exp                     `json:"vulnerability,omitempty"`
	Vulnerability_id *Uuid_comparison_exp                        `json:"vulnerability_id,omitempty"`
}

// GetAnd returns Vulnerability_vulnerability_cwe_bool_exp.And, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetAnd() []*Vulnerability_vulnerability_cwe_bool_exp {
	return v.And
}

// GetNot returns Vulnerability_vulnerability_cwe_bool_exp.Not, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetNot() *Vulnerability_vulnerability_cwe_bool_exp {
	return v.Not
}

// GetOr returns Vulnerability_vulnerability_cwe_bool_exp.Or, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetOr() []*Vulnerability_vulnerability_cwe_bool_exp {
	return v.Or
}

// GetCwe returns Vulnerability_vulnerability_cwe_bool_exp.Cwe, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetCwe() *Vulnerability_cwe_bool_exp { return v.Cwe }

// GetCwe_id returns Vulnerability_vulnerability_cwe_bool_exp.Cwe_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetCwe_id() *Int_comparison_exp { return v.Cwe_id }

// GetId returns Vulnerability_vulnerability_cwe_bool_exp.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetId() *Uuid_comparison_exp { return v.Id }

// GetVulnerability returns Vulnerability_vulnerability_cwe_bool_exp.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetVulnerability() *Vulnerability_bool_exp {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_vulnerability_cwe_bool_exp.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_bool_exp) GetVulnerability_id() *Uuid_comparison_exp {
	return v.Vulnerability_id
}

type Vulnerability_vulnerability_cwe_constraint string

const (
	Vulnerability_vulnerability_cwe_constraintUniqueVulnerabilityCweVulnerabilityIdCweIdKey Vulnerability_vulnerability_cwe_constraint = "unique_vulnerability_cwe_vulnerability_id_cwe_id_key"
	Vulnerability_vulnerability_cwe_constraintVulnerabilityCwePkey                          Vulnerability_vulnerability_cwe_constraint = "vulnerability_cwe_pkey"
	Vulnerability_vulnerability_cwe_constraintVulnerabilityCweVulnerabilityIdCweIdKey       Vulnerability_vulnerability_cwe_constraint = "vulnerability_cwe_vulnerability_id_cwe_id_key"
)

type Vulnerability_vulnerability_cwe_insert_input struct {
	Cwe              *Vulnerability_cwe_obj_rel_insert_input `json:"cwe,omitempty"`
	Cwe_id           *int                                    `json:"cwe_id,omitempty"`
	Id               *uuid.UUID                              `json:"id,omitempty"`
	Vulnerability    *Vulnerability_obj_rel_insert_input     `json:"vulnerability,omitempty"`
	Vulnerability_id *uuid.UUID                              `json:"vulnerability_id,omitempty"`
}

// GetCwe returns Vulnerability_vulnerability_cwe_insert_input.Cwe, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_insert_input) GetCwe() *Vulnerability_cwe_obj_rel_insert_input {
	return v.Cwe
}

// GetCwe_id returns Vulnerability_vulnerability_cwe_insert_input.Cwe_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_insert_input) GetCwe_id() *int { return v.Cwe_id }

// GetId returns Vulnerability_vulnerability_cwe_insert_input.Id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_insert_input) GetId() *uuid.UUID { return v.Id }

// GetVulnerability returns Vulnerability_vulnerability_cwe_insert_input.Vulnerability, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_insert_input) GetVulnerability() *Vulnerability_obj_rel_insert_input {
	return v.Vulnerability
}

// GetVulnerability_id returns Vulnerability_vulnerability_cwe_insert_input.Vulnerability_id, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_insert_input) GetVulnerability_id() *uuid.UUID {
	return v.Vulnerability_id
}

type Vulnerability_vulnerability_cwe_on_conflict struct {
	Constraint     Vulnerability_vulnerability_cwe_constraint      `json:"constraint,omitempty"`
	Update_columns []Vulnerability_vulnerability_cwe_update_column `json:"update_columns,omitempty"`
	Where          *Vulnerability_vulnerability_cwe_bool_exp       `json:"where,omitempty"`
}

// GetConstraint returns Vulnerability_vulnerability_cwe_on_conflict.Constraint, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_on_conflict) GetConstraint() Vulnerability_vulnerability_cwe_constraint {
	return v.Constraint
}

// GetUpdate_columns returns Vulnerability_vulnerability_cwe_on_conflict.Update_columns, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_on_conflict) GetUpdate_columns() []Vulnerability_vulnerability_cwe_update_column {
	return v.Update_columns
}

// GetWhere returns Vulnerability_vulnerability_cwe_on_conflict.Where, and is useful for accessing the field via an interface.
func (v *Vulnerability_vulnerability_cwe_on_conflict) GetWhere() *Vulnerability_vulnerability_cwe_bool_exp {
	return v.Where
}

type Vulnerability_vulnerability_cwe_update_column string

const (
	Vulnerability_vulnerability_cwe_update_columnCweId           Vulnerability_vulnerability_cwe_update_column = "cwe_id"
	Vulnerability_vulnerability_cwe_update_columnId              Vulnerability_vulnerability_cwe_update_column = "id"
	Vulnerability_vulnerability_cwe_update_columnVulnerabilityId Vulnerability_vulnerability_cwe_update_column = "vulnerability_id"
)

// __DeleteBuildInput is used internally by genqlient
type __DeleteBuildInput struct {
	Id uuid.UUID `json:"id,omitempty"`
}

// GetId returns __DeleteBuildInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteBuildInput) GetId() uuid.UUID { return v.Id }

// __GetManifestDependencyEdgeInput is used internally by genqlient
type __GetManifestDependencyEdgeInput struct {
	Id uuid.UUID `json:"id,omitempty"`
}

// GetId returns __GetManifestDependencyEdgeInput.Id, and is useful for accessing the field via an interface.
func (v *__GetManifestDependencyEdgeInput) GetId() uuid.UUID { return v.Id }

// __GetVulnerabilityInput is used internally by genqlient
type __GetVulnerabilityInput struct {
	Package_name    string               `json:"package_name,omitempty"`
	Package_manager types.PackageManager `json:"package_manager,omitempty"`
}

// GetPackage_name returns __GetVulnerabilityInput.Package_name, and is useful for accessing the field via an interface.
func (v *__GetVulnerabilityInput) GetPackage_name() string { return v.Package_name }

// GetPackage_manager returns __GetVulnerabilityInput.Package_manager, and is useful for accessing the field via an interface.
func (v *__GetVulnerabilityInput) GetPackage_manager() types.PackageManager { return v.Package_manager }

// __GetVulnerabilityMetadataInput is used internally by genqlient
type __GetVulnerabilityMetadataInput struct {
	Id uuid.UUID `json:"id,omitempty"`
}

// GetId returns __GetVulnerabilityMetadataInput.Id, and is useful for accessing the field via an interface.
func (v *__GetVulnerabilityMetadataInput) GetId() uuid.UUID { return v.Id }

// __InsertManifestDependencyEdgeAnalysisInput is used internally by genqlient
type __InsertManifestDependencyEdgeAnalysisInput struct {
	Result *Analysis_manifest_dependency_edge_result_insert_input `json:"result,omitempty"`
}

// GetResult returns __InsertManifestDependencyEdgeAnalysisInput.Result, and is useful for accessing the field via an interface.
func (v *__InsertManifestDependencyEdgeAnalysisInput) GetResult() *Analysis_manifest_dependency_edge_result_insert_input {
	return v.Result
}

// __InsertNewBuildQueryInput is used internally by genqlient
type __InsertNewBuildQueryInput struct {
	Project_id *uuid.UUID `json:"project_id,omitempty"`
	S3_url     *string    `json:"s3_url,omitempty"`
	Git_remote *string    `json:"git_remote,omitempty"`
	Git_branch *string    `json:"git_branch,omitempty"`
	Git_hash   *string    `json:"git_hash,omitempty"`
}

// GetProject_id returns __InsertNewBuildQueryInput.Project_id, and is useful for accessing the field via an interface.
func (v *__InsertNewBuildQueryInput) GetProject_id() *uuid.UUID { return v.Project_id }

// GetS3_url returns __InsertNewBuildQueryInput.S3_url, and is useful for accessing the field via an interface.
func (v *__InsertNewBuildQueryInput) GetS3_url() *string { return v.S3_url }

// GetGit_remote returns __InsertNewBuildQueryInput.Git_remote, and is useful for accessing the field via an interface.
func (v *__InsertNewBuildQueryInput) GetGit_remote() *string { return v.Git_remote }

// GetGit_branch returns __InsertNewBuildQueryInput.Git_branch, and is useful for accessing the field via an interface.
func (v *__InsertNewBuildQueryInput) GetGit_branch() *string { return v.Git_branch }

// GetGit_hash returns __InsertNewBuildQueryInput.Git_hash, and is useful for accessing the field via an interface.
func (v *__InsertNewBuildQueryInput) GetGit_hash() *string { return v.Git_hash }

// __InsertVulnerabilityCWEInput is used internally by genqlient
type __InsertVulnerabilityCWEInput struct {
	Objects        []*Vulnerability_cwe_insert_input `json:"objects,omitempty"`
	Update_columns []Vulnerability_cwe_update_column `json:"update_columns,omitempty"`
}

// GetObjects returns __InsertVulnerabilityCWEInput.Objects, and is useful for accessing the field via an interface.
func (v *__InsertVulnerabilityCWEInput) GetObjects() []*Vulnerability_cwe_insert_input {
	return v.Objects
}

// GetUpdate_columns returns __InsertVulnerabilityCWEInput.Update_columns, and is useful for accessing the field via an interface.
func (v *__InsertVulnerabilityCWEInput) GetUpdate_columns() []Vulnerability_cwe_update_column {
	return v.Update_columns
}

// __PackageFetchTimeInput is used internally by genqlient
type __PackageFetchTimeInput struct {
	Package_manager *types.PackageManager `json:"package_manager,omitempty"`
	Custom_registry *string               `json:"custom_registry,omitempty"`
	Name            *string               `json:"name,omitempty"`
}

// GetPackage_manager returns __PackageFetchTimeInput.Package_manager, and is useful for accessing the field via an interface.
func (v *__PackageFetchTimeInput) GetPackage_manager() *types.PackageManager {
	return v.Package_manager
}

// GetCustom_registry returns __PackageFetchTimeInput.Custom_registry, and is useful for accessing the field via an interface.
func (v *__PackageFetchTimeInput) GetCustom_registry() *string { return v.Custom_registry }

// GetName returns __PackageFetchTimeInput.Name, and is useful for accessing the field via an interface.
func (v *__PackageFetchTimeInput) GetName() *string { return v.Name }

// __SetBuildS3UrlInput is used internally by genqlient
type __SetBuildS3UrlInput struct {
	Id     uuid.UUID `json:"id,omitempty"`
	S3_url string    `json:"s3_url,omitempty"`
}

// GetId returns __SetBuildS3UrlInput.Id, and is useful for accessing the field via an interface.
func (v *__SetBuildS3UrlInput) GetId() uuid.UUID { return v.Id }

// GetS3_url returns __SetBuildS3UrlInput.S3_url, and is useful for accessing the field via an interface.
func (v *__SetBuildS3UrlInput) GetS3_url() string { return v.S3_url }

// __UpsertPackageInput is used internally by genqlient
type __UpsertPackageInput struct {
	Object      *Package_insert_input `json:"object,omitempty"`
	On_conflict *Package_on_conflict  `json:"on_conflict,omitempty"`
}

// GetObject returns __UpsertPackageInput.Object, and is useful for accessing the field via an interface.
func (v *__UpsertPackageInput) GetObject() *Package_insert_input { return v.Object }

// GetOn_conflict returns __UpsertPackageInput.On_conflict, and is useful for accessing the field via an interface.
func (v *__UpsertPackageInput) GetOn_conflict() *Package_on_conflict { return v.On_conflict }

// __UpsertVulnerabilitiesInput is used internally by genqlient
type __UpsertVulnerabilitiesInput struct {
	Vulnerabilities           []*Vulnerability_insert_input `json:"vulnerabilities,omitempty"`
	Vulnerability_on_conflict *Vulnerability_on_conflict    `json:"vulnerability_on_conflict,omitempty"`
}

// GetVulnerabilities returns __UpsertVulnerabilitiesInput.Vulnerabilities, and is useful for accessing the field via an interface.
func (v *__UpsertVulnerabilitiesInput) GetVulnerabilities() []*Vulnerability_insert_input {
	return v.Vulnerabilities
}

// GetVulnerability_on_conflict returns __UpsertVulnerabilitiesInput.Vulnerability_on_conflict, and is useful for accessing the field via an interface.
func (v *__UpsertVulnerabilitiesInput) GetVulnerability_on_conflict() *Vulnerability_on_conflict {
	return v.Vulnerability_on_conflict
}

func DeleteBuild(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*DeleteBuildResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteBuild",
		Query: `
mutation DeleteBuild ($id: uuid!) {
	delete_builds_by_pk(id: $id) {
		id
	}
}
`,
		Variables: &__DeleteBuildInput{
			Id: id,
		},
	}
	var err error

	var data DeleteBuildResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetManifestDependencyEdge(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetManifestDependencyEdgeResponse, error) {
	req := &graphql.Request{
		OpName: "GetManifestDependencyEdge",
		Query: `
query GetManifestDependencyEdge ($id: uuid!) {
	manifest_dependency_edge_by_pk(id: $id) {
		child {
			release {
				package {
					name
				}
			}
		}
		parent {
			release {
				upstream_blob_url
				mirrored_blob_url
				version
				package {
					name
				}
			}
		}
	}
}
`,
		Variables: &__GetManifestDependencyEdgeInput{
			Id: id,
		},
	}
	var err error

	var data GetManifestDependencyEdgeResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetProjectInfoQuery(
	ctx context.Context,
	client graphql.Client,
) (*GetProjectInfoQueryResponse, error) {
	req := &graphql.Request{
		OpName: "GetProjectInfoQuery",
		Query: `
query GetProjectInfoQuery {
	project_access_tokens {
		project {
			organization_id
			id
		}
	}
}
`,
	}
	var err error

	var data GetProjectInfoQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetVulnerability(
	ctx context.Context,
	client graphql.Client,
	package_name string,
	package_manager types.PackageManager,
) (*GetVulnerabilityResponse, error) {
	req := &graphql.Request{
		OpName: "GetVulnerability",
		Query: `
query GetVulnerability ($package_name: String!, $package_manager: package_manager!) {
	vulnerability(where: {affected:{package:{name:{_eq:$package_name},package_manager:{_eq:$package_manager}}},withdrawn:{_is_null:true}}) {
		id
		affected {
			affected_range_events {
				type
				event
				version
			}
			affected_versions {
				version
			}
			package {
				name
				package_manager
			}
		}
		equivalents {
			vulnerability {
				id
				source
				source_id
			}
		}
		references {
			id
			url
		}
		source
		source_id
	}
}
`,
		Variables: &__GetVulnerabilityInput{
			Package_name:    package_name,
			Package_manager: package_manager,
		},
	}
	var err error

	var data GetVulnerabilityResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetVulnerabilityMetadata(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
) (*GetVulnerabilityMetadataResponse, error) {
	req := &graphql.Request{
		OpName: "GetVulnerabilityMetadata",
		Query: `
query GetVulnerabilityMetadata ($id: uuid!) {
	vulnerability_by_pk(id: $id) {
		id
		source
		source_id
		references {
			url
		}
		details
		affected {
			package {
				id
			}
		}
	}
}
`,
		Variables: &__GetVulnerabilityMetadataInput{
			Id: id,
		},
	}
	var err error

	var data GetVulnerabilityMetadataResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func InsertManifestDependencyEdgeAnalysis(
	ctx context.Context,
	client graphql.Client,
	result *Analysis_manifest_dependency_edge_result_insert_input,
) (*InsertManifestDependencyEdgeAnalysisResponse, error) {
	req := &graphql.Request{
		OpName: "InsertManifestDependencyEdgeAnalysis",
		Query: `
mutation InsertManifestDependencyEdgeAnalysis ($result: analysis_manifest_dependency_edge_result_insert_input!) {
	insert_analysis_manifest_dependency_edge_result_one(object: $result, on_conflict: {constraint:manifest_dependency_edge_result_manifest_dependency_edge_id_vul,update_columns:[vulnerability_id,manifest_dependency_edge_id,finding_source,finding_source_version,finding_type]}) {
		id
	}
}
`,
		Variables: &__InsertManifestDependencyEdgeAnalysisInput{
			Result: result,
		},
	}
	var err error

	var data InsertManifestDependencyEdgeAnalysisResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func InsertNewBuildQuery(
	ctx context.Context,
	client graphql.Client,
	project_id *uuid.UUID,
	s3_url *string,
	git_remote *string,
	git_branch *string,
	git_hash *string,
) (*InsertNewBuildQueryResponse, error) {
	req := &graphql.Request{
		OpName: "InsertNewBuildQuery",
		Query: `
mutation InsertNewBuildQuery ($project_id: uuid, $s3_url: String, $git_remote: String, $git_branch: String, $git_hash: String) {
	insert_builds_one(object: {project_id:$project_id,s3_url:$s3_url,git_remote:$git_remote,git_branch:$git_branch,git_hash:$git_hash}) {
		id
		agent_access_token
	}
}
`,
		Variables: &__InsertNewBuildQueryInput{
			Project_id: project_id,
			S3_url:     s3_url,
			Git_remote: git_remote,
			Git_branch: git_branch,
			Git_hash:   git_hash,
		},
	}
	var err error

	var data InsertNewBuildQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func InsertVulnerabilityCWE(
	ctx context.Context,
	client graphql.Client,
	objects []*Vulnerability_cwe_insert_input,
	update_columns []Vulnerability_cwe_update_column,
) (*InsertVulnerabilityCWEResponse, error) {
	req := &graphql.Request{
		OpName: "InsertVulnerabilityCWE",
		Query: `
mutation InsertVulnerabilityCWE ($objects: [vulnerability_cwe_insert_input!]!, $update_columns: [vulnerability_cwe_update_column!]!) {
	insert_vulnerability_cwe(objects: $objects, on_conflict: {constraint:cwe_pkey,update_columns:$update_columns}) {
		returning {
			id
		}
	}
}
`,
		Variables: &__InsertVulnerabilityCWEInput{
			Objects:        objects,
			Update_columns: update_columns,
		},
	}
	var err error

	var data InsertVulnerabilityCWEResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func PackageFetchTime(
	ctx context.Context,
	client graphql.Client,
	package_manager *types.PackageManager,
	custom_registry *string,
	name *string,
) (*PackageFetchTimeResponse, error) {
	req := &graphql.Request{
		OpName: "PackageFetchTime",
		Query: `
query PackageFetchTime ($package_manager: package_manager, $custom_registry: String, $name: String) {
	package(where: {custom_registry:{_eq:$custom_registry},name:{_eq:$name},package_manager:{_eq:$package_manager},last_successful_fetch:{_is_null:false}}, limit: 1) {
		last_successful_fetch
	}
}
`,
		Variables: &__PackageFetchTimeInput{
			Package_manager: package_manager,
			Custom_registry: custom_registry,
			Name:            name,
		},
	}
	var err error

	var data PackageFetchTimeResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func SetBuildS3Url(
	ctx context.Context,
	client graphql.Client,
	id uuid.UUID,
	s3_url string,
) (*SetBuildS3UrlResponse, error) {
	req := &graphql.Request{
		OpName: "SetBuildS3Url",
		Query: `
mutation SetBuildS3Url ($id: uuid!, $s3_url: String!) {
	update_builds_by_pk(pk_columns: {id:$id}, _set: {s3_url:$s3_url}) {
		id
	}
}
`,
		Variables: &__SetBuildS3UrlInput{
			Id:     id,
			S3_url: s3_url,
		},
	}
	var err error

	var data SetBuildS3UrlResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpsertPackage(
	ctx context.Context,
	client graphql.Client,
	object *Package_insert_input,
	on_conflict *Package_on_conflict,
) (*UpsertPackageResponse, error) {
	req := &graphql.Request{
		OpName: "UpsertPackage",
		Query: `
mutation UpsertPackage ($object: package_insert_input!, $on_conflict: package_on_conflict!) {
	insert_package_one(object: $object, on_conflict: $on_conflict) {
		id
		releases {
			id
			release_dependencies {
				id
				dependency_package {
					id
					name
					last_successful_fetch
					last_failed_fetch
				}
			}
		}
	}
}
`,
		Variables: &__UpsertPackageInput{
			Object:      object,
			On_conflict: on_conflict,
		},
	}
	var err error

	var data UpsertPackageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpsertVulnerabilities(
	ctx context.Context,
	client graphql.Client,
	vulnerabilities []*Vulnerability_insert_input,
	vulnerability_on_conflict *Vulnerability_on_conflict,
) (*UpsertVulnerabilitiesResponse, error) {
	req := &graphql.Request{
		OpName: "UpsertVulnerabilities",
		Query: `
mutation UpsertVulnerabilities ($vulnerabilities: [vulnerability_insert_input!]!, $vulnerability_on_conflict: vulnerability_on_conflict!) {
	insert_vulnerability(objects: $vulnerabilities, on_conflict: $vulnerability_on_conflict) {
		returning {
			id
		}
	}
}
`,
		Variables: &__UpsertVulnerabilitiesInput{
			Vulnerabilities:           vulnerabilities,
			Vulnerability_on_conflict: vulnerability_on_conflict,
		},
	}
	var err error

	var data UpsertVulnerabilitiesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
