
scalar uuid
scalar jsonb


type Query {
    """ get s3 presigned url for manifest upload, used by the CLI """
    presignSbomUpload(
        orgId: uuid!
        buildId: uuid!
    ): SbomUploadUrlOutput
    sbomUrl(
        buildId: uuid!
    ): String
    authenticatedRepoCloneUrl(
        repoGithubId: Int!
    ): AuthenticatedRepoCloneUrlOutput
    fakeQueryToHackHasuraBeingABuggyMess: String
    availableOrgsWithRepos: [OrgWithRepos!]
}

type Mutation {
    """ get s3 presigned url for manifest upload, used only by the frontend """
    presignManifestUpload(
        project_id: uuid!
    ): PresignedUrlResponse
    installSelectedRepos(
        orgs: [OrgsWithReposInput!]!
    ): InstallSelectedReposResponse
}

input OrgsWithReposInput {
    id: String!
    repos: [Int!]!
}

type InstallSelectedReposResponse {
    success: Boolean
}

input SbomUploadUrlInput {
    orgId: uuid!
    projectId: uuid!
}


type SbomUploadUrlOutput {
    error: Boolean!
    uploadUrl: UploadUrl
}

type PresignedUrlResponse {
    url: String!
    headers: jsonb!
    key: String!
    bucket: String!
}

type UploadUrl {
    url: String!
    headers: jsonb!
}

type AuthenticatedRepoCloneUrlOutput {
    url: String
}

type GithubRepository {
    orgName: String!
    orgId: Int!
    orgNodeId: String!
    repoName: String!
    repoId: Int!
    repoNodeId: String!
    gitUrl: String!
    ownerType: String!
    cloneUrl: String!
    defaultBranch: String!
}

type OrgWithRepos {
    organizationName: String!
    id: String!
    repos: [GithubRepository!]!
}
