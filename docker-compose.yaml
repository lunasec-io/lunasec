version: "3.8"

services:
  local-dependencies:
    image: rwgrim/docker-noop
    depends_on:
      - localstack # AWS localstack container
      - proxy
      - cdk-init # communicated with the localstack container to deploy the needed infrastructure
  demo:
    image: rwgrim/docker-noop
    depends_on:
      - local-dependencies
      - secure-frame-iframe
      - application-front-end
      - application-back-end
      - tokenizerbackend

  secure-frame-iframe:
    build:
      context: .
      dockerfile: js/docker/demo.dockerfile
      target: secure-frame-iframe
#    ports:
#      - "8000:8000"
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "curl -k http://localhost:8000"]
      interval: 10s
      timeout: 5s
      retries: 5
  application-front-end:
    hostname: application-front-end
    build:
      context: .
      dockerfile: js/docker/demo.dockerfile
      target: react-front-end
#    ports:
#      - "3000:3000"
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "curl -k http://localhost:3000"]
      interval: 10s
      timeout: 30s
      retries: 10
  application-back-end:
    hostname: application-back-end
    build:
      context: .
      dockerfile: js/docker/demo.dockerfile
      target: demo-back-end
    network_mode: host
#    ports:
#      - "3001:3001" # express
#      - "3002:3002" # graphql
#      - "3003:3003" # simple-express
#      - "3004:3004" # Not using this one yet, just figured we might need it soon
    env_file:
      - .env.docker
    healthcheck:
      test: ["CMD-SHELL", "curl -k http://localhost:3001"]
      interval: 10s
      timeout: 5s
      retries: 30
  localstack:
    container_name: localstack
    hostname: localstack
    image: localstack/localstack
#    ports:
#      - "4566:4566"
    network_mode: host
    environment:
      - SERVICES=s3,dynamodb,secretsmanager,sts,cloudformation,cloudwatch
#      - DEBUG=1
#      - DATA_DIR=/tmp/localstack
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "/tmp/localstack:/tmp/localstack"
    healthcheck:
      test: ["CMD-SHELL", "curl -k http://localhost:4566"]
      interval: 10s
      timeout: 5s
      retries: 5
  proxy:
    build:
      context: go/
      dockerfile: docker/Dockerfile.httpsproxy
    command: -s 4568 -n localhost -t 4566 -c /proxy/cert.pem -k /proxy/key.pem
    container_name: localstack_proxy
    hostname: localstack-proxy
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - ./go/scripts/proxy/:/proxy
#    ports:
#      - "4567:4566"
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "curl -k https://localhost:4566"]
      interval: 10s
      timeout: 5s
      retries: 5
  cdk-init:
    stdin_open: true
    tty: true
    env_file:
      - .env.docker
    build:
      context: go/
      dockerfile: docker/Dockerfile.lunasec
    command: --dir /lunasec_local_build deploy --local --output /config/tokenizerbackend/aws_resources.yaml
    network_mode: host
    volumes:
      - ./go/config/lunasec/:/config/lunasec/
      - ./go/config/tokenizerbackend/:/config/tokenizerbackend/
      - ./go/lunasec_local_build/:/lunasec_local_build/
    depends_on:
      proxy:
        condition: service_healthy
  tokenizerbackend:
    hostname: tokenizerbackend
    env_file:
      - .env.docker
    build:
      context: go/
      dockerfile: docker/Dockerfile.tokenizerbackend
      args:
        BUILD_TAG: dev
    volumes:
      - ./go/config/tokenizerbackend/:/config/tokenizerbackend/
#    ports:
#      - "37766:37766"
    network_mode: host
    depends_on:
      cdk-init:
        condition: service_completed_successfully
      application-back-end:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:37766"]
      interval: 10s
      timeout: 5s
      retries: 10